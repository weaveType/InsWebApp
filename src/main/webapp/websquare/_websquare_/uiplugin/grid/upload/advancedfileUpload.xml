<?xml version="1.0" encoding="UTF-8" ?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">

<head>
    <w2:type>DEFAULT</w2:type>
    <w2:buildDate />
    <xf:model>
        <xf:instance>
            <data xmlns="" />
        </xf:instance>
        <w2:dataCollection baseNode="map"></w2:dataCollection>
        <w2:workflowCollection></w2:workflowCollection>
    </xf:model>
    <style type="text/css">
    <![CDATA[
    /*
    html, body {margin:0px; padding:0px; font-family:"Malgun Gothic"; font-size:11px;}
    p {margin:0px; padding:0px;}
    img, fieldset {border:0;}
    table {width:100%; background:#fff; border-collapse:collapse; border-spacing:0; empty-cells:show;}
    table caption, table summary {width:0; height:0; font-size:0; line-height:0; overflow:hidden; visibility:hidden;}
    */
    .none {
        display: none;
    }

    .block {
        display: block;
    }

    .exup_wrap {
        width: 444px;
        min-height: 106px;
        border: 1px solid #b3b3b3;
    }

    .exup_header {
        height: 27px;
    }

    .exup_header .title {
        padding-left: 28px;
        font-weight: bold;
        line-height: 23px;
    }

    .exup_header .title2 {
        padding-left: 28px;
        font-weight: bold;
        line-height: 23px;
        float: left;
    }

    .exup_header span {
        padding-right: 20px;
        float: right;
        display: block;
    }

    .exup_header span input[type=checkbox] {
        position: relative;
        top: 1px;
    }

    /*.exup_header span table {position:relative; top:1px;}*/
    .exup_spanGroup {
        background-color: transparent;
    }

    .exup_content {
        padding: 15px 10px 12px;
    }

    .exup_content .filebox {
        padding: 8px 0 0 11px;
        width: 408px;
        height: 33px;
        border: 1px solid #d3d3d3;
        background: #f6f6f6;
    }

    .exup_content .filebox span {
        display: inline-block; 
        width: 300px; 
        height: 21px; 
        font-family: Verdana; 
        font-size: 12px; 
        background: #fff;
    }

    .exup_tbl {
        margin: 15px auto 0;
        width: 400px;
    }

    .exup_tbl th,
    .tbl td {
        min-width: 100px;
        height: 24px;
        text-align: left;
    }

    .exup_tbl th .dot {
        padding-left: 14px;
    }

    .exup_tbl td .ipt {
        width: 74px;
        height: 16px;
        /*bordeR:1px solid #abadb3;*/
    }

    .exup_tbl td .sel {
        width: 80px;
        height: 20px;
    }

    .btn_exup_file {
        margin-bottom: 14px;
        width: 90px;
        position: relative;
        left: 333px;
        border-radius: 4px;
    }
    ]]>
    </style>
    <script type="text/javascript" lazy="false">
    <![CDATA[

    window.WebSquare.excelUploadUUID = $p.getFrameId();
    scwin.sizeInfo = {};
    scwin.osName = "";
    scwin.vActionUrl = "";
    scwin.vCallbackMethod = "";
    scwin.domain = "";
    scwin.processMsg = "";
    scwin.columnIds = "";
    scwin.status = "";
    scwin.gridID = "";
    scwin.maxFileSize = -1;
    scwin.useModalDisable = "";
    scwin.useMaxByteLength = "";
    scwin.dateFormat = "";
    scwin.byteCheckEncoding = "";
    scwin.columnOrder = "";
    scwin.chunkNum = 0;
    scwin.useXHR = false;
    scwin.uploadType = 0;
    scwin.filePath = "";
    scwin.useDialog = "";
    scwin.countSkipRow = "";
    scwin.msaName = "";
    scwin.readUntilEmptyRow = "";

    scwin.Upload_ignore_spaces = "";
    scwin.Upload_include_spaces = "";
    scwin.Upload_advanced = "";
    scwin.Upload_include = "";
    scwin.Upload_not_include = "";
    scwin.Upload_fill_hidden = "";
    scwin.Upload_sheet_no = "";
    scwin.Upload_starting_row = "";
    scwin.Upload_starting_col = "";
    scwin.Upload_header = "";
    scwin.Upload_footer = "";
    scwin.Upload_file = "";
    scwin.Upload_file_choose = "";
    scwin.Upload_file_span = "";
    scwin.Upload_pwd = "";

    scwin.Upload_msg2 = "";
    scwin.Upload_msg3 = "";
    scwin.Upload_msg4 = "";
    scwin.Upload_msg5 = "";
    scwin.Upload_msg8 = "";
    scwin.Upload_msg9 = "";
    scwin.Upload_msg10 = "";
    scwin.Upload_msg11 = "";
    scwin.Upload_msg12 = "";
    scwin.Upload_msg13 = "";
    scwin.Upload_msg14 = "";
    scwin.Upload_msg15 = "";
    scwin.Upload_msg16 = "";
    scwin.Upload_msg17 = "";
    scwin.Upload_msg18 = "";
    scwin.Grid_warning9 = "";

    scwin.onpageload = function() {
        scwin.setImgURL();
        scwin.uploadInfo = $p.getParameter("popupParam");
        try {
            if (navigator.userAgent.indexOf("Windows") != -1) {
                scwin.osName = "window";
            } else if (navigator.userAgent.indexOf("Macintosh") != -1) {
                scwin.osName = "mac";
            }

            scwin.gridID = scwin.uploadInfo.gridID;
            scwin.Upload_ignore_spaces = WebSquare.language.getMessage("Upload_ignore_spaces") || "Ignore blank spaces";
            scwin.Upload_include_spaces = WebSquare.language.getMessage("Upload_include_spaces") || "Include blank spaces";
            scwin.Upload_advanced = WebSquare.language.getMessage("Upload_advanced") || "Advanced";
            scwin.Upload_hidden_values = WebSquare.language.getMessage("Upload_hidden_values") || "Hidden values";
            scwin.Upload_include = WebSquare.language.getMessage("Upload_include") || "Include";
            scwin.Upload_not_include = WebSquare.language.getMessage("Upload_not_include") || "Not include";
            scwin.Upload_fill_hidden = WebSquare.language.getMessage("Upload_fill_hidden") || "Fill Hidden";
            scwin.Upload_sheet_no = WebSquare.language.getMessage("Upload_sheet_no") || "Sheet No";
            scwin.Upload_starting_row = WebSquare.language.getMessage("Upload_starting_row") || "Start row";
            scwin.Upload_starting_col = WebSquare.language.getMessage("Upload_starting_col") || "Start col";
            scwin.Upload_header = WebSquare.language.getMessage("Upload_header") || "Header";
            scwin.Upload_footer = WebSquare.language.getMessage("Upload_footer") || "Footer";
            scwin.Upload_file = WebSquare.language.getMessage("Upload_file") || "File Upload";
            scwin.Upload_file_choose = WebSquare.language.getMessage( "Upload_file_choose" ) || "Choose File";
            scwin.Upload_file_span = WebSquare.language.getMessage( "Upload_file_span" ) || "No file chosen";
            scwin.Upload_fill = WebSquare.language.getMessage("Upload_fill") || "Fill";
            scwin.Upload_ignore = WebSquare.language.getMessage("Upload_ignore") || "Ignore";
            scwin.Upload_pwd = WebSquare.language.getMessage("Upload_pwd") || "Password";

            scwin.Upload_msg2 = WebSquare.language.getMessage("Upload_msg2") || "File size exceeding the limit.";
            scwin.Upload_msg3 = WebSquare.language.getMessage("Upload_msg3") || "Normal processing failed.";
            scwin.Upload_msg4 = WebSquare.language.getMessage("Upload_msg4") || "Check the file extension.";
            scwin.Upload_msg5 = WebSquare.language.getMessage("Upload_msg5") || "Failed to reflect on the grid.";
            scwin.Upload_msg8 = WebSquare.language.getMessage("Upload_msg8") || "The password is incorrect.";
            scwin.Upload_msg9 = WebSquare.language.getMessage("Upload_msg9") || "Check the file extension.";
            scwin.Upload_msg10 = WebSquare.language.getMessage("Upload_msg10") || "An error occurred during DRM.";
            scwin.Upload_msg11 = WebSquare.language.getMessage("Upload_msg11") || "Row count exceeding the limit.";
            scwin.Upload_msg12 = WebSquare.language.getMessage("Upload_msg12") || "Invalid file format.";
            scwin.Upload_msg13 = WebSquare.language.getMessage("Upload_msg13") || "Invalid cell format";
            scwin.Upload_msg14 = WebSquare.language.getMessage("Upload_msg14") || "Cell count exceeding the limit.";
            scwin.Upload_msg15 = WebSquare.language.getMessage("Upload_msg15") || "This file is encryped.";
            scwin.Upload_msg16 = WebSquare.language.getMessage("Upload_msg16") || "Not support Excel 5.0/7.0";
            scwin.Upload_msg17 = WebSquare.language.getMessage("Upload_msg17") || "Does not sheet number.";
            scwin.Upload_msg18 = WebSquare.language.getMessage( "Upload_msg18" ) || "It is a write-only file or an unreadable file.";

            scwin.maxFileSize = scwin.uploadInfo.maxFileSize;
            scwin.maxFileSize = parseInt(scwin.maxFileSize, 10);
            scwin.Grid_warning9 = WebSquare.language.getMessage("Grid_warning9", scwin.maxFileSize) || "Data size exceeding the limit.\n limit : %1 byte";

            setting.setValue(scwin.Upload_advanced);
            sub.render.setAttribute("excelPop_wframe_summary", scwin.Upload_ignore_spaces + "," + scwin.Upload_hidden_values + "," + scwin.Upload_fill_hidden + "," + scwin.Upload_footer);
            WebSquare.core._safeInnerHTML(advanced.render, scwin.Upload_advanced);
            WebSquare.core._safeInnerHTML(bul_title.render, scwin.Upload_file);
            choose_file.setValue(scwin.Upload_file_choose);
            choose_span.setValue(scwin.Upload_file_span);

            space_option.setValue(scwin.Upload_ignore_spaces);
            spaceSelect.render.name = "skip_space";
            scwin.sel1 = document.getElementsByName("skip_space")[0];
            scwin.sel1[0].text = scwin.Upload_ignore_spaces;
            scwin.sel1[1].text = scwin.Upload_include_spaces;
            scwin.sel1[0].value = "true";
            scwin.sel1[1].value = "false";

            start_option.setValue(scwin.Upload_starting_row);
            hidden_option.setValue(scwin.Upload_hidden_values);

            hiddenSelect.render.name = "hidden";
            scwin.sel2 = document.getElementsByName("hidden")[0];
            scwin.sel2[0].text = scwin.Upload_include;
            scwin.sel2[1].text = scwin.Upload_not_include;
            scwin.sel2[0].value = "true";
            scwin.sel2[1].value = "false";

            start_col.setValue(scwin.Upload_starting_col);
            hidden_fill.setValue(scwin.Upload_fill_hidden);

            fillHidden.render.name = "fillHidden";
            scwin.sel3 = document.getElementsByName("fillHidden")[0];
            scwin.sel3[0].text = scwin.Upload_fill;
            scwin.sel3[1].text = scwin.Upload_ignore;
            scwin.sel3[0].value = "true";
            scwin.sel3[1].value = "false";

            sheet_no.setValue(scwin.Upload_sheet_no);
            isHeader.setValue(scwin.Upload_header);

            header.render.name = "header";
            scwin.sel4 = document.getElementsByName("header")[0];
            scwin.sel4[0].text = scwin.Upload_include;
            scwin.sel4[1].text = scwin.Upload_not_include;
            scwin.sel4[0].value = "true";
            scwin.sel4[1].value = "false";

            isFooter.setValue(scwin.Upload_footer);

            footer.render.name = "footer";
            scwin.sel5 = document.getElementsByName("footer")[0];
            scwin.sel5[0].text = scwin.Upload_include;
            scwin.sel5[1].text = scwin.Upload_not_include;
            scwin.sel5[0].value = "true";
            scwin.sel5[1].value = "false";
            sendFILE.setValue(scwin.Upload_file);
            isPwd.setValue(scwin.Upload_pwd);

            scwin.sizeInfo.height = scwin.uploadInfo.sizeInfo.height;
            scwin.sizeInfo.width = scwin.uploadInfo.sizeInfo.width;
            scwin.osName = scwin.uploadInfo.osName;

            if(scwin.uploadInfo.postMsg) {
                if(scwin.uploadInfo.postMsg == "true") {
                    if(window.addEventListener) {
                        window.addEventListener ("message", scwin.receiveMessage, false);
                    } else {
                        if(window.attachEvent) {  
                            window.attachEvent("onmessage", scwin.receiveMessage);
                        }
                    }
                }
            }
            scwin.choose_file_onclick = function(e) {
                scwin.file.click();
            };
            scwin.change_span = function() {
                if (scwin.file.render.value) {
                    scwin.name = scwin.file.render.value.split("\\").pop();
                    scwin.fileName.render.textContent = scwin.name;
                }
            };
            scwin.file = filename;
            scwin.fileBtn = choose_file;
            scwin.fileName = choose_span;
            scwin.file.render.addEventListener ("change", scwin.change_span);
        } catch (e) {
            $l("exception:" + e.message);
        }

        //  header, append, hidden, columnNum, hiddenColumns, action
        scwin.advancedHidden = scwin.uploadInfo.advancedHidden;

        scwin.vheader = scwin.uploadInfo.header;
        scwin.vfooter = scwin.uploadInfo.footer;
        scwin.vappend = scwin.uploadInfo.append;
        scwin.vhidden = scwin.uploadInfo.hidden;
        scwin.vcolumnNum = scwin.uploadInfo.columnNum;
        scwin.vhiddenColumns = scwin.uploadInfo.hiddenColumns;
        scwin.vremoveColumns = scwin.uploadInfo.removeColumns;
        scwin.vheaderRows = scwin.uploadInfo.headerRows;
        scwin.actionUrl = scwin.uploadInfo.action;
        scwin.delim = scwin.uploadInfo.delim;
        scwin.gridID = scwin.uploadInfo.gridID;
        scwin.fillHidden = scwin.uploadInfo.fillHidden;
        scwin.gridStartRow = scwin.uploadInfo.gridStartRow;
        scwin.gridStartCol = scwin.uploadInfo.gridStartCol;
        scwin.gridEndCol = scwin.uploadInfo.gridEndCol;
        scwin.gridSheetNo = scwin.uploadInfo.gridSheetNo;
        scwin.gridSheetName = scwin.uploadInfo.gridSheetName;
        scwin.activeSheet = !!scwin.uploadInfo.activeSheet;
        scwin.expressionColumns = scwin.uploadInfo.expressionColumns;
        scwin.type = scwin.uploadInfo.type;
        scwin.uploadType = scwin.uploadInfo.uploadType;
        scwin.skipSpace = scwin.uploadInfo.skipSpace;
        scwin.readUntilEmptyRow = scwin.uploadInfo.readUntilEmptyRow;
        scwin.insertColumns = scwin.uploadInfo.insertColumns;
        scwin.processMsg = scwin.uploadInfo.processMsg;
        scwin.processMsg = WebSquare.text.BASE64URLDecoder(scwin.processMsg);
        scwin.dataList = scwin.uploadInfo.dataList;
        scwin.instanceBind = scwin.uploadInfo.instanceBind;
        scwin.columnIds = scwin.uploadInfo.columnIds;
        scwin.status = scwin.uploadInfo.status;
        scwin.pwdStr = scwin.uploadInfo.pwd;
        scwin.loadingMode = scwin.uploadInfo.loadingMode;
        scwin.optionParam = scwin.uploadInfo.optionParam;
        scwin.cellDataConvertor = scwin.uploadInfo.cellDataConvertor;
        scwin.decimal = scwin.uploadInfo.decimal;
        scwin.applyDecimal = scwin.uploadInfo.applyDecimal;
        scwin.useMaxByteLength = scwin.uploadInfo.useMaxByteLength;
        scwin.dateFormat = scwin.uploadInfo.dateFormat;
        scwin.byteCheckEncoding = scwin.uploadInfo.byteCheckEncoding;
        scwin.columnOrder = scwin.uploadInfo.columnOrder;
        scwin.chunkNum = scwin.uploadInfo.chunkNum || 0;
        scwin.useXHR = scwin.uploadInfo.useXHR || false;
        scwin.uploadType = scwin.uploadInfo.uploadType || 0;
        scwin.filePath = scwin.uploadInfo.filePath || "";
        scwin.useDialog = scwin.uploadInfo.useDialog || "false";
        scwin.countSkipRow = scwin.uploadInfo.countSkipRow || "";

        if (typeof scwin.skipSpace == "string") {
            scwin.skipSpace = WebSquare.util.getBoolean(scwin.skipSpace);
        }

        if (scwin.skipSpace) {
            scwin.sel1[0].selected = true;
        } else {
            scwin.sel1[1].selected = true;
        }

        if (typeof scwin.vhidden == "string") {
            scwin.vhidden = WebSquare.util.getBoolean(scwin.vhidden);
        }

        if (scwin.vhidden) {
            scwin.sel2[0].selected = true;
        } else {
            scwin.sel2[1].selected = true;
        }

        if (typeof scwin.fillHidden == "string") {
            scwin.fillHidden = WebSquare.util.getBoolean(scwin.fillHidden);
        }

        if (scwin.fillHidden) {
            scwin.sel3[0].selected = true;
        } else {
            scwin.sel3[1].selected = true;
        }

        if (typeof scwin.vheader == "string") {
            scwin.vheader = WebSquare.util.getBoolean(scwin.vheader);
        }

        if (scwin.vheader) {
            scwin.sel4[0].selected = true;
        } else {
            scwin.sel4[1].selected = true;
        }

        if (typeof scwin.vfooter == "string") {
            scwin.vfooter = WebSquare.util.getBoolean(scwin.vfooter);
        }

        if (scwin.vfooter) {
            scwin.sel5[0].selected = true;
        } else {
            scwin.sel5[1].selected = true;
        }

        columnNum.setValue(scwin.vcolumnNum);
        hiddenColumns.setValue(scwin.vhiddenColumns);
        removeColumns.setValue(scwin.vremoveColumns);
        headerRows.setValue(scwin.vheaderRows);

        // advancedHidden
        scwin.advancedSetting = advancedSetting;
        if (typeof scwin.advancedHidden == "string") {
            scwin.advancedHidden = WebSquare.util.getBoolean(scwin.advancedHidden);
        }

        if (scwin.advancedHidden) {
            scwin.advancedSetting.setStyle("display", "none");
            scwin.advancedSetting.setStyle("visibillity", "hidden");
        }

        scwin.el = WebSquare.Elem.api.getElementsByTagName(window[scwin.gridID].element, "w2:gBody");
        scwin.rows = WebSquare.Elem.api.getElementsByTagName(scwin.el[0], "w2:row");
        scwin.myrows = scwin.rows.length;
        bodyRows.setValue(scwin.myrows);
        delim.setValue(scwin.delim);

        gridStartRow.setValue(scwin.gridStartRow);
        gridStartCol.setValue(scwin.gridStartCol);
        gridEndCol.setValue(scwin.gridEndCol);
        gridSheetNo.setValue(scwin.gridSheetNo);
        gridSheetName.setValue(scwin.gridSheetName);
        activeSheet.setValue(String(scwin.activeSheet));
        expressionColumns.setValue(scwin.expressionColumns);

        var elemType = window[scwin.gridID].element._elementType;
        var gridStyleStr = "";
        if (elemType === "json") {
            gridStyleStr = WebSquare.xmljs.json2xml(window[scwin.gridID].element._element, {
                "changeKey": {
                    "w2:select": "w2:column"
                }
            });
        } else {
            gridStyleStr = WebSquare.xml.noNameSpaceSerialize(window[scwin.gridID].element._element);
        }
        gridStyle.setValue(gridStyleStr);
        insertColumns.setValue(scwin.insertColumns);

        if (scwin.pwdStr != "") {
            pwd.setValue(WebSquare.text.BASE64Decoder(scwin.pwdStr));
        }
        loadingMode.setValue(scwin.loadingMode);
        optionParam.setValue(scwin.optionParam);
        cellDataConvertor.setValue(scwin.cellDataConvertor);
        decimal.setValue(scwin.decimal);
        useMaxByteLength.setValue(scwin.useMaxByteLength);
        dateFormat.setValue(scwin.dateFormat);
        byteCheckEncoding.setValue(scwin.byteCheckEncoding);
        columnOrder.setValue(scwin.columnOrder);
        chunkNum.setValue(scwin.chunkNum);
        useXHR.setValue(scwin.useXHR);
        ignoreStartRowIndexInSAX.setValue(scwin.uploadInfo.ignoreStartRowIndexInSAX);
        ignoreStartColumnIndexInSAX.setValue(scwin.uploadInfo.ignoreStartColumnIndexInSAX);
        trim.setValue(String(scwin.uploadInfo.trim || false));
        uploadType.setValue(String(scwin.uploadInfo.uploadType || 0));
        filePath.setValue(scwin.uploadInfo.filePath);
        useDialog.setValue(scwin.uploadInfo.useDialog);
        countSkipRow.setValue(scwin.uploadInfo.countSkipRow);
        msaName.setValue(scwin.uploadInfo.msaName);
        readUntilEmptyRow.setValue(scwin.uploadInfo.readUntilEmptyRow);

        with(document.__uploadForm__) {
            action = scwin.actionUrl;
        }
    };

    scwin.onpageunload = function() {
        if(scwin.uploadInfo.postMsg == "true") {
            if(window.removeEventListener) {
                window.removeEventListener ("message", scwin.receiveMessage, false);
            } else {
                if(window.detachEvent) {  
                    window.detachEvent("onmessage", scwin.receiveMessage);
                }
            }
        }
    };

    scwin.setImgURL = function() {
        scwin.headerURL = "url(" + "'" + WebSquare.baseURI + "/_websquare_/uiplugin/grid/upload/images/bg_header.gif" + "')" + "repeat-x left top";
        scwin.titleURL = "url(" + "'" + WebSquare.baseURI + "/_websquare_/uiplugin/grid/upload/images/bul_title.gif" + "')" + "no-repeat 11px 6px";
        scwin.dotURL = "url(" + "'" + WebSquare.baseURI + "/_websquare_/uiplugin/grid/upload/images/dot.gif" + "')" + "no-repeat left center";

        bg_header.setStyle("background", scwin.headerURL);
        bul_title.setStyle("background", scwin.titleURL);
        space_option.setStyle("background", scwin.dotURL);
        start_option.setStyle("background", scwin.dotURL);
        hidden_option.setStyle("background", scwin.dotURL);
        start_col.setStyle("background", scwin.dotURL);
        hidden_fill.setStyle("background", scwin.dotURL);
        sheet_no.setStyle("background", scwin.dotURL);
        isHeader.setStyle("background", scwin.dotURL);
        isFooter.setStyle("background", scwin.dotURL);
        isPwd.setStyle("background", scwin.dotURL);
    };

    window.returnData = function(vData) {
        with(WebSquare.util.getComponentById(WebSquare.excelUploadUUID).scope) {
            if (scwin.chunkNum > 0) {
                scwin.vappend = true;
            }

            if (scwin.processMsg != "") {
                scwin.hideProcessMessage();
            }

            sendFILE.setDisabled(false);

            scwin.decPwd = "";
            pwd = $p.getComponentById("pwd");
            scwin.pwdStr = pwd.getValue();
            if (scwin.pwdStr != "") {
                scwin.decPwd = WebSquare.text.BASE64Decoder(scwin.pwdStr);
            }
            pwd.setValue(scwin.decPwd);

            scwin.doc = WebSquare.xml.parse(vData);
            scwin.exception = scwin.doc.getElementsByTagName("Exception");

            if (scwin.exception.length > 0) {
                scwin.code = scwin.getTextNodeValue(scwin.doc.getElementsByTagName("deniedCodeList")[0]);
                if (typeof scwin.code == "undefined" || scwin.code == null || scwin.code == "") {
                    scwin.code = "";
                }
                if (scwin.code == "102") {
                    scwin.msg = scwin.Upload_msg2;
                } else if (scwin.code == "101") {
                    scwin.msg = scwin.Upload_msg9;
                } else if (scwin.code == "200") {
                    scwin.msg = scwin.Upload_msg10;
                } else if (scwin.code == "201") {
                    scwin.msg = scwin.Upload_msg11;
                } else if (scwin.code == "202") {
                    scwin.msg = scwin.Upload_msg8;
                } else if (scwin.code == "203") {
                    scwin.msg = scwin.Upload_msg12;
                } else if (scwin.code == "204") {
                    scwin.msg = scwin.Upload_msg13;
                } else if (scwin.code == "205") {
                    scwin.msg = scwin.Upload_msg14;
                } else if (scwin.code == "206") {
                    scwin.msg = scwin.Upload_msg15;
                } else if (scwin.code == "207") {
                    scwin.msg = scwin.Upload_msg16;
                } else if (scwin.code == "208") {
                    scwin.msg = scwin.Upload_msg17;
                } else if( scwin.code == "209" ) {
                    scwin.msg = scwin.Upload_msg18;
                } else {
                    scwin.msg = scwin.getTextNodeValue(scwin.doc.getElementsByTagName("message")[0]);
                    if (typeof scwin.msg == "undefined" || scwin.msg == null || scwin.msg == "") {
                        scwin.msg = scwin.Upload_msg3;
                    }
                }

                alert(scwin.msg);
            } else {
                scwin.child = (scwin.doc.getElementsByTagName("array"))[0].firstChild.nodeValue;
                scwin.child = scwin.child.replaceAll("\\n", "\n");

                if (typeof scwin.vappend == "string") {
                    scwin.vappend = WebSquare.util.getBoolean(scwin.vappend);
                }

                try {

                    scwin.jsonArray = {
                        columnInfo: scwin.columnIds.split(","),
                        data: scwin.child
                    };

                    if (scwin.dataList != "") {
                        scwin.dcComp = WebSquare.util.getComponentById(scwin.dataList);
                        scwin.preCnt = scwin.dcComp.getRowCount();
                        if (scwin.uploadType == 1 || scwin.uploadType == 2) {
                            if (scwin.delim != ",") {
                                scwin.dcComp.setArrayFile(scwin.jsonArray, scwin.vappend, scwin.gridID, scwin.uploadType, scwin.delim);
                            } else {
                                scwin.dcComp.setArrayFile(scwin.jsonArray, scwin.vappend, scwin.gridID, scwin.uploadType);
                            }
                        } else if (scwin.uploadType == 0) {
                            if (scwin.delim != ",") {
                                scwin.dcComp.setArray(scwin.jsonArray, scwin.vappend, null, null, scwin.delim);
                            } else {
                                scwin.dcComp.setArray(scwin.jsonArray, scwin.vappend);
                            }
                        }

                        if (scwin.status == "C") {
                            scwin.postCnt = scwin.dcComp.getRowCount();
                            if (scwin.vappend) {
                                scwin.dcComp.modifyRangeStatus(scwin.preCnt, scwin.postCnt, "C");
                            } else {
                                scwin.dcComp.modifyRangeStatus(0, scwin.postCnt, "C");
                            }
                        }
                    } else {
                        scwin.compId = scwin.gridID;
                        scwin.gridObj = window[scwin.compId];
                        scwin.preCnt = scwin.gridObj.getRowCount();

                        if (scwin.gridObj.options.ref && (scwin.instanceBind == true || scwin.instanceBind == 'true')) {
                            scwin.gridObj.options.instanceBindBySetData = true;
                            if (scwin.uploadType == 1 || scwin.uploadType == 2) {
                                scwin.gridObj.setDataFile(scwin.child, scwin.vappend);
                            } else if (scwin.uploadType == 0) {
                                scwin.gridObj.setData(scwin.child, scwin.vappend);
                            }
                            scwin.gridObj.options.instanceBindBySetData = false;
                        } else {
                            if (scwin.uploadType == 1 || scwin.uploadType == 2) {
                                scwin.gridObj.setDataFile(scwin.child, scwin.vappend);
                            } else if (scwin.uploadType == 0) {
                                scwin.gridObj.setData(scwin.child, scwin.vappend);
                            }
                        }

                        if (scwin.status == "C") {
                            scwin.postCnt = gridObj.getRowCount();
                            if (scwin.vappend) {
                                scwin.gridObj.modifyRangeStatus(scwin.preCnt, scwin.postCnt, "C");
                            } else {
                                scwin.gridObj.modifyRangeStatus(0, scwin.postCnt, "C");
                            }
                        }
                    }

                    window[scwin.gridID]._excelUploadInfo = "";

                    scwin.fileNameDom = filename;
                    scwin.fileName = scwin.fileNameDom.getValue();
                    scwin.fileNameArr = scwin.fileName.split("\\");
                    window[scwin.gridID].fireFileReadEnd(scwin.fileNameArr[scwin.fileNameArr.length - 1]);
                } catch (e) {
                    WebSquare.exception.printStackTrace(e);
                    alert(scwin.Upload_msg5);
                }
            }
            gridStyle.setValue(null);

            scwin.extension = scwin.fileName.substring( scwin.fileName.lastIndexOf(".") + 1);
            if(scwin.loadingMode == "POI" || scwin.chunkNum == 0 || scwin.extension == "xls") {
                var form = document.getElementsByName("__uploadForm__")[0];
                if (form) {
                    form.reset();
                }
                $p.getFrame().getParent().close();
                scwin.deleteElements();
            }
        }
    };

    window.windowClose = function() {
        var form = document.getElementsByName("__uploadForm__")[0];
        if (form) {
            form.reset();
        }
        $p.getFrame().getParent().close();
        scwin.deleteElements();
    }

    scwin.deleteElements = function() {
        if (scwin.processMsg != "") {
            scwin.parentElem.removeChild(scwin.processbar2);
            scwin.parentElem.removeChild(scwin.processbar2i);
        }
        if (!scwin.find) {
            scwin.parentElem.removeChild(scwin.layerUP);
        }
    }

    scwin.receiveMessage = function(retObj) {
        try {
            if (retObj.currentTarget.WebSquare) {
                retObj && retObj.data && returnData(retObj.data);
            }
        } catch (e) {
            WebSquare.exception.printStackTrace(e);
            alert(scwin.Upload_msg5);
        }
    };

    scwin.getTextNodeValue = function(element) {
        scwin.returnValue = null;
        scwin.retValue = "";
        for (scwin.child = element.firstChild; scwin.child != null; scwin.child = scwin.child.nextSibling) {
            if (scwin.child.nodeType == 3) {
                scwin.retValue += scwin.child.nodeValue;
            }
        }

        if (scwin.retValue != "") {
            scwin.returnValue = scwin.retValue;
        }

        return scwin.returnValue;
    };

    scwin.showProcessMessage = function(processMsg) {
        try {
            if (!processMsg || processMsg == "") {
                return;
            }

            scwin.processbar2_main = document.getElementById("___processbar2");
            scwin.processbar2 = document.getElementById("___processbar2_i");
            scwin.processMsgURL = WebSquare.core.getConfiguration("processMsgURL");
            scwin.processMsgHeight = WebSquare.core.getConfiguration("processMsgHeight");
            scwin.processMsgWidth = WebSquare.core.getConfiguration("processMsgWidth");
            scwin.processMsgBackground = WebSquare.core.getConfiguration("processMsgBackground");
            scwin.processMsgBackgroundColor = WebSquare.core.getConfiguration("/WebSquare/processMsgBackground/@backgroundColor");
            if (scwin.processMsgBackgroundColor == "") {
                scwin.processMsgBackgroundColor = "#112233";
            }
            if (scwin.processMsgURL == "") {
                scwin.processMsgURL = WebSquare.baseURI + WebSquare.BootLoader.inquiresPath("message/processMsg.html");
            }

            scwin.processMsgURL = scwin.processMsgURL + "?param=" + WebSquare.text.URLEncoder(processMsg);

            if (scwin.processMsgHeight == "" || scwin.processMsgWidth == "") {
                scwin.processMsgHeight = "74";
                scwin.processMsgWidth = "272";
            }

            WebSquare.layer.processMsg = processMsg;

            if (!scwin.processbar2_main) {
                scwin.node2Main = document.createElement("div");
                scwin.node2Main.id = "___processbar2";
                scwin.node2Main.className = "w2modal";
                scwin.node2Main.style.backgroundColor = scwin.processMsgBackgroundColor;
                scwin.node2Main.tabIndex = 1;
                if (scwin.processMsgBackground == "true") {
                    scwin.node2Main.style.visibility = "visible";
                } else {
                    scwin.node2Main.style.visibility = "hidden";
                }

                scwin.node2Main.style.height = document.documentElement.clientHeight + "px";
                document.body.appendChild(scwin.node2Main);

                scwin.e = scwin.e || event;
                if (scwin.e.preventDefault) {
                    if (scwin.e.type == "keydown") {
                        scwin.e.preventDefault();
                    }
                } else {
                    if (scwin.e.type == "keydown") {
                        scwin.e.returnValue = false;
                    }
                }

            } else {
                scwin.processbar2_main.tabIndex = 1;
                scwin.processbar2_main.style.zIndex = 10000;
                scwin.processbar2_main.style.display = "block";
                scwin.processbar2_main.style.top = "0px";
                scwin.processbar2_main.style.left = "0px";
            }

            if (!scwin.processbar2) {
                scwin.nTop = document.documentElement.scrollTop + document.documentElement.clientHeight / 2 - parseInt(scwin.processMsgHeight) / 2;
                scwin.nLeft = document.documentElement.scrollLeft + document.documentElement.clientWidth / 2 - parseInt(scwin.processMsgWidth) / 2;

                scwin.node2 = document.createElement("div");
                scwin.node2.id = "___processbar2_i";
                scwin.node2.style.position = "absolute";
                scwin.node2.style.top = parseInt(scwin.nTop) + "px";
                scwin.node2.style.left = parseInt(scwin.nLeft) + "px";
                scwin.node2.style.overflow = "hidden";
                scwin.node2.style.zIndex = 10001;
                scwin.node2.style.visibility = "visible";
                scwin.node2.style.height = scwin.processMsgHeight + "px";
                scwin.node2.style.width = scwin.processMsgWidth + "px";

                document.body.appendChild(scwin.node2);
                WebSquare.core._safeInnerHTML(scwin.node2, "<iframe frameborder='0' scrolling='no' name='__processbarIFrame' style='position:absolute; width:" + scwin.processMsgWidth + "px; height:" + scwin.processMsgHeight + "px; top:0px; left:0px' src='" + scwin.processMsgURL + "'></iframe>");

            } else {
                scwin.nTop = document.documentElement.scrollTop + document.documentElement.clientHeight / 2 - parseInt(scwin.processMsgHeight) / 2;
                scwin.nLeft = document.documentElement.scrollLeft + document.documentElement.clientWidth / 2 - parseInt(scwin.processMsgWidth) / 2;
                scwin.processbar2.style.top = parseInt(scwin.nTop) + "px";
                scwin.processbar2.style.left = parseInt(scwin.nLeft) + "px";
                scwin.processbar2.style.zIndex = 10001;
                window.frames["__processbarIFrame"].location.replace(scwin.processMsgURL);
                scwin.processbar2.style.display = "block";
            }
        } catch (e) {
            WebSquare.exception.printStackTrace(e);
        }
    };

    scwin.hideProcessMessage = function() {
        try {
            scwin.processbar2 = document.getElementById("___processbar2");
            scwin.processbar2i = document.getElementById("___processbar2_i");
            if (typeof scwin.processbar2 != "undefined" && scwin.processbar2 != null) {
                scwin.processbar2.style.zIndex = -1;
                scwin.processbar2.style.display = "none";
                scwin.processbar2.tabIndex = "-1";
                scwin.processbar2.textContent = '';
            }
            if (typeof scwin.processbar2i != "undefined" && scwin.processbar2i != null) {
                scwin.processbar2i.style.zIndex = -1;
                scwin.processbar2i.style.display = "none";
            }
        } catch (e) {
            WebSquare.exception.printStackTrace(e);
        }
    };
    scwin.toArray = function(str, delim) {
        if (delim == undefined) {
            delim = "\",\"";
        } else {
            delim = "\"" + delim + "\"";
        }
        if (typeof str != "string") {
            if( str === null ) {
            } else {
            }
            return [];
        }

        scwin.re = /^\[\s*\]$/g;

        if (str.match(scwin.re) != null) {
            return (new Array());
        }

        scwin.splitDataIn = str.split(delim);
        scwin.splitDataIn[0] = scwin.splitDataIn[0].substr(2);
        scwin.splitDataIn[scwin.splitDataIn.length - 1] = scwin.splitDataIn[scwin.splitDataIn.length - 1].substr(0, ((scwin.splitDataIn[scwin.splitDataIn.length - 1]).length - 2));
        return scwin.splitDataIn;
    };

    scwin.endsWith = function(str, s) {
        return str.substring(str.length - s.length, str.length) == s;
    };

    scwin.sendFILE_onclick = function(e) {
        try {
            scwin.thisForm = document.getElementsByName("__uploadForm__")[0];
            scwin.filename = filename.getValue();
            if (!scwin.filename || scwin.filename == "") {
                return false;
            }

            if (scwin.maxFileSize != -1) {
                scwin.uploadFile = document.getElementById("excelPop_wframe_filename");
                if (scwin.uploadFile && scwin.uploadFile.files) {
                    if (scwin.maxFileSize < scwin.uploadFile.files[0].size) {
                        alert(scwin.Grid_warning9);
                        return;
                    }
                }
            }

            scwin.encPwd = "";
            scwin.pwdStr = pwd.getValue();
            if (scwin.pwdStr != "") {
                scwin.encPwd = WebSquare.text.BASE64Encoder(scwin.pwdStr);
            }
            pwd.setValue(scwin.encPwd);

            scwin.isXlsFile = scwin.filename.toLowerCase().indexOf(".xls") >= 0 || scwin.filename.toLowerCase().indexOf(".cell") >= 0 || scwin.filename.toLowerCase().indexOf(".ods") >= 0 || scwin.filename.toLowerCase().indexOf(".odt") >= 0 || scwin.filename.toLowerCase().indexOf(".docx") >= 0 || scwin.filename.toLowerCase().indexOf(".doc") >= 0 || scwin.filename.toLowerCase().indexOf(".hwp") >= 0;
            scwin.isCSVFile = scwin.endsWith(scwin.filename.toLowerCase(), ".csv") || scwin.endsWith(scwin.filename.toLowerCase(), ".txt");
            scwin.isCSVType = document.__uploadForm__.action.indexOf("csvToXML") >= 0;
            if (!scwin.isXlsFile && !(scwin.isCSVFile && scwin.isCSVType)) {
                alert(scwin.Upload_msg4);
                return false;
            }

            scwin.frm = window.frames;
            scwin.find = false;
            if (!scwin.find) {
                scwin.layerUP = document.createElement("div");
                scwin.src = "";
                scwin.layerUP.style.border = "1px solid blue";
                scwin.layerUP.style.width = "100px";
                scwin.layerUP.style.height = "100px";
                scwin.layerUP.style.visibility = "hidden";
                document.body.appendChild(scwin.layerUP);
                scwin.src = WebSquare.net.getSSLBlankPage();
                WebSquare.core._safeInnerHTML(scwin.layerUP, "<iframe frameborder='0px' name='" + scwin.thisForm.target + "' scrolling='no' style='width:100px; height:100px' " + scwin.src + "></iframe>");
                scwin.parentElem = scwin.layerUP.parentElement;
            }
            scwin.showProcessMessage(scwin.processMsg);

            if (scwin.useXHR) {
                var form = document.getElementsByName("__uploadForm__");
                fileSelected = form[0].filename.files[0];

                var formData = new FormData();
                formData.append("filename", fileSelected);
                
                var paramList = form[0].getElementsByTagName("input");
                for (var i = 0; i < paramList.length; i++) {
                    formData.append(paramList[i].name, paramList[i].value);
                }

                var selList = form[0].getElementsByTagName("select");
                for (var i=0; i<selList.length; i++) {
                    formData.append(selList[i].name, selList[i].value);
                }

                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function() {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        var result = xhr.responseText;

                        var idx1 = result.indexOf("'");
                        var idx2 = result.lastIndexOf("'");
                        result = result.substring(idx1 + 1, idx2);
                        result = result.replaceAll("\\\\n", "\\n");
                        returnData(result);
                    }
                };
                xhr.open("POST", scwin.actionUrl, true);
                var fileName = encodeURIComponent(fileSelected.name);
                xhr.setRequestHeader("X-File-Name", fileName);

                var reqHeaderFuncName = WebSquare.core.getConfiguration("/WebSquare/handler/requestHeaderFunction/@value");
                if (reqHeaderFuncName != "") {
                    var reqHeaderFunc = WebSquare.util.getGlobalFunction(reqHeaderFuncName);
                    if (reqHeaderFunc) {
                        reqHeaderFunc(xhr, "excelupload");
                    }
                }

                xhr.send(formData);
            } else {
                scwin.thisForm.submit();
            }

	    sendFILE.setDisabled(true);
        } catch (e) {
            alert(e.description);
        };
    };

    scwin.crossBrowserHeight = function() {
        scwin.height = 305;
        if (WebSquare.util.isIE(6)) {
            scwin.height = 305;
        } else if (WebSquare.util.isIE(7)) {
            scwin.height = 305;
        } else if (WebSquare.util.isIE(8)) {
            scwin.height = 305;
        } else if (WebSquare.util.isIE(9)) {
            scwin.height = 305;
        } else if (WebSquare.util.isIE(10)) {
            scwin.height = 305;
        } else if (WebSquare.util.isIEAllVersion(11)) {
            scwin.height = 352;
        } else if (WebSquare.util.isFF()) {
            if (scwin.osName == "window") {
                scwin.height = 307;
            } else if (scwin.osName == "mac") {
                scwin.height = 305;
            }
        } else if (WebSquare.util.isChrome()) {
            if (navigator.userAgent.indexOf("OPR") != -1) { //opera
                if (scwin.osName == "window") {
                    scwin.height = 307;
                } else if (scwin.osName == "mac") {
                    scwin.height = 302;
                }
            } else { //chrome
                if (scwin.osName == "window") {
                    scwin.height = 355;
                } else if (scwin.osName == "mac") {
                    scwin.height = 356;
                }
            }
        } else if (WebSquare.util.isSafari()) {
            if (scwin.osName == "mac") {
                scwin.height = 303;
            }
        } else if (WebSquare.util.isOpera()) {
            if (scwin.osName == "window") {
                scwin.height = 250;
            } else if (scwin.osName == "mac") {
                scwin.height = 250;
            }
        }
        return scwin.height;
    };

    scwin.checkWidth = function() {
        if (scwin.uploadInfo.sFeatures.width == undefined) {
            return scwin.sizeInfo.width;
        } else {
            return scwin.uploadInfo.sFeatures.width;
        }
    };

    scwin.checkHeight = function(flag) {
        if (scwin.uploadInfo.sFeatures.height == undefined) {
            if (flag == true) {
                return scwin.crossBrowserHeight();
            } else {
                return scwin.sizeInfo.height;
            }
        } else {
            return scwin.uploadInfo.sFeatures.height;
        }
    };

    scwin.subcheck_oncheckboxclick = function(index, checked, value) {
        if (checked == true) {
            $p.getFrame().getParent().setSize(scwin.checkWidth(), scwin.checkHeight(true));
            sub.setStyle("display", "block");
        } else {
            $p.getFrame().getParent().setSize(scwin.checkWidth(), scwin.checkHeight(false));
            sub.setStyle("display", "none");
        }
    };
    ]]>
    </script>
</head>

<body ev:onpageload="scwin.onpageload" ev:onpageunload="scwin.onpageunload">
    <form name="__uploadForm__" method="post" action="" enctype="multipart/form-data" target="__targetFrame__">
        <xf:group id="" style="" class="exup_wrap">
            <xf:group id="bg_header" style="" class="exup_header">
                <xf:group id="advancedSetting" style="" tagname="span" class="exup_spanGroup">
                    <w2:textbox label="Advanced" id="setting" style="" for="subcheck" tagname="p" class="title2"></w2:textbox>
                    <xf:select appearance="full" id="subcheck" style="" selectedindex="-1" cols="" rows="" ref="" class="subcheck" ev:oncheckboxclick="scwin.subcheck_oncheckboxclick" tagname="" renderType="native">
                        <xf:choices>
                            <xf:item>
                                <xf:label><![CDATA[]]></xf:label>
                                <xf:value><![CDATA[]]></xf:value>
                            </xf:item>
                        </xf:choices>
                    </xf:select>
                </xf:group>
                <xf:group id="bul_title" style="" class="title" tagname="p" text="File Upload"></xf:group>
            </xf:group>
            <xf:group id="" style="" class="exup_content">
                <xf:group id="" style="" class="filebox">
                    <xf:trigger type="button" id="choose_file" style="width: 80px;height: 23px;" ev:onclick="scwin.choose_file_onclick">
                        <xf:label><![CDATA[Choose File]]></xf:label>
                    </xf:trigger>
                    <w2:span label="Insert Text" style="" id="choose_span" class="fileName">No file chosen</w2:span>
                    <xf:input adjustMaxLength="false" id="filename" name="filename" style="width:95%;display:none" type="file" class="filename"></xf:input>
                </xf:group>
                <xf:group tagname="table" id="sub" style="width:100%;" class="exup_tbl none">
                    <w2:attributes>
                    <w2:summary><![CDATA[]]></w2:summary>
                    </w2:attributes>
                    <xf:group tagname="caption" id="advanced"></xf:group>
                    <xf:group tagname="colgroup">
                        <xf:group style="width:25.00%" tagname="col"></xf:group>
                        <xf:group style="width:25.00%" tagname="col"></xf:group>
                        <xf:group style="width:25.00%" tagname="col"></xf:group>
                        <xf:group style="width:25.00%" tagname="col"></xf:group>
                    </xf:group>
                    <xf:group tagname="tr">
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="space_option" style="" for="spaceSelect" class="dot"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:select1 allOption="" appearance="minimal" chooseOption="" class="sel" direction="auto" disabled="false" disabledClass="w2selectbox_disabled" id="spaceSelect" name="skip_space" ref="" renderType="select" style="" submenuSize="auto">
                                <xf:choices>
                                    <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                                <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                            </xf:choices>
                        </xf:select1>
                        </xf:group>
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="start_option" style="" for="gridStartRow" class="dot"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:input adjustMaxLength="false" id="gridStartRow" name="gridStartRow" style="" class="ipt" type="text"></xf:input>
                        </xf:group>
                    </xf:group>
                    <xf:group tagname="tr">
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="hidden_option" style="" class="dot" for="hiddenSelect"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:select1 allOption="" appearance="minimal" chooseOption="" class="sel" direction="auto" disabled="false" disabledClass="w2selectbox_disabled" id="hiddenSelect" name="hidden" ref="" renderType="select" style="" submenuSize="auto">
                                <xf:choices>
                                    <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                                <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                            </xf:choices>
                        </xf:select1>
                    </xf:group>
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="start_col" style="" class="dot" for="gridStartCol"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:input adjustMaxLength="false" id="gridStartCol" name="gridStartCol" style="" type="text" class="ipt"></xf:input>
                        </xf:group>
                    </xf:group>
                    <xf:group tagname="tr">
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="hidden_fill" style="" class="dot" for="fillHidden"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="w2selectbox_disabled" id="fillHidden" name="fillHidden" ref="" renderType="select" style="" submenuSize="auto">
                                <xf:choices>
                                    <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                                <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                            </xf:choices>
                        </xf:select1>
                        </xf:group>
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="sheet_no" style="" for="gridSheetNo" class="dot"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:input adjustMaxLength="false" id="gridSheetNo" name="gridSheetNo" style="" type="text" class="ipt"></xf:input>
                        </xf:group>
                    </xf:group>
                    <xf:group tagname="tr">
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="isHeader" style="" for="header" class="dot"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="w2selectbox_disabled" id="header" name="header" ref="" renderType="select" style="" submenuSize="auto">
                                <xf:choices>
                                    <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                                <xf:item>
                                    <xf:label><![CDATA[new row]]></xf:label>
                                    <xf:value><![CDATA[]]></xf:value>
                                </xf:item>
                            </xf:choices>
                        </xf:select1>
                        </xf:group>
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="isFooter" style="" class="dot" for="footer"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="w2selectbox_disabled" id="footer" name="footer" ref="" renderType="select" style="" submenuSize="auto">
                                <xf:choices>
                                    <xf:item>
                                <xf:label><![CDATA[new row]]></xf:label>
                                <xf:value><![CDATA[]]></xf:value>
                            </xf:item>
                            <xf:item>
                                <xf:label><![CDATA[new row]]></xf:label>
                                <xf:value><![CDATA[]]></xf:value>
                            </xf:item>
                            </xf:choices>
                        </xf:select1>
                    </xf:group>
                    </xf:group>
                    <xf:group tagname="tr">
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                            <w2:textbox label="" id="isPwd" style="" for="pwd" class="dot"></w2:textbox>
                        </xf:group>
                        <xf:group style="" tagname="td">
                            <xf:input adjustMaxLength="false" id="pwd" name="pwd" style="" type="password" class="ipt" autocomplete="off"></xf:input>
                        </xf:group>
                        <xf:group style="" tagname="th">
                            <w2:attributes>
                                <w2:scope>row</w2:scope>
                            </w2:attributes>
                        </xf:group>
                        <xf:group style="" tagname="td"></xf:group>
                    </xf:group>
                </xf:group>
            </xf:group>
            <xf:group id="" style="" class="foot">
                <xf:group id="" style="" tagname="p">
                    <xf:trigger type="button" id="sendFILE" name="sendFILE" style="" class="btn_exup_file" ev:onclick="scwin.sendFILE_onclick">
                        <xf:label>
                            <![CDATA[File Upload]]>
                        </xf:label>
                    </xf:trigger>
                </xf:group>
            </xf:group>
        </xf:group>
        <xf:input adjustMaxLength="false" name="domain" id="domain" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="columnNum" id="columnNum" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="hiddenColumns" id="hiddenColumns" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="removeColumns" id="removeColumns" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="headerRows" id="headerRows" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="bodyRows" id="bodyRows" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="delim" id="delim" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="expressionColumns" id="expressionColumns" style="" type="hidden" initValue="CC"></xf:input>
        <xf:input adjustMaxLength="false" name="gridStyle" id="gridStyle" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="insertColumns" id="insertColumns" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="gridEndCol" id="gridEndCol" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="ignoreStartRowIndexInSAX" id="ignoreStartRowIndexInSAX" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="ignoreStartColumnIndexInSAX" id="ignoreStartColumnIndexInSAX" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="loadingMode" id="loadingMode" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="optionParam" id="optionParam" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="cellDataConvertor" id="cellDataConvertor" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="applyDecimal" id="applyDecimal" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="decimal" id="decimal" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="useMaxByteLength" id="useMaxByteLength" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="dateFormat" id="dateFormat" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="byteCheckEncoding" id="byteCheckEncoding" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="columnOrder" id="columnOrder" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="gridSheetName" id="gridSheetName" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="activeSheet" id="activeSheet" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="chunkNum" id="chunkNum" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="useXHR" id="useXHR" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="trim" id="trim" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="uploadType" id="uploadType" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="filePath" id="filePath" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="useDialog" id="useDialog" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="countSkipRow" id="countSkipRow" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="msaName" id="msaName" style="" type="hidden"></xf:input>
        <xf:input adjustMaxLength="false" name="readUntilEmptyRow" id="readUntilEmptyRow" style="" type="hidden"></xf:input>
    </form>

</body>

</html>