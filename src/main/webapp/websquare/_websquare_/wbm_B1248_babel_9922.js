"use strict";(self.webpackChunkwebpack_test=self.webpackChunkwebpack_test||[]).push([[9922],{9922:function(t,i,e){e.r(i),e.d(i,{roundRectangle:function(){return a}});var o=e(5461),n=e(5375),r=e(8971),s=e(2406),a=function(t,i,e){s.q.call(this,t,i,e)};o.q.extend(a.prototype,s.q.prototype),a.prototype.defaultOptions={pluginType:"uiplugin.roundRectangle",pluginName:"roundRectangle",x:null,y:null,width:null,height:null,arcsize:5,borderWidth:"1px",borderColor:"#000000",fillColor:"#ffffff",gradient:!1,color1:"#ffffff",color2:"#ffffff",gradientType:""},a.prototype.initialize=function(t){try{if(this.mainGU=null,this.gradientList=[],t&&(this.gradientList=WebSquare.Elem.api.getElementsByTagName(t,"gradient",n.I._XML_NAMESPACE.W2),this.gradientList.length>0)){var i=this.gradientList[0];this.options.color1=WebSquare.WebSquareparser.getAttribute(i,"color1"),this.options.color2=WebSquare.WebSquareparser.getAttribute(i,"color2"),this.options.gradientType=WebSquare.WebSquareparser.getAttribute(i,"gradientType")}}catch(t){r.Y.printStackTrace(t,null,this)}},a.prototype.toHTML=function(){try{var t=[],i=""==this.options.style?"":"style='"+this.options.style+"'",e=""==this.options.tabIndex?"":"tabIndex='"+this.options.tabIndex+"'";return t.push("<div id='"+this.id+"' "+i+" class='w2roundRectangle "+this.options.className+"' "+e+">"),t.push("</div>"),t.join("")}catch(t){r.Y.printStackTrace(t,null,this)}},a.prototype.setAction=function(){try{var t=0,i=0,e=0,o=0;t=null!=this.options.x?this.options.x:0,i=null!=this.options.y?this.options.y:0;var s=n.I.makeStyle(this.options.style);e=null!=this.options.width?this.options.width:parseInt(s.width),o=null!=this.options.height?this.options.height:parseInt(s.height),this.mainGU=new WebSquare.uiplugin.graphicUtil(this.id+"_GU",this.render),this.mainGU.drawToolkit.createRoundRect(this.id+"_graphic",this.options.borderWidth,t,i,e,o,this.options.arcsize,this.options.borderColor,this.options.fillColor,!0),""!=this.options.gradientType&&this.mainGU.drawToolkit.addLinearGradient(this.id+"_graphic",this.options.gradientType,this.options.color1,this.options.color2)}catch(t){r.Y.printStackTrace(t,null,this)}},a.prototype.gradient=function(t,i,e){try{this.mainGU.drawToolkit.addLinearGradient(this.id+"_graphic",t,i,e)}catch(t){r.Y.printStackTrace(t,null,this)}},a.prototype.setSize=function(t,i){try{this.mainGU.drawToolkit.setStyle(this.id+"_graphic",null,null,t,i)}catch(t){r.Y.printStackTrace(t,null,this)}}}}]);