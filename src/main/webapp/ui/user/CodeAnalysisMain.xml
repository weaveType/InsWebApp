<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">

	<head meta_screenName="weaveType 코드 분석">
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
				<w2:dataMap baseNode="map" id="dma_codeFiles">
					<w2:keyInfo>
						<w2:key id="modelFile" name="모델파일" dataType="text" value=""></w2:key>
						<w2:key id="controllerFile" name="컨트롤러파일" dataType="text" value=""></w2:key>
						<w2:key id="serviceFile" name="서비스파일" dataType="text" value=""></w2:key>
						<w2:key id="repositoryFile" name="레포지토리파일" dataType="text" value=""></w2:key>
						<w2:key id="modelFileName" name="모델파일명" dataType="text" value=""></w2:key>
						<w2:key id="controllerFileName" name="컨트롤러파일명" dataType="text" value=""></w2:key>
						<w2:key id="serviceFileName" name="서비스파일명" dataType="text" value=""></w2:key>
						<w2:key id="repositoryFileName" name="레포지토리파일명" dataType="text" value=""></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>
			<w2:workflowCollection></w2:workflowCollection>
			<xf:submission id="sbm_codeAnalyze" ref='data:json,{"id":"dma_codeFiles"}' target=""
				action="/InsWebApp/CA0001Analyze.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" instance="" replace=""
				errorHandler="" customHandler="" mode="asynchronous" processMsg="코드 분석 중입니다..." ev:submit=""
				ev:submitdone="scwin.sbm_codeAnalyze_submitdone" ev:submiterror="scwin.sbm_codeAnalyze_submiterror" abortTrigger="">
			</xf:submission>
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />

		<script type="text/javascript"><![CDATA[
            // 업로드된 파일들을 저장할 전역 변수
            scwin.uploadedFiles = [];
            
            scwin.onpageload = function() {
                console.log("코드분석 메인 페이지 로드됨");
                
                // 사용자 인증 정보 확인 및 설정
                scwin.initializeUserInfo();
                
                // 멀티 파일 업로드 이벤트 설정
                scwin.initializeMultiFileUpload();
            };
            
            // 사용자 정보 초기화
            scwin.initializeUserInfo = function() {
                var userId = null;
                
                // 1. ProWorks 헤더에서 사용자 정보 가져오기 시도
                try {
                    if (typeof WebSquare !== "undefined" && 
                        typeof WebSquare.WebSquareExtension !== "undefined" && 
                        typeof WebSquare.WebSquareExtension.getProworksUserHeader === "function") {
                        var userHeader = WebSquare.WebSquareExtension.getProworksUserHeader();
                        console.log("ProWorks 헤더 정보:", userHeader);
                        if (userHeader && userHeader.accountId) {
                            userId = userHeader.accountId;
                            console.log("ProWorks 헤더에서 가져온 사용자 ID:", userId);
                        }
                    }
                } catch (e) {
                    console.error("ProWorks 헤더 조회 오류:", e);
                }
                
                // 2. 쿠키에서 사용자 정보 가져오기 시도
                if (!userId) {
                    try {
                        var userInfoStr = WebSquare.cookie.getCookie("userInfo");
                        if (userInfoStr && userInfoStr !== "undefined") {
                            var userInfo = JSON.parse(userInfoStr);
                            console.log("쿠키에서 가져온 사용자 정보:", userInfo);
                            if (userInfo && userInfo.accountId) {
                                userId = userInfo.accountId;
                                console.log("쿠키에서 가져온 사용자 ID:", userId);
                            }
                        }
                    } catch (e) {
                        console.error("쿠키 조회 오류:", e);
                    }
                }
                
                // 3. 세션 스토리지에서 사용자 정보 가져오기 시도
                if (!userId && window.sessionStorage) {
                    try {
                        var sessionUserInfo = sessionStorage.getItem("userInfo");
                        if (sessionUserInfo) {
                            var sessionUser = JSON.parse(sessionUserInfo);
                            if (sessionUser && sessionUser.accountId) {
                                userId = sessionUser.accountId;
                                console.log("세션 스토리지에서 가져온 사용자 ID:", userId);
                            }
                        }
                    } catch (e) {
                        console.error("세션 스토리지 조회 오류:", e);
                    }
                }
                
                // 4. URL 파라미터에서 사용자 정보 가져오기 시도
                if (!userId) {
                    try {
                        var urlParams = new URLSearchParams(window.location.search);
                        var paramUserId = urlParams.get("userId") || urlParams.get("user_id") || urlParams.get("accountId");
                        if (paramUserId) {
                            userId = parseInt(paramUserId, 10);
                            if (!isNaN(userId)) {
                                console.log("URL 파라미터에서 가져온 사용자 ID:", userId);
                            }
                        }
                    } catch (e) {
                        console.error("URL 파라미터 조회 오류:", e);
                    }
                }
                
                // 5. 테스트용 기본값 설정 (개발 환경에서만)
                if (!userId && (window.location.hostname === "localhost" || window.location.hostname === "127.0.0.1")) {
                    userId = 1; // 테스트용 숫자 ID
                    console.warn("로컬 개발 환경에서 테스트용 사용자 ID 설정:", userId);
                }
                
                // 최종 사용자 ID 설정
                if (userId) {
                    scwin.currentUserId = userId;
                    console.log("최종 사용자 ID 설정:", userId);
                } else {
                    // 로그인이 필요한 경우
                    console.warn("사용자 ID를 찾을 수 없습니다. 로그인이 필요할 수 있습니다.");
                    scwin.currentUserId = 1; // 기본값으로 1 설정 (테스트용)
                }
            };
            
            // 멀티 파일 업로드 초기화
            scwin.initializeMultiFileUpload = function() {
                var fileInput = document.getElementById('multiFileInput');
                if (fileInput) {
                    fileInput.addEventListener('change', function(e) {
                        scwin.handleMultiFileUpload(e);
                    });
                }
                
                // 드래그 앤 드롭 이벤트 설정
                var uploadArea = document.querySelector('.upload-area');
                if (uploadArea) {
                    uploadArea.addEventListener('dragover', function(e) {
                        e.preventDefault();
                        uploadArea.classList.add('drag-over');
                    });
                    
                    uploadArea.addEventListener('dragleave', function(e) {
                        e.preventDefault();
                        uploadArea.classList.remove('drag-over');
                    });
                    
                    uploadArea.addEventListener('drop', function(e) {
                        e.preventDefault();
                        uploadArea.classList.remove('drag-over');
                        
                        var files = e.dataTransfer.files;
                        scwin.processFiles(files);
                    });
                }
                
                // 파일 목록 컨테이너에 이벤트 위임 설정
                setTimeout(function() {
                    scwin.initializeFileListEvents();
                }, 100);
            };
            
            // 파일 목록 이벤트 위임 초기화
            scwin.initializeFileListEvents = function() {
                var fileListContainer = document.querySelector('.file-list');
                if (fileListContainer && !fileListContainer._eventDelegationAdded) {
                    fileListContainer.addEventListener('click', function(e) {
                        var target = e.target;
                        var button = null;
                        var index = -1;
                        
                        // 클릭된 요소가 버튼이거나 버튼 내부 요소인지 확인
                        var currentElement = target;
                        var depth = 0;
                        while (currentElement && depth < 5) {
                            if (currentElement.classList) {
                                if (currentElement.classList.contains('btn-change-type')) {
                                    button = currentElement;
                                    break;
                                } else if (currentElement.classList.contains('btn-remove')) {
                                    button = currentElement;
                                    break;
                                }
                            }
                            currentElement = currentElement.parentNode;
                            depth++;
                        }
                        
                        if (button) {
                            // 파일 아이템에서 인덱스 찾기
                            var fileItem = button.closest('.file-item');
                            if (fileItem) {
                                var allFileItems = fileListContainer.querySelectorAll('.file-item');
                                for (var i = 0; i < allFileItems.length; i++) {
                                    if (allFileItems[i] === fileItem) {
                                        index = i;
                                        break;
                                    }
                                }
                            }
                            
                            if (index >= 0) {
                                if (button.classList.contains('btn-change-type')) {
                                    console.log('파일 타입 변경 클릭됨:', index);
                                    scwin.changeFileType(index);
                                } else if (button.classList.contains('btn-remove')) {
                                    console.log('파일 삭제 클릭됨:', index);
                                    scwin.removeFile(index);
                                }
                            }
                            
                            e.preventDefault();
                            e.stopPropagation();
                        }
                    });
                    
                    fileListContainer._eventDelegationAdded = true;
                    console.log('파일 목록 이벤트 위임 설정 완료');
                }
            };
            
            // 멀티 파일 업로드 핸들러
            scwin.handleMultiFileUpload = function(event) {
                var files = event.target.files;
                scwin.processFiles(files);
            };
            
            // 파일들 처리
            scwin.processFiles = function(files) {
                if (files.length === 0) return;
                
                console.log('선택된 파일 수:', files.length);
                
                // 기존 파일 목록 초기화
                scwin.uploadedFiles = [];
                scwin.clearDataMap();
                
                // 각 파일 처리
                for (var i = 0; i < files.length; i++) {
                    scwin.processFile(files[i], i);
                }
            };
            
            // 개별 파일 처리
            scwin.processFile = function(file, index) {
                // 파일 유효성 검사
                if (file.size > 50 * 1024) {
                    alert('파일 크기는 50KB를 초과할 수 없습니다: ' + file.name);
                    return;
                }
                
                // 파일 타입 자동 분류
                var fileType = scwin.classifyFileType(file.name);
                
                // 파일 읽기
                var reader = new FileReader();
                reader.onload = function(e) {
                    var fileContent = e.target.result;
                    
                    // 파일 정보 저장
                    var fileInfo = {
                        name: file.name,
                        type: fileType,
                        content: fileContent,
                        size: file.size
                    };
                    
                    scwin.uploadedFiles.push(fileInfo);
                    
                    // DataMap에 저장
                    scwin.saveToDataMap(fileInfo);
                    
                    // UI 업데이트
                    scwin.updateFileList();
                    
                    console.log('파일 처리 완료:', file.name, '타입:', fileType);
                    
                    // 이벤트 위임 재설정 (새로운 요소가 추가되었으므로)
                    setTimeout(function() {
                        scwin.initializeFileListEvents();
                    }, 50);
                };
                reader.readAsText(file);
            };
            
            // 파일 타입 자동 분류 (언어 중립적 범용 시스템)
            scwin.classifyFileType = function(fileName) {
                var lowerName = fileName.toLowerCase();
                var extension = fileName.split('.').pop().toLowerCase();
                
                // Frontend Code 분류 (UI/화면 관련)
                if (lowerName.includes('component') || lowerName.includes('view') || lowerName.includes('ui') || 
                    lowerName.includes('page') || lowerName.includes('screen') || lowerName.includes('template') ||
                    lowerName.includes('widget') || lowerName.includes('layout') || lowerName.includes('form') ||
                    extension === 'jsx' || extension === 'tsx' || extension === 'vue' || 
                    extension === 'html' || extension === 'css' || extension === 'scss' || extension === 'sass') {
                    return 'controller'; // Frontend → controllerFile 매핑
                }
                
                // Backend Code 분류 (서버/API/로직 관련)
                else if (lowerName.includes('server') || lowerName.includes('api') || lowerName.includes('service') || 
                         lowerName.includes('controller') || lowerName.includes('handler') || lowerName.includes('router') ||
                         lowerName.includes('endpoint') || lowerName.includes('logic') || lowerName.includes('business') ||
                         lowerName.includes('processor') || lowerName.includes('manager')) {
                    return 'service'; // Backend → serviceFile 매핑
                }
                
                // Data Code 분류 (데이터 모델/구조 관련)
                else if (lowerName.includes('model') || lowerName.includes('entity') || lowerName.includes('schema') || 
                         lowerName.includes('dto') || lowerName.includes('vo') || lowerName.includes('struct') ||
                         lowerName.includes('interface') || lowerName.includes('type') || lowerName.includes('class') ||
                         lowerName.includes('data') || lowerName.includes('domain') || lowerName.includes('bean')) {
                    return 'model'; // Data → modelFile 매핑
                }
                
                // Utility Code 분류 (유틸리티/헬퍼/기타)
                else if (lowerName.includes('util') || lowerName.includes('helper') || lowerName.includes('common') || 
                         lowerName.includes('shared') || lowerName.includes('tool') || lowerName.includes('lib') ||
                         lowerName.includes('config') || lowerName.includes('constant') || lowerName.includes('enum') ||
                         lowerName.includes('repository') || lowerName.includes('dao') || lowerName.includes('mapper') ||
                         lowerName.includes('test') || lowerName.includes('spec')) {
                    return 'repository'; // Utility → repositoryFile 매핑
                }
                
                // 확장자 기반 추가 분류
                else {
                    // 프론트엔드 확장자
                    if (extension === 'js' && (lowerName.includes('react') || lowerName.includes('angular') || lowerName.includes('client'))) {
                        return 'controller'; // Frontend
                    }
                    // 백엔드 확장자
                    else if (extension === 'py' || extension === 'rb' || extension === 'php' || extension === 'go' || 
                             extension === 'rs' || extension === 'kt' || extension === 'swift') {
                        return 'service'; // Backend
                    }
                    // 데이터 관련 확장자
                    else if (extension === 'sql' || extension === 'json' || extension === 'xml' || extension === 'yaml' || extension === 'yml') {
                        return 'model'; // Data
                    }
                    // 기본값은 파일 순서에 따라 배정 (중복 방지)
                    else {
                        var typeOrder = ['model', 'service', 'controller', 'repository']; // Data, Backend, Frontend, Utility 순서
                        var existingTypes = scwin.uploadedFiles.map(function(f) { return f.type; });
                        
                        for (var i = 0; i < typeOrder.length; i++) {
                            if (existingTypes.indexOf(typeOrder[i]) === -1) {
                                return typeOrder[i];
                            }
                        }
                        
                        return 'model'; // 모든 타입이 할당되었으면 Data Code로 기본 설정
                    }
                }
            };
            
            // DataMap에 파일 정보 저장
            scwin.saveToDataMap = function(fileInfo) {
                // 해당 타입의 기존 파일이 있으면 덮어쓰기
                dma_codeFiles.set(fileInfo.type + 'File', fileInfo.content);
                dma_codeFiles.set(fileInfo.type + 'FileName', fileInfo.name);
            };
            
            // DataMap 초기화
            scwin.clearDataMap = function() {
                var fileTypes = ['model', 'controller', 'service', 'repository'];
                fileTypes.forEach(function(type) {
                    dma_codeFiles.set(type + 'File', '');
                    dma_codeFiles.set(type + 'FileName', '');
                });
            };
            
            // 파일 목록 UI 업데이트
            scwin.updateFileList = function() {
                var fileListContainer = document.querySelector('.file-list');
                if (!fileListContainer) return;
                
                // 기존 목록 초기화
                fileListContainer.innerHTML = '';
                
                if (scwin.uploadedFiles.length === 0) {
                    fileListContainer.innerHTML = '<div class="no-files">업로드된 파일이 없습니다</div>';
                    return;
                }
                
                // 파일 목록 생성
                scwin.uploadedFiles.forEach(function(fileInfo, index) {
                    var fileItem = document.createElement('div');
                    fileItem.className = 'file-item';
                    
                    var typeLabel = scwin.getTypeLabel(fileInfo.type);
                    var sizeKB = Math.round(fileInfo.size / 1024 * 100) / 100;
                    
                    fileItem.innerHTML = 
                        '<div class="file-info">' +
                            '<div class="file-name">' + fileInfo.name + '</div>' +
                            '<div class="file-details">' +
                                '<span class="file-type">' + typeLabel + '</span>' +
                                '<span class="file-size">' + sizeKB + 'KB</span>' +
                            '</div>' +
                        '</div>' +
                        '<div class="file-actions">' +
                            '<button class="btn-change-type" type="button" title="파일 타입 변경">' +
                                '<span class="change-icon">✏️</span>' +
                            '</button>' +
                            '<button class="btn-remove" type="button" title="파일 삭제">' +
                                '<span class="remove-icon">🗑️</span>' +
                            '</button>' +
                        '</div>';
                    
                    fileListContainer.appendChild(fileItem);
                });
            };
            
            // 파일 타입 라벨 가져오기 (범용적 명칭)
            scwin.getTypeLabel = function(type) {
                var typeLabels = {
                    'model': 'Data Code (Model/Schema)',
                    'controller': 'Frontend Code (UI/View)', 
                    'service': 'Backend Code (API/Logic)',
                    'repository': 'Utility Code (Helper/Config)'
                };
                return typeLabels[type] || type;
            };
            
            // 파일 타입 변경
            scwin.changeFileType = function(index) {
                var fileInfo = scwin.uploadedFiles[index];
                var types = ['model', 'controller', 'service', 'repository'];
                var typeLabels = ['Data Code', 'Frontend Code', 'Backend Code', 'Utility Code'];
                
                var currentIndex = types.indexOf(fileInfo.type);
                var nextIndex = (currentIndex + 1) % types.length;
                
                // 기존 타입에서 제거
                dma_codeFiles.set(fileInfo.type + 'File', '');
                dma_codeFiles.set(fileInfo.type + 'FileName', '');
                
                // 새 타입으로 설정
                fileInfo.type = types[nextIndex];
                scwin.saveToDataMap(fileInfo);
                
                // UI 업데이트
                scwin.updateFileList();
                
                console.log('파일 타입 변경:', fileInfo.name, '→', fileInfo.type);
            };
            
            // 파일 제거
            scwin.removeFile = function(index) {
                var fileInfo = scwin.uploadedFiles[index];
                
                // DataMap에서 제거
                dma_codeFiles.set(fileInfo.type + 'File', '');
                dma_codeFiles.set(fileInfo.type + 'FileName', '');
                
                // 배열에서 제거
                scwin.uploadedFiles.splice(index, 1);
                
                // UI 업데이트
                scwin.updateFileList();
                
                console.log('파일 제거:', fileInfo.name);
            };
            
            // 업로드 영역 클릭 핸들러
            scwin.handleUploadAreaClick = function() {
                var fileInput = document.getElementById('multiFileInput');
                if (fileInput) {
                    fileInput.click();
                }
            };
            
            // 다음 버튼 클릭
            scwin.btn_next_onclick = function() {
                // 최소 하나의 파일이 업로드되었는지 확인
                if (scwin.uploadedFiles.length === 0) {
                    alert('최소 하나 이상의 파일을 업로드해주세요.');
                    return;
                }
                
                // 로딩 표시
                scwin.showLoading(true);
                
                // 코드 분석 API 호출
                var requestData = {
                    userId: scwin.currentUserId, // 실제로는 로그인된 사용자 ID 사용
                    modelFile: dma_codeFiles.get('modelFile') || '',
                    controllerFile: dma_codeFiles.get('controllerFile') || '',
                    serviceFile: dma_codeFiles.get('serviceFile') || '',
                    repositoryFile: dma_codeFiles.get('repositoryFile') || '',
                    modelFileName: dma_codeFiles.get('modelFileName') || '',
                    controllerFileName: dma_codeFiles.get('controllerFileName') || '',
                    serviceFileName: dma_codeFiles.get('serviceFileName') || '',
                    repositoryFileName: dma_codeFiles.get('repositoryFileName') || ''
                };
                
                // 요청 데이터를 DataMap에 설정
                for (var key in requestData) {
                    dma_codeFiles.set(key, requestData[key]);
                }
                
                // Manual AJAX 호출로 wrapper 문제 해결
                scwin.manualSubmission(requestData);
            };
            
            // Manual AJAX 호출 함수 (XMLHttpRequest 사용)
            scwin.manualSubmission = function(requestData) {
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/InsWebApp/CA0001Analyze.pwkjson', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            try {
                                var response = JSON.parse(xhr.responseText);
                                scwin.handleSubmissionSuccess(response);
                            } catch (e) {
                                console.error('JSON 파싱 오류:', e);
                                scwin.handleSubmissionError(xhr, 'parsererror', 'JSON 파싱 실패');
                            }
                        } else {
                            scwin.handleSubmissionError(xhr, 'error', 'HTTP ' + xhr.status);
                        }
                    }
                };
                
                xhr.send(JSON.stringify(requestData));
            };
            
            // 성공 핸들러
            scwin.handleSubmissionSuccess = function(response) {
                scwin.showLoading(false);
                console.log('=== 코드 분석 응답 (Manual AJAX) ===');
                console.log('응답 데이터:', response);
                
                // ProWorks5 오류 응답 체크
                if (response && response.elHeader) {
                    console.log('ProWorks5 프레임워크 응답 감지');
                    console.log('elHeader:', response.elHeader);
                    
                    var header = response.elHeader;
                    if (header.resSuc === false || header.resCode) {
                        console.error('서버 오류 발생:', header.resMsg);
                        alert('서버에서 오류가 발생했습니다: ' + header.resMsg + 
                              '\n오류 코드: ' + header.resCode + 
                              '\n서버 로그를 확인하거나 관리자에게 문의하세요.');
                        return;
                    }
                }
                
                // 정상적인 응답 체크
                if (response && response.typeCode && response.typeCode.trim() !== '') {
                    // 성공 처리
                    scwin.displayAnalysisResult(response);
                } else if (response && response.success !== false) {
                    // 성공 처리 (legacy)
                    scwin.displayAnalysisResult(response);
                } else {
                    // 오류 처리
                    var errorMsg = response ? response.message : '알 수 없는 오류가 발생했습니다.';
                    alert('코드 분석에 실패했습니다: ' + errorMsg);
                }
            };
            
            // 오류 핸들러
            scwin.handleSubmissionError = function(xhr, status, error) {
                scwin.showLoading(false);
                console.error('=== AJAX 오류 ===');
                console.error('Status:', status);
                console.error('Error:', error);
                console.error('Response:', xhr.responseText);
                
                alert('서버 통신 중 오류가 발생했습니다: ' + error);
            };
            
            // 분석 결과 표시
            scwin.displayAnalysisResult = function(data) {
                console.log('분석 결과 표시:', data);
                
                var typeDefinitions = {
                    'AI': { name: '혁신적 아키텍트', desc: '새로운 기술을 활용하여 체계적인 시스템을 구축하는 개발자' },
                    'AR': { name: '개선형 아키텍트', desc: '기존 코드를 체계적으로 개선하고 최적화하는 개발자' },
                    'BI': { name: '혁신적 빌더', desc: '새로운 기술로 빠르고 실용적인 솔루션을 만드는 개발자' },
                    'BR': { name: '실용적 빌더', desc: '기존 방식을 개선하여 효율적인 솔루션을 구축하는 개발자' }
                };
                
                var typeCode = data.typeCode || 'AR';
                var typeInfo = typeDefinitions[typeCode] || typeDefinitions['AR'];
                
                // 업로드 섹션 숨기기
                $('.upload-section').hide();
                
                // 결과 섹션 보이기
                $('.result-section').show();
                
                // 결과 데이터 설정
                $('.result-type-code').text(typeCode);
                $('.result-type-name').text(typeInfo.name);
                $('.result-type-desc').text(typeInfo.desc);
                
                // 새로운 통합 점수 체계 적용
                var devStyleScore = data.developmentStyleScore || 0;
                var devPrefScore = data.developerPreferenceScore || 0;
                var confidenceScore = data.confidenceScore || 0;
                
                // 개발 스타일 점수 표시 (-50~+50 → 절댓값으로 표시)
                $('.score-development-style').text(Math.abs(devStyleScore) + '점');
                $('.development-style-type').text(devStyleScore > 0 ? 'Architect 우세' : 'Builder 우세');
                
                // 개발자 선호도 점수 표시 (-50~+50 → 절댓값으로 표시)  
                $('.score-developer-preference').text(Math.abs(devPrefScore) + '점');
                $('.developer-preference-type').text(devPrefScore > 0 ? 'Refactor 우세' : 'Innovator 우세');
                
                // 신뢰도 표시
                $('.score-confidence').text(Math.round(confidenceScore * 100) + '%');
                
                // 결과 언어 표시
                $('.result-language').text('Detected Language: ' + (data.language || 'Unknown'));
                
                // 상세 분석 결과 표시
                scwin.displayDetailedAnalysis(data);
                
                console.log('결과 표시 완료:', typeCode, typeInfo.name);
            };
            
            // 상세 분석 결과 표시 함수
            scwin.displayDetailedAnalysis = function(data) {
                try {
                    // fullAnalysis JSON 파싱
                    var fullAnalysis = {};
                    var detailedAnalysis = {};
                    
                    if (data.analysisResult && typeof data.analysisResult === 'string') {
                        try {
                            fullAnalysis = JSON.parse(data.analysisResult);
                            detailedAnalysis = fullAnalysis.detailed_analysis || {};
                        } catch (e) {
                            console.warn('fullAnalysis JSON 파싱 실패:', e);
                        }
                    }
                    
                    // 분석 근거 표시
                    var reasoning = detailedAnalysis.reasoning || '코드 구조와 패턴을 분석하여 개발 스타일을 도출했습니다.';
                    $('.detailed-reasoning').text(reasoning);
                    
                    // 코드 패턴 표시
                    var codePatterns = detailedAnalysis.code_patterns || [];
                    var patternsHtml = '';
                    
                    if (codePatterns.length > 0) {
                        for (var i = 0; i < codePatterns.length; i++) {
                            var pattern = codePatterns[i];
                            var evidenceHtml = '';
                            
                            if (pattern.evidence && pattern.evidence.length > 0) {
                                evidenceHtml = '<ul>';
                                for (var j = 0; j < pattern.evidence.length; j++) {
                                    evidenceHtml += '<li>' + pattern.evidence[j] + '</li>';
                                }
                                evidenceHtml += '</ul>';
                            }
                            
                            var impactScore = pattern.impact_score || 0;
                            var impactBars = '';
                            for (var k = 0; k < 10; k++) {
                                impactBars += '<span class="impact-bar ' + (k < impactScore ? 'filled' : '') + '"></span>';
                            }
                            
                            patternsHtml += 
                                '<div class="pattern-item">' +
                                    '<div class="pattern-header">' +
                                        '<h4 class="pattern-title">' + (pattern.pattern || 'Code Pattern') + '</h4>' +
                                        '<div class="pattern-impact">' +
                                            '<span class="impact-label">영향도</span>' +
                                            '<div class="impact-score">' + impactBars + '</div>' +
                                            '<span class="impact-number">' + impactScore + '/10</span>' +
                                        '</div>' +
                                    '</div>' +
                                    '<p class="pattern-description">' + (pattern.description || '') + '</p>' +
                                    '<div class="pattern-evidence">' + evidenceHtml + '</div>' +
                                '</div>';
                        }
                    } else {
                        patternsHtml = '<div class="no-patterns">발견된 코드 패턴이 없습니다.</div>';
                    }
                    $('.code-patterns-list').html(patternsHtml);
                    
                    // 강점 표시
                    var strengths = detailedAnalysis.strengths || [];
                    var strengthsHtml = '';
                    
                    if (strengths.length > 0) {
                        strengthsHtml = '<ul class="strengths-list">';
                        for (var i = 0; i < strengths.length; i++) {
                            strengthsHtml += '<li class="strength-item"><span class="strength-icon">✅</span>' + strengths[i] + '</li>';
                        }
                        strengthsHtml += '</ul>';
                    } else {
                        strengthsHtml = '<div class="no-strengths">분석된 강점이 없습니다.</div>';
                    }
                    $('.strengths-content').html(strengthsHtml);
                    
                    // 개선 제안 표시
                    var suggestions = detailedAnalysis.suggestions || [];
                    var suggestionsHtml = '';
                    
                    if (suggestions.length > 0) {
                        suggestionsHtml = '<ul class="suggestions-list">';
                        for (var i = 0; i < suggestions.length; i++) {
                            suggestionsHtml += '<li class="suggestion-item"><span class="suggestion-icon">💡</span>' + suggestions[i] + '</li>';
                        }
                        suggestionsHtml += '</ul>';
                    } else {
                        suggestionsHtml = '<div class="no-suggestions">개선 제안사항이 없습니다.</div>';
                    }
                    $('.suggestions-content').html(suggestionsHtml);
                    
                    // 순차 애니메이션 적용
                    setTimeout(function() {
                        $('.detailed-section .section-item').each(function(index, element) {
                            setTimeout(function() {
                                $(element).addClass('animated');
                            }, index * 200);
                        });
                    }, 500);
                    
                    console.log('상세 분석 표시 완료 - 패턴:', codePatterns.length, '강점:', strengths.length, '제안:', suggestions.length);
                    
                } catch (error) {
                    console.error('상세 분석 표시 중 오류:', error);
                    $('.detailed-reasoning').text('상세 분석 정보를 불러오는 중 오류가 발생했습니다.');
                    $('.code-patterns-list').html('<div class="error-message">패턴 분석 결과를 불러올 수 없습니다.</div>');
                    $('.strengths-content').html('<div class="error-message">강점 분석 결과를 불러올 수 없습니다.</div>');
                    $('.suggestions-content').html('<div class="error-message">개선 제안을 불러올 수 없습니다.</div>');
                }
            };
            
            // 개인정보 수정으로 이동
            scwin.goToUserDetail = function() {
                location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/user/UserDetail.xml";
            };
            
            // 설문조사로 이동
            scwin.goToSurvey = function() {
                // 현재 코드분석 결과를 세션 스토리지에 저장 (설문조사 완료 후 통합 분석을 위해)
                var currentAnalysisResult = {
                    userId: scwin.currentUserId, // 숫자 사용자 ID 사용
                    typeCode: $('.result-type-code').text().trim(),
                    typeName: $('.result-type-name').text().trim(),
                    typeDesc: $('.result-type-desc').text().trim(),
                    developmentStyleScore: $('.score-development-style').text().trim(),
                    developerPreferenceScore: $('.score-developer-preference').text().trim(),
                    confidenceScore: $('.score-confidence').text().trim(),
                    language: $('.result-language').text().trim()
                };
                
                try {
                    sessionStorage.setItem('codeAnalysisResult', JSON.stringify(currentAnalysisResult));
                    console.log('코드분석 결과를 세션에 저장:', currentAnalysisResult);
                } catch (e) {
                    console.warn('세션 스토리지 저장 실패:', e);
                }
                
                // 설문조사 페이지로 이동 (사용자 ID를 URL 파라미터로 전달)
                var surveyUrl = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/survey/SurveyMbti.xml";
                if (scwin.currentUserId) {
                    surveyUrl += "&userId=" + scwin.currentUserId;
                }
                location.href = surveyUrl;
            };
            
            // 설문조사 건너뛰기
            scwin.skipSurvey = function() {
                // 설문조사 섹션 숨기기
                $('.survey-integration-section').hide();
                
                // 사용자에게 알림
                alert('설문조사는 언제든지 프로필 페이지에서 참여하실 수 있습니다.');
            };
            
            // 로딩 표시/숨기기
            scwin.showLoading = function(show) {
                if (show) {
                    // 로딩 오버레이 생성
                    if (!document.querySelector('.loading-overlay')) {
                        var loadingHtml = 
                            '<div class="loading-overlay">' +
                                '<div class="loading-content">' +
                                    '<div class="loading-spinner"></div>' +
                                    '<div class="loading-text">🚀 분석 진행 중</div>' +
                                    '<div class="loading-subtext">AI가 빠르게 코드를 분석하고 있어요!</div>' +
                                '</div>' +
                            '</div>';
                        document.body.insertAdjacentHTML('beforeend', loadingHtml);
                    }
                    $('.loading-overlay').show();
                } else {
                    $('.loading-overlay').remove();
                }
            };
        ]]></script>

		<style type="text/css"><![CDATA[
            .main-container {
                background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
                min-height: 100vh;
                font-family: "Malgun Gothic", "맑은 고딕", sans-serif;
                display: flex;
                flex-direction: column;
            }
            
            .content-area {
                flex: 1;
                display: flex;
                flex-direction: column;
                align-items: center;
                padding: 40px 20px;
                max-width: 1000px;
                margin: 0 auto;
                width: 100%;
            }
            
            .page-header {
                text-align: center;
                margin-bottom: 50px;
            }
            
            .main-title {
                font-size: 36px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
            }
            
            .sub-title {
                font-size: 20px;
                color: #666;
                line-height: 1.5;
            }
            
            .info-box {
                background: #e7f3ff;
                border: 1px solid #b3d9ff;
                border-radius: 8px;
                padding: 16px;
                margin-bottom: 30px;
                text-align: center;
                width: 100%;
                max-width: 600px;
            }
            
            .info-text {
                color: #0066cc;
                font-size: 14px;
                margin: 0;
            }
            
            /* 멀티 업로드 영역 스타일 */
            .upload-container {
                width: 100%;
                max-width: 600px;
                margin-bottom: 30px;
            }
            
            .upload-area {
                background: white;
                border: 3px dashed #007bff;
                border-radius: 16px;
                padding: 40px;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
                position: relative;
                min-height: 200px;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
            }
            
            .upload-area:hover {
                border-color: #0056b3;
                background: #f8f9ff;
                transform: translateY(-2px);
                box-shadow: 0 8px 24px rgba(0, 123, 255, 0.15);
            }
            
            .upload-area.drag-over {
                border-color: #28a745;
                background: #f8fff8;
            }
            
            .upload-icon {
                font-size: 64px;
                margin-bottom: 20px;
                color: #007bff;
            }
            
            .upload-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
                margin-bottom: 12px;
            }
            
            .upload-description {
                font-size: 16px;
                color: #666;
                margin-bottom: 20px;
                line-height: 1.5;
            }
            
            .upload-button {
                background: linear-gradient(45deg, #007bff, #0056b3);
                color: white;
                border: none;
                padding: 12px 32px;
                border-radius: 25px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .upload-button:hover {
                background: linear-gradient(45deg, #0056b3, #004494);
                transform: translateY(-1px);
            }
            
            .file-input-hidden {
                display: none;
            }
            
            /* 파일 목록 스타일 */
            .file-list-container {
                width: 100%;
                max-width: 600px;
                margin-bottom: 30px;
            }
            
            .file-list-title {
                font-size: 20px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
                text-align: center;
            }
            
            .file-list {
                background: white;
                border-radius: 12px;
                padding: 20px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                min-height: 100px;
            }
            
            .no-files {
                text-align: center;
                color: #999;
                font-style: italic;
                padding: 40px;
            }
            
            .file-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 12px 16px;
                border: 1px solid #e9ecef;
                border-radius: 8px;
                margin-bottom: 8px;
                transition: all 0.2s ease;
            }
            
            .file-item:hover {
                background: #f8f9fa;
                border-color: #007bff;
            }
            
            .file-item:last-child {
                margin-bottom: 0;
            }
            
            .file-info {
                flex: 1;
            }
            
            .file-name {
                font-weight: bold;
                color: #333;
                margin-bottom: 4px;
            }
            
            .file-details {
                display: flex;
                gap: 12px;
                font-size: 12px;
                color: #666;
            }
            
            .file-type {
                background: #007bff;
                color: white;
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 11px;
            }
            
            .file-size {
                color: #999;
            }
            
            .file-actions {
                display: flex;
                gap: 8px;
            }
            
            .btn-change-type, .btn-remove {
                background: none;
                border: none;
                cursor: pointer;
                padding: 4px 8px;
                border-radius: 4px;
                transition: background 0.2s ease;
            }
            
            .btn-change-type:hover {
                background: #e7f3ff;
            }
            
            .btn-remove:hover {
                background: #ffe7e7;
            }
            
            .change-icon, .remove-icon {
                font-size: 14px;
            }
            
            .action-buttons {
                display: flex;
                justify-content: center;
                margin-top: 40px;
            }
            
            .btn-next {
                background: linear-gradient(45deg, #007bff, #0056b3);
                color: white;
                border: none;
                padding: 16px 48px;
                border-radius: 50px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 16px rgba(0, 123, 255, 0.3);
            }
            
            .btn-next:hover {
                background: linear-gradient(45deg, #0056b3, #004494);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(0, 123, 255, 0.4);
            }
            
            .btn-next:disabled {
                background: #ccc;
                cursor: not-allowed;
                box-shadow: none;
            }
            
            /* 결과 섹션 스타일 */
            .result-section {
                text-align: center;
                animation: fadeInUp 0.8s ease-out;
            }
            
            .result-header {
                margin-bottom: 40px;
            }
            
            .result-title {
                font-size: 36px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
            }
            
            .result-subtitle {
                font-size: 18px;
                color: #666;
            }
            
            .result-card {
                background: linear-gradient(145deg, #ffffff, #f8fafc);
                border-radius: 28px;
                padding: 50px 40px;
                margin: 0 auto 40px auto;
                max-width: 500px;
                box-shadow: 
                    0 20px 40px -12px rgba(0, 0, 0, 0.15),
                    0 8px 24px -8px rgba(0, 0, 0, 0.08),
                    inset 0 1px 0 rgba(255, 255, 255, 0.8);
                display: flex;
                flex-direction: column;
                align-items: center;
                text-align: center;
                border: 1px solid rgba(255, 255, 255, 0.8);
                position: relative;
                overflow: hidden;
            }
            
            .result-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, 
                    transparent, 
                    rgba(255, 255, 255, 0.4),
                    transparent);
                animation: cardShine 3s ease-in-out 1s;
            }
            
            @keyframes cardShine {
                0% { left: -100%; }
                100% { left: 100%; }
            }
            
            .result-type-code {
                font-size: 72px;
                font-weight: 900;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #8b5cf6 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 24px;
                font-family: 'Courier New', monospace;
                letter-spacing: 4px;
                text-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: translateY(-30px) scale(0.8);
                animation: typeCodeReveal 0.8s cubic-bezier(0.34, 1.56, 0.64, 1) 1.2s forwards;
            }
            
            @keyframes typeCodeReveal {
                0% {
                    opacity: 0;
                    transform: translateY(-30px) scale(0.8);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }
            
            .result-type-name {
                font-size: 32px;
                font-weight: 800;
                color: #2d3436;
                margin-bottom: 20px;
                line-height: 1.2;
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: translateY(20px);
                animation: textSlideUp 0.6s ease-out 1.8s forwards;
            }
            
            .result-type-desc {
                font-size: 18px;
                color: #636e72;
                line-height: 1.7;
                max-width: 400px;
                font-weight: 500;
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: translateY(20px);
                animation: textSlideUp 0.6s ease-out 2.2s forwards;
            }
            
            @keyframes textSlideUp {
                0% {
                    opacity: 0;
                    transform: translateY(20px);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            .score-section {
                background: white;
                border-radius: 15px;
                padding: 30px;
                margin: 0 auto 40px auto;
                max-width: 500px;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
            }
            
            .score-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
                margin-bottom: 30px;
            }
            
            .score-grid {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 20px;
                margin-bottom: 30px;
            }
            
            .score-item {
                background: #f8f9fa;
                border-radius: 12px;
                padding: 20px;
                text-align: center;
            }
            
            .score-label {
                font-size: 14px;
                color: #666;
                margin-bottom: 8px;
            }
            
            .score-development-style, .score-developer-preference {
                font-size: 24px;
                font-weight: bold;
                color: #007bff;
            }
            
            .development-style-type, .developer-preference-type {
                font-size: 12px;
                color: #666;
                margin-top: 4px;
            }
            
            .confidence-section {
                background: #e7f3ff;
                border-radius: 12px;
                padding: 20px;
                text-align: center;
            }
            
            .confidence-label {
                font-size: 16px;
                color: #666;
                margin-bottom: 8px;
            }
            
            .score-confidence {
                font-size: 32px;
                font-weight: bold;
                color: #28a745;
            }
            
            /* ===== 상세 분석 결과 스타일 ===== */
            .detailed-section {
                max-width: 800px;
                margin: 0 auto 40px auto;
                text-align: left;
            }
            
            .detailed-title {
                font-size: 28px;
                font-weight: bold;
                color: #333;
                text-align: center;
                margin-bottom: 40px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }
            
            .section-item {
                background: white;
                border-radius: 16px;
                padding: 30px;
                margin-bottom: 25px;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
                border: 1px solid rgba(0, 0, 0, 0.05);
                
                /* 애니메이션을 위한 초기 상태 */
                opacity: 0;
                transform: translateY(30px);
                transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
            }
            
            .section-item.animated {
                opacity: 1;
                transform: translateY(0);
            }
            
            .section-item:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            }
            
            .section-header {
                font-size: 20px;
                font-weight: bold;
                color: #2d3436;
                margin-bottom: 20px;
                display: flex;
                align-items: center;
                gap: 8px;
                border-bottom: 2px solid #e9ecef;
                padding-bottom: 12px;
            }
            
            .reasoning-content {
                background: #f8f9ff;
                border-radius: 12px;
                padding: 20px;
                border-left: 4px solid #667eea;
            }
            
            .detailed-reasoning {
                font-size: 16px;
                line-height: 1.7;
                color: #495057;
                margin: 0;
                font-style: normal;
            }
            
            .code-patterns-list {
                display: flex;
                flex-direction: column;
                gap: 16px;
            }
            
            .pattern-item {
                background: linear-gradient(135deg, #fff5f5, #fff8f8);
                border-radius: 12px;
                padding: 20px;
                border: 1px solid #ffe6e6;
                transition: all 0.3s ease;
            }
            
            .pattern-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            }
            
            .pattern-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 12px;
            }
            
            .pattern-title {
                font-size: 16px;
                font-weight: bold;
                color: #2d3436;
                margin: 0;
            }
            
            .pattern-impact {
                display: flex;
                align-items: center;
                gap: 8px;
            }
            
            .impact-label {
                font-size: 12px;
                color: #666;
                font-weight: 500;
            }
            
            .impact-score {
                display: flex;
                gap: 2px;
            }
            
            .impact-bar {
                width: 12px;
                height: 4px;
                background: #e9ecef;
                border-radius: 2px;
            }
            
            .impact-bar.filled {
                background: linear-gradient(135deg, #667eea, #764ba2);
            }
            
            .impact-number {
                font-size: 12px;
                font-weight: bold;
                color: #667eea;
            }
            
            .pattern-description {
                font-size: 14px;
                color: #636e72;
                line-height: 1.6;
                margin: 0 0 12px 0;
            }
            
            .pattern-evidence ul {
                margin: 0;
                padding-left: 20px;
            }
            
            .pattern-evidence li {
                font-size: 13px;
                color: #6c757d;
                margin-bottom: 4px;
                line-height: 1.5;
            }
            
            .strengths-list, .suggestions-list {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }
            
            .strength-item {
                background: linear-gradient(135deg, #f0fff4, #f8fff8);
                border-radius: 8px;
                padding: 16px;
                border-left: 4px solid #28a745;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #2d5016;
                transition: all 0.3s ease;
            }
            
            .strength-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
            }
            
            .strength-icon {
                font-size: 18px;
                color: #28a745;
                font-weight: bold;
            }
            
            .suggestion-item {
                background: linear-gradient(135deg, #fff8e1, #fffbf0);
                border-radius: 8px;
                padding: 16px;
                border-left: 4px solid #ffc107;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #8b6e00;
                transition: all 0.3s ease;
            }
            
            .suggestion-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 12px rgba(255, 193, 7, 0.15);
            }
            
            .suggestion-icon {
                font-size: 18px;
                color: #ffc107;
            }
            
            .no-patterns, .no-strengths, .no-suggestions, .error-message {
                text-align: center;
                color: #999;
                font-style: italic;
                padding: 30px;
                background: #f8f9fa;
                border-radius: 8px;
            }
            
            .loading-patterns, .loading-strengths, .loading-suggestions {
                text-align: center;
                color: #666;
                font-style: italic;
                padding: 20px;
                background: #f8f9fa;
                border-radius: 8px;
            }
            
            /* ===== 설문조사 통합 섹션 ===== */
            .survey-integration-section {
                background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
                color: white;
                text-align: center;
                border: none !important;
                position: relative;
                overflow: hidden;
                box-shadow: 0 8px 32px rgba(0, 123, 255, 0.3);
            }
            
            .survey-integration-section::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255,255,255,0.15) 0%, transparent 70%);
                animation: pulse 4s ease-in-out infinite;
            }
            
            @keyframes pulse {
                0%, 100% { opacity: 0.8; transform: scale(1); }
                50% { opacity: 1; transform: scale(1.05); }
            }
            
            .survey-title {
                font-size: 24px;
                font-weight: bold;
                color: white !important;
                margin-bottom: 16px;
                position: relative;
                z-index: 2;
            }
            
            .survey-description {
                font-size: 16px;
                color: rgba(255, 255, 255, 0.95) !important;
                line-height: 1.6;
                margin-bottom: 24px;
                max-width: 600px;
                margin-left: auto;
                margin-right: auto;
                position: relative;
                z-index: 2;
            }
            
            .survey-buttons {
                display: flex;
                justify-content: center;
                gap: 16px;
                flex-wrap: wrap;
                position: relative;
                z-index: 2;
            }
            
            .btn-survey {
                background: linear-gradient(45deg, #ffffff, #f8f9fa);
                color: #007bff;
                border: none;
                padding: 14px 32px;
                border-radius: 50px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 16px rgba(255, 255, 255, 0.4);
                border: 2px solid transparent;
            }
            
            .btn-survey:hover {
                background: linear-gradient(45deg, #f8f9fa, #ffffff);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(255, 255, 255, 0.5);
                border-color: rgba(255, 255, 255, 0.6);
            }
            
            .btn-survey-skip {
                background: transparent;
                color: rgba(255, 255, 255, 0.8);
                border: 2px solid rgba(255, 255, 255, 0.5);
                padding: 14px 32px;
                border-radius: 50px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .btn-survey-skip:hover {
                background: rgba(255, 255, 255, 0.1);
                color: white;
                border-color: white;
                transform: translateY(-2px);
            }
            
            .result-buttons {
                margin-top: 40px;
            }
            
            .btn-restart {
                background: linear-gradient(45deg, #6c757d, #5a6268);
                color: white;
                border: none;
                padding: 16px 48px;
                border-radius: 50px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 16px rgba(108, 117, 125, 0.3);
            }
            
            .btn-restart:hover {
                background: linear-gradient(45deg, #5a6268, #495057);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(108, 117, 125, 0.4);
            }
            
            @keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(30px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            /* ===== 로딩 오버레이 ===== */
            .loading-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(255, 255, 255, 0.85);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 10000;
                backdrop-filter: blur(3px);
            }
            
            .loading-content {
                text-align: center;
                color: #333;
                padding: 30px;
                border-radius: 20px;
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                border: 1px solid rgba(0, 123, 255, 0.2);
                box-shadow: 0 8px 32px rgba(0, 123, 255, 0.15);
                max-width: 350px;
                width: 90%;
            }
            
            .loading-spinner {
                width: 40px;
                height: 40px;
                border: 3px solid rgba(0, 123, 255, 0.1);
                border-top: 3px solid #007bff;
                border-radius: 50%;
                animation: spin 0.8s linear infinite;
                margin: 0 auto 15px auto;
            }
            
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            .loading-text {
                font-size: 18px;
                font-weight: bold;
                margin-bottom: 8px;
                color: #007bff;
            }
            
            .loading-subtext {
                font-size: 13px;
                color: #666;
                line-height: 1.4;
            }
            
            @media (max-width: 768px) {
                .main-title {
                    font-size: 28px;
                }
                
                .sub-title {
                    font-size: 16px;
                }
                
                .upload-area {
                    padding: 30px 20px;
                    min-height: 150px;
                }
                
                .upload-icon {
                    font-size: 48px;
                }
                
                .upload-title {
                    font-size: 20px;
                }
                
                .upload-description {
                    font-size: 14px;
                }
                
                .result-type-code {
                    font-size: 48px;
                }
                
                .result-type-name {
                    font-size: 24px;
                }
                
                .score-grid {
                    grid-template-columns: 1fr;
                }
                
                .detailed-title {
                    font-size: 24px;
                }
                
                .section-item {
                    padding: 20px;
                }
                
                .survey-buttons {
                    flex-direction: column;
                    align-items: center;
                }
                
                .btn-survey, .btn-survey-skip {
                    width: 100%;
                    max-width: 280px;
                }
                
                .result-hint-box {
                    margin: 15px auto 25px auto;
                    padding: 12px 16px;
                }
                
                .result-hint-text {
                    font-size: 14px;
                    color: #664d00;
                    font-weight: 600;
                }
            }
            
            /* ===== 결과 힌트 박스 스타일 ===== */
            .result-hint-box {
                background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
                border: 1px solid #f39c12;
                border-radius: 12px;
                padding: 16px 20px;
                margin: 20px auto 30px auto;
                text-align: center;
                width: 100%;
                max-width: 500px;
                box-shadow: 0 2px 8px rgba(243, 156, 18, 0.1);
                opacity: 0;
                transform: translateY(-20px);
                animation: hintBoxReveal 0.8s ease-out 2.8s forwards;
            }
            
            @keyframes hintBoxReveal {
                0% {
                    opacity: 0;
                    transform: translateY(-20px);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            .result-hint-text {
                color: #664d00;
                font-size: 15px;
                margin: 0;
                font-weight: 600;
                line-height: 1.5;
                text-shadow: 0 1px 2px rgba(255, 255, 255, 0.5);
            }
        ]]></style>
	</head>

	<body ev:onpageload="scwin.onpageload">
		<w2:wframe src="../common/Header.xml" id="headerFrame" />
		<xf:group class="main-container">
			<xf:group class="content-area">
				<!-- 업로드 섹션 -->
				<xf:group class="upload-section">
					<xf:group class="page-header">
						<w2:textbox class="main-title" label="다양한 언어의 코드를 분석해드립니다" tagname="h1"></w2:textbox>
						<w2:textbox class="sub-title" label="Java, Python, JavaScript 등 어떤 언어든 분석 가능합니다" tagname="p"></w2:textbox>
					</xf:group>

					<xf:group class="info-box">
						<w2:textbox class="info-text" label="💡 다양한 언어 지원, 여러 파일 동시 업로드, 파일당 최대 50KB, 드래그 앤 드롭 지원" tagname="p"></w2:textbox>
					</xf:group>

					<!-- 멀티 파일 업로드 영역 -->
					<xf:group class="upload-container">
						<xf:group class="upload-area" ev:onclick="scwin.handleUploadAreaClick()">
							<w2:textbox class="upload-icon" label="📁" tagname="div"></w2:textbox>
							<w2:textbox class="upload-title" label="코드 파일 업로드" tagname="div"></w2:textbox>
							<w2:textbox class="upload-description" label="여러 파일을 선택하거나 드래그 앤 드롭으로 업로드하세요" tagname="div"></w2:textbox>
							<xf:trigger class="upload-button">
								<xf:label>파일 선택</xf:label>
							</xf:trigger>
							<input type="file" id="multiFileInput" class="file-input-hidden" multiple="multiple"
								accept=".java,.js,.ts,.py,.cpp,.c,.cs,.php,.rb,.go,.kt,.swift,.scala,.rs,.jsx,.tsx,.vue,.html,.css,.scss,.sass,.sql,.json,.xml,.yaml,.yml,.sh,.bat,.ps1,.r,.m,.pl,.lua,.dart" />
						</xf:group>
					</xf:group>

					<!-- 파일 목록 표시 영역 -->
					<xf:group class="file-list-container">
						<w2:textbox class="file-list-title" label="업로드된 파일 목록" tagname="div"></w2:textbox>
						<xf:group class="file-list">
							<w2:textbox class="no-files" label="업로드된 파일이 없습니다" tagname="div"></w2:textbox>
						</xf:group>
					</xf:group>

					<xf:group class="action-buttons">
						<xf:trigger class="btn-next" ev:onclick="scwin.btn_next_onclick">
							<xf:label>다음</xf:label>
						</xf:trigger>
					</xf:group>
				</xf:group>

				<!-- 결과 섹션 -->
				<xf:group class="result-section" style="display: none;">
					<xf:group class="result-header">
						<w2:textbox class="result-title" label="분석 결과" tagname="h1"></w2:textbox>
						<w2:textbox class="result-subtitle" label="당신의 weaveType은..." tagname="p"></w2:textbox>
					</xf:group>
					
					<!-- 설문조사 유도 힌트 박스 -->
					<xf:group class="result-hint-box">
						<w2:textbox class="result-hint-text" label="💡 더 정확한 분석을 원하신다면 아래 설문조사 섹션을 확인해보세요!" tagname="p"></w2:textbox>
					</xf:group>

					<xf:group class="result-card">
						<w2:textbox class="result-type-code" label="AR" tagname="div"></w2:textbox>
						<w2:textbox class="result-type-name" label="개선형 아키텍트" tagname="div"></w2:textbox>
						<w2:textbox class="result-type-desc" label="기존 코드를 체계적으로 개선하고 최적화하는 개발자" tagname="div"></w2:textbox>
						<w2:textbox class="result-language" label="Detected Language: Unknown" tagname="div"
							style="font-size: 16px; color: #666; margin-bottom: 16px;"></w2:textbox>
					</xf:group>

					<xf:group class="score-section">
						<w2:textbox class="score-title" label="상세 점수" tagname="div"></w2:textbox>

						<xf:group class="score-grid">
							<xf:group class="score-item">
								<w2:textbox class="score-label" label="개발 스타일" tagname="div"></w2:textbox>
								<w2:textbox class="score-development-style" label="0점" tagname="div"></w2:textbox>
								<w2:textbox class="development-style-type" label="분석 중..." tagname="div"
									style="font-size: 12px; color: #666; margin-top: 4px;"></w2:textbox>
							</xf:group>

							<xf:group class="score-item">
								<w2:textbox class="score-label" label="개발자 선호도" tagname="div"></w2:textbox>
								<w2:textbox class="score-developer-preference" label="0점" tagname="div"></w2:textbox>
								<w2:textbox class="developer-preference-type" label="분석 중..." tagname="div"
									style="font-size: 12px; color: #666; margin-top: 4px;"></w2:textbox>
							</xf:group>
						</xf:group>

						<xf:group class="confidence-section">
							<w2:textbox class="confidence-label" label="분석 신뢰도" tagname="div"></w2:textbox>
							<w2:textbox class="score-confidence" label="0%" tagname="div"></w2:textbox>
						</xf:group>
					</xf:group>

					<!-- 상세 분석 결과 섹션 -->
					<xf:group class="detailed-section">
						<w2:textbox class="detailed-title" label="🔍 상세 분석 결과" tagname="h2"></w2:textbox>
						
						<!-- 분석 근거 -->
						<xf:group class="section-item reasoning-section">
							<w2:textbox class="section-header" label="📋 분석 근거" tagname="h3"></w2:textbox>
							<xf:group class="reasoning-content">
								<w2:textbox class="detailed-reasoning" label="코드 구조와 패턴을 분석하여 개발 스타일을 도출했습니다." tagname="p"></w2:textbox>
							</xf:group>
						</xf:group>

						<!-- 코드 패턴 분석 -->
						<xf:group class="section-item patterns-section">
							<w2:textbox class="section-header" label="📊 발견된 코드 패턴" tagname="h3"></w2:textbox>
							<xf:group class="code-patterns-list">
								<w2:textbox class="loading-patterns" label="패턴 분석 중..." tagname="div"></w2:textbox>
							</xf:group>
						</xf:group>

						<!-- 개발 강점 -->
						<xf:group class="section-item strengths-section">
							<w2:textbox class="section-header" label="⭐ 개발 강점" tagname="h3"></w2:textbox>
							<xf:group class="strengths-content">
								<w2:textbox class="loading-strengths" label="강점 분석 중..." tagname="div"></w2:textbox>
							</xf:group>
						</xf:group>

						<!-- 개선 제안 -->
						<xf:group class="section-item suggestions-section">
							<w2:textbox class="section-header" label="💡 개선 제안" tagname="h3"></w2:textbox>
							<xf:group class="suggestions-content">
								<w2:textbox class="loading-suggestions" label="개선점 분석 중..." tagname="div"></w2:textbox>
							</xf:group>
						</xf:group>

						<!-- 설문조사 연결 섹션 -->
						<xf:group class="survey-integration-section section-item">
							<w2:textbox class="survey-title" label="📊 더 정확한 분석을 원하시나요?" tagname="h3"></w2:textbox>
							<w2:textbox class="survey-description" label="MBTI 기반 개발 성향 설문조사를 통해 코드 분석 결과와 통합된 더욱 정확한 weaveType을 확인하세요!" tagname="p"></w2:textbox>
							<xf:group class="survey-buttons">
								<xf:trigger class="btn-survey" ev:onclick="scwin.goToSurvey">
									<xf:label>설문조사 참여하기</xf:label>
								</xf:trigger>
								<xf:trigger class="btn-survey-skip" ev:onclick="scwin.skipSurvey">
									<xf:label>나중에 하기</xf:label>
								</xf:trigger>
							</xf:group>
						</xf:group>
					</xf:group>

					<xf:group class="result-buttons">
						<xf:trigger class="btn-restart" ev:onclick="scwin.goToUserDetail">
							<xf:label>프로필로 이동</xf:label>
						</xf:trigger>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
	</body>
</html> 