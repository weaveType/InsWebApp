<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">

	<head meta_screenName="지원현황">
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_applicationListVo" saveRemovedData="true">
					<w2:columnInfo>
						<w2:column id="name" name="회사명" dataType="text"></w2:column>
						<w2:column id="jobPostingId" name="공고ID" dataType="number"></w2:column>
						<w2:column dataType="text" name="공고명" id="title"></w2:column>
						<w2:column dataType="text" name="경력" id="experienceLevel"></w2:column>
						<w2:column dataType="text" name="MBTI List" id="preferredDeveloperTypes"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_applicationStatsVo" saveRemovedData="true">
					<w2:columnInfo>
						<w2:column id="statusType" name="상태타입" dataType="text"></w2:column>
						<w2:column id="statusCount" name="상태개수" dataType="number"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dmp_searchParam">
					<w2:keyInfo>
						<w2:key id="pageIndex" name="페이지번호" dataType="number"></w2:key>
						<w2:key id="pageSize" name="페이지크기" dataType="number"></w2:key>
						<w2:key id="userId" name="사용자ID" dataType="number"></w2:key>
						<w2:key id="applicationStatus" name="상태" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dmp_accountIdVo">
					<w2:keyInfo>
						<w2:key dataType="number" name="계정ID" id="accountId"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>
			<xf:submission id="sbm_applicationHistoryList" action="/InsWebApp/POS.pwkjson" method="post"
				mediatype="application/json" ref='data:json,{"id":"dmp_searchParam", "key":"applicationSearchVo"}'
				target='data:json,{"id":"dlt_applications", "key":"elData.applicationHistoryListVo"}' encoding="UTF-8" instance="" replace=""
				errorHandler="" customHandler="" mode="asynchronous" processMsg="지원현황 조회중..." ev:submit=""
				ev:submitdone="scwin.sbm_applicationHistoryList_submitdone" ev:submiterror="scwin.sbm_applicationHistoryList_submiterror"
				abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_applicationStats" action="/InsWebApp/US0001Cnt.pwkjson" method="post"
				mediatype="application/json" ref='data:json,{"id":"dmp_accountIdVo","key":"accountIdVo"}'
				target='data:json,{"id":"dlt_applicationStatsVo","key":"elData.applicationStatusVo"}' encoding="UTF-8" instance="" replace=""
				errorHandler="" customHandler="" mode="asynchronous" processMsg="" ev:submit="" ev:submitdone="scwin.sbm_applicationStats_submitdone"
				ev:submiterror="" abortTrigger="">
			</xf:submission>
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />

		<style type="text/css"><![CDATA[

            .main-wrap {
                width: 100%;
                background-color: #ffffff;
                font-family: "Malgun Gothic", "맑은 고딕", sans-serif;
            }
            
            /* 메인 레이아웃 */
            .main-container {
                display: flex;
                min-height: calc(100vh - 70px);
                max-width: 1400px;
                margin: 0 auto;
                background-color: #f8f9fa;
            }

            /* 메인 콘텐츠 */
            .main-content {
                flex: 1;
                padding: min(30px, 4vw);
                overflow-y: auto;
            }

            /* 페이지 헤더 */
            .page-header {
                margin-bottom: 30px;
            }

            .page-info h1 {
                font-size: 28px;
                font-weight: bold;
                color: #333;
                margin-bottom: 8px;
            }

            .page-description {
                color: #666;
                font-size: 16px;
            }

            /* 통계 카드 섹션 */
            .stats-grid {
                display: flex;
                background-color: white;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.08);
                margin-bottom: 30px;
                overflow: hidden;
            }

            .stat-card {
                flex: 1;
                padding: 40px 30px;
                text-align: center;
                position: relative;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                min-height: 120px;
            }

            .stat-card:not(:last-child)::after {
                content: '';
                position: absolute;
                right: 0;
                top: 20%;
                bottom: 20%;
                width: 1px;
                background-color: #e8e8e8;
            }

            .stat-number {
                display: block;
                font-size: 36px;
                font-weight: bold;
                margin-bottom: 8px;
                color: #888;
                transition: color 0.2s ease;
            }

            .stat-label {
                display: block;
                font-size: 14px;
                color: #888;
                font-weight: 500;
                transition: color 0.2s ease;
            }

            /* 클릭 가능한 카드 스타일 */
            .stat-card {
                cursor: pointer;
                transition: background-color 0.2s ease;
            }

            .stat-card:hover {
                background-color: #f8f9fa;
            }

            /* 활성화된 카드는 파란색 */
            .stat-card.active .stat-number,
            .stat-card.active .stat-label {
                color: #4285f4 !important;
            }

            .stat-card.active:hover {
                background-color: #f0f4ff;
            }

            /* 반응형 디자인 */
            @media (max-width: 768px) {
                .stats-grid {
                    flex-direction: column;
                }
                
                .stat-card {
                    padding: 30px 20px;
                }
                
                .stat-card:not(:last-child)::after {
                    display: none;
                }
                
                .stat-card:not(:last-child) {
                    border-bottom: 1px solid #e8e8e8;
                }
            }
            
            /* 반응형 디자인 */
            @media (max-width: 1024px) {
            }

            @media (max-width: 768px) {
            }

            /* 빈 상태 */
            .empty-state {
                text-align: center;
                padding: 60px 20px;
                color: #999;
            }

            .empty-state .empty-icon {
                font-size: 48px;
                margin-bottom: 16px;
                display: block;
            }

            .empty-state .empty-text {
                font-size: 16px;
                margin-bottom: 8px;
            }

            .empty-state .empty-subtext {
                font-size: 14px;
                color: #ccc;
            }
        ]]></style>

		<script lazy="false" type="text/javascript"><![CDATA[
scwin.onpageload = function () {
    scwin.init();
};

// 초기화 함수
scwin.init = function () {
    // 검색 조건 초기화
    dmp_searchParam.set("pageIndex", 1);
    dmp_searchParam.set("pageSize", 10);
    // cookie에서 accountId 가져오기

    scwin.userInfo = $p.parent().dma_userInfoVo.getJSON();
    if (scwin.userInfo && scwin.userInfo.accountId) {
        dmp_accountIdVo.set("accountId", scwin.userInfo.accountId);
    }

    // 지원현황 목록 조회
    //$c.sbm.execute($p, sbm_applicationHistoryList);

    // 통계 데이터 조회
    $c.sbm.execute($p, sbm_applicationStats);

    // 초기 통계 카드 설정
    // scwin.initializeStatCards();
};

// pageFrame에서 즉시 실행
scwin.init();

// 지원현황 목록 조회 완료
scwin.sbm_applicationHistoryList_submitdone = function (e) {
    try {
        var res = e.responseJSON;
        if (res && res.elData) {
            // 지원현황 목록 설정
            if (res.elData.applicationHistoryList) {
                dlt_applications.setJSON(res.elData.applicationHistoryList);
            }

            // 통계 데이터 설정
            if (res.elData.applicationStatsList) {
                dlt_applicationStatsVo.setJSON(res.elData.applicationStatsList);
                scwin.updateStatsFromData();
            }

            // UI 업데이트
            scwin.applyStatusClasses();
        }
    } catch (err) {
        console.error("지원현황 조회 오류:", err);
        alert("지원현황 조회 중 오류가 발생했습니다.");
    }
};

// 지원현황 목록 조회 오류
scwin.sbm_applicationHistoryList_submiterror = function (e) {
    console.error("지원현황 조회 실패:", e);
    alert("지원현황을 불러오는데 실패했습니다.");
};

// 통계 데이터로부터 UI 업데이트
scwin.updateStatsFromData = function () {
    var totalCount = 0;
    var waitingCount = 0;
    var acceptedCount = 0;
    var rejectedCount = 0;

    // 통계 데이터가 있는 경우 사용
    var statsCount = dlt_applicationStatsVo.getRowCount();
    if (statsCount > 0) {
        for (var i = 0; i < statsCount; i++) {
            var statusType = dlt_applicationStatsVo.getCellData(i, "statusType");
            var count = dlt_applicationStatsVo.getCellData(i, "statusCount");
            if(statusType === "TOTAL"){
                totalCount = count;
            } else if  (statusType === "PENDING") {
                waitingCount = count;
            } else if (statusType === "ACCEPTED") {
                acceptedCount = count;
            } else if (statusType === "REJECTED") {
                rejectedCount = count;
            }
        }
    }

    // 통계 UI 업데이트
    setTimeout(function () {
        var totalElement = document.getElementById('totalApplications');
        var waitingElement = document.getElementById('waitingApplications');
        var acceptedElement = document.getElementById('acceptedApplications');
        var rejectedElement = document.getElementById('rejectedApplications');

        if (totalElement) totalElement.textContent = totalCount;
        if (waitingElement) waitingElement.textContent = waitingCount;
        if (acceptedElement) acceptedElement.textContent = acceptedCount;
        if (rejectedElement) rejectedElement.textContent = rejectedCount;
    }, 100);
};

// 통계 카드 선택 및 필터링
scwin.selectStatCard = function (cardElement, filterType) {
    // 모든 통계 카드에서 active 클래스 제거
    total_applications.removeClass('active');
    in_progress_applications.removeClass('active');
    accepted_applications.removeClass('active');
    rejected_applications.removeClass('active');

    // 클릭된 카드에 active 클래스 추가
    cardElement.addClass('active');

    // 해당 필터 적용
    scwin.filterApplications(filterType);
};

// 초기 통계 카드 설정
scwin.initializeStatCards = function () {
    setTimeout(function () {
        var firstStatCard = document.querySelector('.stat-card');
        if (firstStatCard) {
            firstStatCard.addClass('active');
        }
    }, 100);
};

// 필터링
scwin.filterApplications = function (type) {
    // 검색 조건 설정
    if (type !== 'all') {
        dmp_searchParam.set("applicationStatus", type);
    }
    $c.sbm.execute($p, dmp_searchParam);

};

// 상태별 클래스 적용
scwin.applyStatusClasses = function () {
    var totalCount = dlt_applications.getRowCount();

    setTimeout(function () {
        var cards = document.querySelectorAll('.application-card');
        var statusBadges = document.querySelectorAll('.status-badge');

        for (var i = 0; i < cards.length && i < totalCount; i++) {
            var status = dlt_applications.getCellData(i, "status");
            var card = cards[i];
            var badge = statusBadges[i];

            if (status === "서류통과" || status === "면접진행") {
                card.classList.add('pending');
                if (badge) badge.className = 'status-badge status-pending';
            } else if (status === "최종합격") {
                card.classList.add('accepted');
                if (badge) badge.className = 'status-badge status-accepted';
            } else if (status === "불합격") {
                card.classList.add('rejected');
                if (badge) badge.className = 'status-badge status-rejected';
            }
        }
    }, 100);
};

// 지원현황 상세보기
scwin.showApplicationDetail = function (rowIndex) {
    var company = dlt_applications.getCellData(rowIndex, "company");
    var position = dlt_applications.getCellData(rowIndex, "position");
    var status = dlt_applications.getCellData(rowIndex, "status");
    var result = dlt_applications.getCellData(rowIndex, "result");
    var applicationDate = dlt_applications.getCellData(rowIndex, "applicationDate");
    var jobPostingId = dlt_applications.getCellData(rowIndex, "jobPostingId");

    var detailMessage = "=== 지원 상세 정보 ===\n\n";
    detailMessage += "회사명: " + company + "\n";
    detailMessage += "포지션: " + position + "\n";
    detailMessage += "지원일자: " + applicationDate + "\n";
    detailMessage += "상태: " + status + "\n";
    detailMessage += "결과: " + result + "\n";
    detailMessage += "\n해당 공고 페이지로 이동하시겠습니까?";

    if (confirm(detailMessage)) {
        alert("공고 ID " + jobPostingId + " 페이지로 이동합니다.");
    }
};

scwin.total_applications_onclick = function (e) {
    scwin.selectStatCard(this, 'all');
};

scwin.in_progress_applications_onclick = function (e) {
    scwin.selectStatCard(this, 'pending');
};

scwin.accepted_applications_onclick = function (e) {
    scwin.selectStatCard(this, 'accepted');
};

scwin.rejected_applications_onclick = function (e) {
    scwin.selectStatCard(this, 'rejected');
};

scwin.sbm_applicationStats_submitdone = function (e) {
    try {
        var res = e.responseJSON;
        
        if (res && res.elData && res.elData.applicationStatusVo) {
            dlt_applicationStatsVo.setJSON(res.elData.applicationStatusVo);
            
            // 5. UI 업데이트 함수 호출
            scwin.updateStatsFromData();
            
        } else {
            console.warn("응답 데이터 구조가 예상과 다릅니다:", res);
        }
        
    } catch (err) {
        console.error("통계 데이터 처리 오류:", err);
        alert("통계 데이터를 처리하는 중 오류가 발생했습니다.");
    }
};]]></script>
	</head>

	<body ev:onpageload="scwin.onpageload">
		<xf:group class="main-wrap">

			<!-- 메인 컨테이너 -->
			<xf:group class="main-container">
				<!-- 사이드바 -->

				<!-- 메인 콘텐츠 -->
				<main class="main-content">
					<!-- 지원현황 페이지 헤더 -->
					<section class="page-header">
						<xf:group class="page-info">
							<xf:group class="page-details">
								<h1>지원 현황</h1>
								<xf:group class="page-description">지원한 기업들의 현황을 확인하고 관리하세요.</xf:group>
							</xf:group>
						</xf:group>
					</section>

					<!-- 지원현황 통계 -->
					<section class="stats-grid">
						<xf:group class="stat-card" id="total_applications" ev:onclick="scwin.total_applications_onclick">
							<span class="stat-number" id="totalApplications">0</span>
							<span class="stat-label">총 지원</span>
						</xf:group>
						<xf:group class="stat-card" id="in_progress_applications" ev:onclick="scwin.in_progress_applications_onclick">
							<span class="stat-number" id="waitingApplications">0</span>
							<span class="stat-label">진행 중</span>
						</xf:group>
						<xf:group class="stat-card" id="accepted_applications" ev:onclick="scwin.accepted_applications_onclick">
							<span class="stat-number" id="acceptedApplications">0</span>
							<span class="stat-label">합격</span>
						</xf:group>
						<xf:group class="stat-card" id="rejected_applications" ev:onclick="scwin.rejected_applications_onclick">
							<span class="stat-number" id="rejectedApplications">0</span>
							<span class="stat-label">불합격</span>
						</xf:group>
					</section>

					<!-- 필터 탭 -->
					<section class="filter-section">
					</section>

					<!-- 지원현황 카드들 -->
					<section class="applications-section">
						<xf:group class="applications-grid">
							<w2:generator id="gen_applications" dataList="data:dlt_applications" style="">
								<xf:group class="application-card">
									<xf:group class="card-header">
										<xf:group class="company-info">
											<xf:group class="company-logo">
												<w2:textbox ref="data:dlt_applications.logo"></w2:textbox>
											</xf:group>
											<xf:group class="company-details">
												<xf:group class="company-name">
													<w2:textbox ref="data:dlt_applications.company"></w2:textbox>
												</xf:group>
												<xf:group class="position-name">
													<w2:textbox ref="data:dlt_applications.position"></w2:textbox>
												</xf:group>
											</xf:group>
										</xf:group>
										<xf:group class="application-date">
											<w2:textbox ref="data:dlt_applications.applicationDate"></w2:textbox>
										</xf:group>
									</xf:group>
									<xf:group class="card-body">
										<w2:textbox class="status-badge" ref="data:dlt_applications.status"></w2:textbox>
										<xf:group class="result-text">
											<w2:textbox ref="data:dlt_applications.result"></w2:textbox>
										</xf:group>
									</xf:group>
								</xf:group>
							</w2:generator>
						</xf:group>
					</section>
				</main>
			</xf:group>
		</xf:group>
	</body>
</html>