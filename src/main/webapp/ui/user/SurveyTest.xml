<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" 
    xmlns:xf="http://www.w3.org/2002/xforms">
    
    <head meta_screenName="weaveType 개발자 유형 검사 진행">
        <w2:type>COMPONENT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
            <w2:dataCollection baseNode="map">
                <w2:dataMap baseNode="map" id="dma_survey">
                    <w2:keyInfo>
                        <w2:key id="currentSet" name="현재세트" dataType="text" value="1"></w2:key>
                        <w2:key id="totalSets" name="총세트수" dataType="text" value="2"></w2:key>
                        <w2:key id="currentQuestion" name="현재문제번호" dataType="text" value="1"></w2:key>
                        <w2:key id="totalQuestions" name="총문제수" dataType="text" value="20"></w2:key>
                        <w2:key id="answers" name="답변데이터" dataType="text" value="{}"></w2:key>
                    </w2:keyInfo>
                </w2:dataMap>
            </w2:dataCollection>
        </xf:model>
        <w2:layoutInfo/>
        <w2:publicInfo method=""/>
        
        <script type="text/javascript"><![CDATA[
            // 설문 문항 데이터 (추후 DB에서 가져올 예정)
            var surveyQuestions = [
                // B/A 축 (Builder vs Architect)
                { id: 1, axis: "B_A", text: "새로운 프로젝트를 시작할 때 나는 핵심 기능의 프로토타입을 바로 만들어본다", type: "B" },
                { id: 2, axis: "B_A", text: "레거시 코드를 발견했을 때 전체적인 리팩토링 계획을 수립하고 단계적으로 개선한다", type: "A" },
                { id: 3, axis: "B_A", text: "출시일이 2주 남은 상황에서 80% 완성도로 모든 기능을 구현하는 것을 선호한다", type: "B" },
                { id: 4, axis: "B_A", text: "새로운 기능을 구현할 때 인터페이스와 추상화를 먼저 설계하고 구현한다", type: "A" },
                { id: 5, axis: "B_A", text: "일단 동작하는 코드를 만들고 점진적으로 개선하는 방식을 선호한다", type: "B" },
                
                // R/I 축 (Refactor vs Innovate)  
                { id: 6, axis: "R_I", text: "새 프로젝트의 기술 스택을 선택할 때 팀이 숙련된 검증된 기술을 사용한다", type: "R" },
                { id: 7, axis: "R_I", text: "복잡한 문제를 마주했을 때 새로운 접근법이나 창의적인 해결책을 시도한다", type: "I" },
                { id: 8, axis: "R_I", text: "필요한 기능을 구현할 때 안정적이고 널리 사용되는 라이브러리를 선택한다", type: "R" },
                { id: 9, axis: "R_I", text: "기존 코드를 개선할 때 새로운 패러다임이나 아키텍처로 재구성하는 것을 선호한다", type: "I" },
                { id: 10, axis: "R_I", text: "기존의 검증된 패턴과 best practice를 활용하여 문제를 해결한다", type: "R" },
                
                // S/T 축 (Solo vs Team)
                { id: 11, axis: "S_T", text: "조용한 공간에서 혼자 깊이 집중할 때 가장 생산적이다", type: "S" },
                { id: 12, axis: "S_T", text: "코드 리뷰는 성장과 품질 향상을 위한 필수 과정이라고 생각한다", type: "T" },
                { id: 13, axis: "S_T", text: "어려운 버그를 만났을 때 혼자서 깊이 파고들어 해결책을 찾는다", type: "S" },
                { id: 14, axis: "S_T", text: "이상적인 프로젝트 진행 방식은 페어 프로그래밍이나 몹 프로그래밍으로 협업하는 것이다", type: "T" },
                { id: 15, axis: "S_T", text: "기술적 결정을 내릴 때 충분한 조사 후 스스로 최선의 결정을 내린다", type: "S" },
                
                // D/F 축 (Debug vs Feature)
                { id: 16, axis: "D_F", text: "한정된 시간에 완벽하게 동작하는 적은 수의 기능을 구현하는 것을 선호한다", type: "D" },
                { id: 17, axis: "D_F", text: "개발 중 버그를 발견했을 때 심각하지 않으면 기록만 하고 개발을 계속한다", type: "F" },
                { id: 18, axis: "D_F", text: "'동작은 하지만 지저분한 코드'는 반드시 리팩토링해서 깔끔하게 만들어야 한다", type: "D" },
                { id: 19, axis: "D_F", text: "제품 출시를 앞두고 있을 때 핵심 기능이 동작하면 출시하고 빠르게 업데이트한다", type: "F" },
                { id: 20, axis: "D_F", text: "개발 시간이 늘어도 테스트 코드를 반드시 작성한다", type: "D" }
            ];
            
            var answers = {}; // 답변 저장
            
            scwin.onpageload = function() {
                console.log("설문조사 진행 페이지 로드됨");
                scwin.displayCurrentSet();
                scwin.updateProgress();
            };
            
            // 현재 세트의 문제들 표시
            scwin.displayCurrentSet = function() {
                var currentSet = parseInt(dma_survey.get("currentSet"));
                var startIndex = (currentSet - 1) * 10;
                var endIndex = Math.min(startIndex + 10, surveyQuestions.length);
                
                var container = document.querySelector('.questions-container');
                if (!container) return;
                
                container.innerHTML = '';
                
                for (var i = startIndex; i < endIndex; i++) {
                    var question = surveyQuestions[i];
                    var questionHtml = scwin.createQuestionElement(question, i + 1);
                    container.appendChild(questionHtml);
                }
            };
            
            // 문제 요소 생성
            scwin.createQuestionElement = function(question, questionNumber) {
                var questionDiv = document.createElement('div');
                questionDiv.className = 'question-item';
                questionDiv.setAttribute('data-question-id', question.id);
                
                var html = '<div class="question-header">' +
                          '<span class="question-number">문항 ' + questionNumber + '</span>' +
                          '</div>' +
                          '<div class="question-text">' + question.text + '</div>' +
                          '<div class="answer-options">';
                
                var options = [
                    { value: 1, label: '전혀 그렇지 않다' },
                    { value: 2, label: '그렇지 않다' },
                    { value: 3, label: '약간 그렇지 않다' },
                    { value: 4, label: '보통이다' },
                    { value: 5, label: '약간 그렇다' },
                    { value: 6, label: '그렇다' },
                    { value: 7, label: '매우 그렇다' }
                ];
                
                for (var j = 0; j < options.length; j++) {
                    var option = options[j];
                    html += '<div class="option-item" onclick="scwin.selectAnswer(' + question.id + ', ' + option.value + ')">' +
                           '<div class="option-circle" data-value="' + option.value + '"></div>' +
                           '<span class="option-label">' + option.label + '</span>' +
                           '</div>';
                }
                
                html += '</div>';
                questionDiv.innerHTML = html;
                
                return questionDiv;
            };
            
            // 답변 선택
            scwin.selectAnswer = function(questionId, value) {
                answers[questionId] = value;
                
                // UI 업데이트
                var questionElement = document.querySelector('[data-question-id="' + questionId + '"]');
                if (questionElement) {
                    var options = questionElement.querySelectorAll('.option-circle');
                    options.forEach(function(option) {
                        option.classList.remove('selected');
                        if (parseInt(option.dataset.value) === value) {
                            option.classList.add('selected');
                        }
                    });
                }
                
                console.log("답변 선택 - 문제:", questionId, "값:", value);
                scwin.checkAllAnswered();
            };
            
            // 현재 세트의 모든 문제가 답변되었는지 확인
            scwin.checkAllAnswered = function() {
                var currentSet = parseInt(dma_survey.get("currentSet"));
                var startIndex = (currentSet - 1) * 10;
                var endIndex = Math.min(startIndex + 10, surveyQuestions.length);
                
                var allAnswered = true;
                for (var i = startIndex; i < endIndex; i++) {
                    var questionId = surveyQuestions[i].id;
                    if (!answers[questionId]) {
                        allAnswered = false;
                        break;
                    }
                }
                
                var nextBtn = document.getElementById('btn_next');
                if (nextBtn) {
                    if (allAnswered) {
                        nextBtn.classList.add('enabled');
                    } else {
                        nextBtn.classList.remove('enabled');
                    }
                }
            };
            
            // 진행률 업데이트
            scwin.updateProgress = function() {
                var currentSet = parseInt(dma_survey.get("currentSet"));
                var totalSets = parseInt(dma_survey.get("totalSets"));
                var progress = (currentSet / totalSets) * 100;
                
                var progressBar = document.querySelector('.progress-fill');
                var progressText = document.querySelector('.progress-text');
                
                if (progressBar) {
                    progressBar.style.width = progress + '%';
                }
                if (progressText) {
                    progressText.textContent = currentSet + ' / ' + totalSets + ' 세트';
                }
            };
            
            // 이전 버튼 클릭
            scwin.btn_prev_onclick = function() {
                var currentSet = parseInt(dma_survey.get("currentSet"));
                if (currentSet > 1) {
                    dma_survey.set("currentSet", (currentSet - 1).toString());
                    scwin.displayCurrentSet();
                    scwin.updateProgress();
                    scwin.checkAllAnswered();
                }
            };
            
            // 다음 버튼 클릭
            scwin.btn_next_onclick = function() {
                var currentSet = parseInt(dma_survey.get("currentSet"));
                var totalSets = parseInt(dma_survey.get("totalSets"));
                
                if (currentSet < totalSets) {
                    dma_survey.set("currentSet", (currentSet + 1).toString());
                    scwin.displayCurrentSet();
                    scwin.updateProgress();
                    scwin.checkAllAnswered();
                } else {
                    // 설문 완료 - 결과 페이지로 이동
                    scwin.completeSurvey();
                }
            };
            
            // 설문 완료 처리
            scwin.completeSurvey = function() {
                console.log("설문조사 완료", answers);
                
                // 답변 데이터를 저장 (추후 서버 전송)
                dma_survey.set("answers", JSON.stringify(answers));
                
                // 유형 계산 (간단한 로직, 추후 서버에서 처리)
                var typeResult = scwin.calculateType(answers);
                
                // 결과를 sessionStorage에 임시 저장
                sessionStorage.setItem('surveyResult', JSON.stringify(typeResult));
                
                alert("설문조사가 완료되었습니다! 결과를 확인해보세요.");
                $p.url("SurveyResult.xml");
            };
            
            // 간단한 유형 계산 로직 (추후 서버에서 정교하게 처리)
            scwin.calculateType = function(answers) {
                var scores = { B: 0, A: 0, R: 0, I: 0, S: 0, T: 0, D: 0, F: 0 };
                
                surveyQuestions.forEach(function(question) {
                    var answer = answers[question.id];
                    if (answer) {
                        // B타입 문제인 경우 점수가 높을수록 B 성향
                        if (question.type === 'B') {
                            scores.B += answer;
                            scores.A += (8 - answer);  // 역점수
                        } else if (question.type === 'A') {
                            scores.A += answer;
                            scores.B += (8 - answer);
                        } else if (question.type === 'R') {
                            scores.R += answer;
                            scores.I += (8 - answer);
                        } else if (question.type === 'I') {
                            scores.I += answer;
                            scores.R += (8 - answer);
                        } else if (question.type === 'S') {
                            scores.S += answer;
                            scores.T += (8 - answer);
                        } else if (question.type === 'T') {
                            scores.T += answer;
                            scores.S += (8 - answer);
                        } else if (question.type === 'D') {
                            scores.D += answer;
                            scores.F += (8 - answer);
                        } else if (question.type === 'F') {
                            scores.F += answer;
                            scores.D += (8 - answer);
                        }
                    }
                });
                
                // 각 축별 최고 점수 타입 결정
                var typeCode = '';
                typeCode += scores.B > scores.A ? 'B' : 'A';
                typeCode += scores.R > scores.I ? 'R' : 'I'; 
                typeCode += scores.S > scores.T ? 'S' : 'T';
                typeCode += scores.D > scores.F ? 'D' : 'F';
                
                // 백분율 계산
                return {
                    typeCode: typeCode,
                    scores: {
                        B_A: Math.round((scores.B / (scores.B + scores.A)) * 100),
                        R_I: Math.round((scores.R / (scores.R + scores.I)) * 100),
                        S_T: Math.round((scores.S / (scores.S + scores.T)) * 100),
                        D_F: Math.round((scores.D / (scores.D + scores.F)) * 100)
                    },
                    rawScores: scores
                };
            };
        ]]></script>
        
        <style type="text/css"><![CDATA[
            .main-container {
                background-color: #f8f9fa;
                min-height: 100vh;
                font-family: "Malgun Gothic", "맑은 고딕", sans-serif;
                display: flex;
                flex-direction: column;
            }
            
            .header {
                width: 100%;
                height: 70px;
                background-color: #ffffff;
                border-bottom: 1px solid #e0e0e0;
                display: flex;
                align-items: center;
                justify-content: center;
                position: relative;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }
            
            .header-logo {
                height: 40px;
                width: auto;
            }
            
            .progress-container {
                width: 100%;
                background-color: white;
                padding: 20px;
                border-bottom: 1px solid #e0e0e0;
            }
            
            .progress-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 16px;
                max-width: 800px;
                margin-left: auto;
                margin-right: auto;
            }
            
            .progress-title {
                font-size: 18px;
                font-weight: 600;
                color: #333;
            }
            
            .progress-text {
                font-size: 14px;
                color: #666;
            }
            
            .progress-bar {
                width: 100%;
                height: 8px;
                background-color: #e9ecef;
                border-radius: 4px;
                overflow: hidden;
                max-width: 800px;
                margin: 0 auto;
            }
            
            .progress-fill {
                height: 100%;
                background: linear-gradient(90deg, #007bff, #0056b3);
                border-radius: 4px;
                transition: width 0.3s ease;
                width: 50%;
            }
            
            .content-area {
                flex: 1;
                display: flex;
                flex-direction: column;
                align-items: center;
                padding: 40px 20px;
                max-width: 800px;
                margin: 0 auto;
                width: 100%;
            }
            
            .survey-header {
                text-align: center;
                margin-bottom: 40px;
            }
            
            .survey-title {
                font-size: 28px;
                font-weight: bold;
                color: #333;
                margin-bottom: 12px;
            }
            
            .survey-description {
                font-size: 16px;
                color: #666;
                line-height: 1.5;
            }
            
            .questions-container {
                width: 100%;
                margin-bottom: 40px;
            }
            
            .question-item {
                background: white;
                border-radius: 12px;
                padding: 24px;
                margin-bottom: 24px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
            }
            
            .question-item:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
            }
            
            .question-header {
                margin-bottom: 16px;
            }
            
            .question-number {
                display: inline-block;
                background: linear-gradient(45deg, #007bff, #0056b3);
                color: white;
                padding: 6px 12px;
                border-radius: 20px;
                font-size: 12px;
                font-weight: 600;
            }
            
            .question-text {
                font-size: 18px;
                font-weight: 500;
                color: #333;
                margin-bottom: 20px;
                line-height: 1.6;
            }
            
            .answer-options {
                display: flex;
                flex-direction: column;
                gap: 8px;
            }
            
            .option-item {
                display: flex;
                align-items: center;
                gap: 12px;
                padding: 12px 16px;
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.2s ease;
                border: 2px solid transparent;
            }
            
            .option-item:hover {
                background-color: #f0f8ff;
                border-color: #cce7ff;
            }
            
            .option-circle {
                width: 20px;
                height: 20px;
                border: 2px solid #ddd;
                border-radius: 50%;
                position: relative;
                transition: all 0.2s ease;
                flex-shrink: 0;
            }
            
            .option-circle.selected {
                border-color: #007bff;
                background-color: #007bff;
            }
            
            .option-circle.selected::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 8px;
                height: 8px;
                background-color: white;
                border-radius: 50%;
            }
            
            .option-label {
                font-size: 15px;
                color: #333;
                font-weight: 500;
            }
            
            .navigation-area {
                display: flex;
                justify-content: space-between;
                width: 100%;
                gap: 20px;
            }
            
            .btn-nav {
                padding: 16px 32px;
                border-radius: 8px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                border: none;
                min-width: 120px;
            }
            
            .btn-prev {
                background-color: #6c757d;
                color: white;
            }
            
            .btn-prev:hover {
                background-color: #5a6268;
            }
            
            .btn-prev:disabled {
                background-color: #e9ecef;
                color: #6c757d;
                cursor: not-allowed;
            }
            
            .btn-next {
                background-color: #e9ecef;
                color: #6c757d;
                cursor: not-allowed;
            }
            
            .btn-next.enabled {
                background-color: #007bff;
                color: white;
                cursor: pointer;
            }
            
            .btn-next.enabled:hover {
                background-color: #0056b3;
            }
            
            .instruction-box {
                background: linear-gradient(135deg, #e3f2fd, #bbdefb);
                border: 1px solid #2196f3;
                border-radius: 12px;
                padding: 20px;
                margin-bottom: 30px;
                text-align: center;
            }
            
            .instruction-text {
                font-size: 16px;
                color: #1976d2;
                font-weight: 500;
                margin: 0;
            }
        ]]></style>
    </head>
    
    <body ev:onpageload="scwin.onpageload">
        <xf:group class="main-container">
            <xf:group class="header">
                <xf:image src="/InsWebApp/images/ws5/weaveTypeLogo.png" class="header-logo"></xf:image>
            </xf:group>
            
            <xf:group class="progress-container">
                <xf:group class="progress-header">
                    <w2:textbox class="progress-title" label="개발자 유형 검사 진행중" tagname="div"></w2:textbox>
                    <w2:textbox class="progress-text" label="1 / 2 세트" tagname="div"></w2:textbox>
                </xf:group>
                <xf:group class="progress-bar">
                    <xf:group class="progress-fill"></xf:group>
                </xf:group>
            </xf:group>
            
            <xf:group class="content-area">
                <xf:group class="survey-header">
                    <w2:textbox class="survey-title" label="다음 문항들을 읽고 해당하는 정도를 선택해주세요" tagname="h2"></w2:textbox>
                    <w2:textbox class="survey-description" label="정답은 없습니다. 평소 자신의 모습과 가장 가까운 답변을 선택해주세요." tagname="p"></w2:textbox>
                </xf:group>
                
                <xf:group class="instruction-box">
                    <w2:textbox class="instruction-text" label="📝 모든 문항에 응답해야 다음 단계로 진행할 수 있습니다" tagname="p"></w2:textbox>
                </xf:group>
                
                <xf:group class="questions-container">
                    <!-- 문제들이 동적으로 생성됨 -->
                </xf:group>
                
                <xf:group class="navigation-area">
                    <xf:trigger class="btn-nav btn-prev" ev:onclick="scwin.btn_prev_onclick">
                        <xf:label>이전</xf:label>
                    </xf:trigger>
                    
                    <xf:trigger class="btn-nav btn-next" id="btn_next" ev:onclick="scwin.btn_next_onclick">
                        <xf:label>다음</xf:label>
                    </xf:trigger>
                </xf:group>
            </xf:group>
        </xf:group>
    </body>
</html>
