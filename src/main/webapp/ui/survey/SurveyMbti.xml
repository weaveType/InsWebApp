<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">

	<head meta_screenName="weaveType 설문 분석">
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
				<!-- 설문 질문 조회 결과 -->
				<w2:dataMap baseNode="map" id="dma_questionsResult">
					<w2:keyInfo>
						<w2:key id="questions" name="질문그룹" dataType="text" value=""></w2:key>
						<w2:key id="totalCount" name="총질문수" dataType="number" value="0"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>

				<!-- 설문 응답 제출 데이터 -->
				<w2:dataMap baseNode="map" id="dma_surveySubmit">
					<w2:keyInfo>
						<w2:key id="userId" name="사용자ID" dataType="text" value="TEST_USER"></w2:key>
						<w2:key id="typeId" name="타입ID" dataType="number" value="1"></w2:key>
						<w2:key id="answers" name="응답목록" dataType="text" value=""></w2:key>
					</w2:keyInfo>
				</w2:dataMap>

				<!-- 분석 결과 데이터 -->
				<w2:dataMap baseNode="map" id="dma_analysisResult">
					<w2:keyInfo>
						<w2:key id="typeId" name="타입ID" dataType="number" value="0"></w2:key>
						<w2:key id="typeCode" name="유형코드" dataType="text" value=""></w2:key>
						<w2:key id="typeName" name="유형명" dataType="text" value=""></w2:key>
						<w2:key id="typeDescription" name="유형설명" dataType="text" value=""></w2:key>
						<w2:key id="scores" name="점수정보" dataType="text" value=""></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>

			<w2:workflowCollection></w2:workflowCollection>

			<!-- 설문 질문 조회 -->
			<xf:submission id="sbm_getQuestions" ref="" target='data:json,{"id":"dma_questionsResult"}'
				action="/InsWebApp/SV0001Questions.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous"
				processMsg="설문 질문을 불러오는 중입니다..." ev:submitdone="scwin.sbm_getQuestions_submitdone" ev:submiterror="scwin.sbm_getQuestions_submiterror">
			</xf:submission>

			<!-- 설문 응답 제출 -->
			<xf:submission id="sbm_submitSurvey" ref='data:json,{"id":"dma_surveySubmit"}'
				target='data:json,{"id":"dma_analysisResult"}' action="/InsWebApp/SV0001Submit.pwkjson" method="post" mediatype="application/json"
				encoding="UTF-8" mode="asynchronous" processMsg="설문을 분석하는 중입니다..." ev:submitdone="scwin.sbm_submitSurvey_submitdone"
				ev:submiterror="scwin.sbm_submitSurvey_submiterror">
			</xf:submission>
		</xf:model>

		<w2:layoutInfo />
		<w2:publicInfo method="" />

		<script type="text/javascript"><![CDATA[
            // 설문 질문 데이터 저장소 (JavaScript 객체로 관리)
            scwin.surveyQuestions = {};
            scwin.userAnswers = {};
            
            scwin.onpageload = function() {
                
                // 사용자 권한 체크 (기업 사용자 접근 차단)
                if (!scwin.checkUserPermission()) {
                    return; // 권한이 없으면 더 이상 진행하지 않음
                }
                
                // 설문 질문 조회
                scwin.loadSurveyQuestions();
            };
            
            // 사용자 권한 체크 함수
            scwin.checkUserPermission = function() {
                try {
                    // 쿠키에서 userInfo 가져오기
                    var userInfo = scwin.getUserInfoFromCookie();
                    
                    if (userInfo === null) {
                        console.warn("사용자 정보를 가져올 수 없음");
                        $c.win.alert("사용자 정보를 확인할 수 없습니다. 다시 로그인해 주세요.");
                        $p.url("../common/MainPage.xml");
                        return false;
                    }
                    
                    if (userInfo && userInfo.role === "COMPANY") {
                        // 기업 사용자인 경우 접근 차단
                        $c.win.alert("죄송합니다. 개발자 유형 검사는 개인 사용자만 이용 가능합니다.\n기업 회원은 채용 공고 등록 및 관리 기능을 이용하실 수 있습니다.");
                        
                        // 메인 페이지로 리다이렉트
                        $p.url("../common/MainPage.xml");
                        return false;
                    }
                    
                    return true; // 개인 사용자는 접근 허용
                } catch (error) {
                    console.error("사용자 권한 체크 중 오류:", error);
                    // 오류 발생 시 안전하게 메인 페이지로 리다이렉트
                    $c.win.alert("사용자 정보를 확인할 수 없습니다. 다시 로그인해 주세요.");
                    $p.url("../common/MainPage.xml");
                    return false;
                }
            };
            
            // 쿠키에서 사용자 정보 파싱 함수 (PostDetail.xml과 동일한 방식)
            scwin.getUserInfoFromCookie = function() {
                try {
                    var userInfoCookieStr = WebSquare.cookie.getCookie("userInfo");
                    
                    if (userInfoCookieStr && userInfoCookieStr.trim() !== "") {
                        var userInfo = JSON.parse(userInfoCookieStr);
                        return userInfo;
                    }
                    return null;
                } catch (error) {
                    console.error("사용자 정보 쿠키 파싱 오류:", error);
                    return null;
                }
            };
            
            // 설문 질문 로드
            scwin.loadSurveyQuestions = function() {
                $c.sbm.execute(sbm_getQuestions);
            };
            
            // 설문 질문 조회 성공 콜백
            scwin.sbm_getQuestions_submitdone = function(e) {
                
                var response = e.responseJSON;
                if (response && response.questions) {
                    // 질문 데이터 저장
                    scwin.surveyQuestions = response.questions;
                    
                    // UI 렌더링
                    scwin.renderSurveyQuestions();
                    
                    // 진행률 초기화
                    scwin.updateProgress();
                    
                } else {
                    console.error("설문 질문 데이터가 없습니다:", response);
                    $c.win.alert("설문 질문을 불러오는데 실패했습니다.");
                }
            };
            
            // 설문 질문 조회 실패 콜백
            scwin.sbm_getQuestions_submiterror = function(e) {
                console.error("설문 질문 조회 실패:", e);
                $c.win.alert("설문 질문을 불러오는데 실패했습니다.");
            };
            
            // 설문 문항 UI 렌더링
            scwin.renderSurveyQuestions = function() {
                var questionContainer = document.querySelector('.question-container');
                if (!questionContainer) return;
                
                var html = '';
                var axisNames = {
                    'B_A': { name: 'Builder vs Architect', desc: '개발 스타일' },
                    'R_I': { name: 'Innovate vs Refactor', desc: '기술 성향 (양수: Refactor, 음수: Innovate)' },
                    'S_T': { name: 'Solo vs Team', desc: '협업 방식' },
                    'D_F': { name: 'Debug vs Feature', desc: '작업 선호' }
                };
                
                // 축 순서를 명시적으로 지정해서 렌더링 (B_A -> R_I -> S_T -> D_F)
                var axisOrder = ['B_A', 'R_I', 'S_T', 'D_F'];
                
                for (var i = 0; i < axisOrder.length; i++) {
                    var axis = axisOrder[i];
                    var questions = scwin.surveyQuestions[axis];
                    var axisInfo = axisNames[axis] || { name: axis, desc: '' };
                    
                    // 축에 질문이 없으면 건너뛰기
                    if (!questions || questions.length === 0) {
                        console.warn('축 ' + axis + '에 질문이 없습니다.');
                        continue;
                    }
                    
                    html += '<div class="axis-section">';
                    html += '<div class="axis-header">';
                    html += '<h3 class="axis-title">' + axisInfo.name + '</h3>';
                    html += '<p class="axis-desc">' + axisInfo.desc + '</p>';
                    html += '</div>';
                    
                    // 해당 축의 질문들
                    for (var q = 0; q < questions.length; q++) {
                        var question = questions[q];
                        
                        html += '<div class="question-card" data-question-id="' + question.questionId + '">';
                        html += '<div class="question-number">Q' + question.questionId + '</div>';
                        html += '<div class="question-text">' + question.questionText + '</div>';
                        html += '<div class="answer-options">';
                        
                        // 7점 척도 라디오 버튼
                        for (var j = 1; j <= 7; j++) {
                            var label = '';
                            if (j === 1) label = '전혀 그렇지 않다';
                            else if (j === 4) label = '보통이다';
                            else if (j === 7) label = '매우 그렇다';
                            
                            html += '<label class="option-label">';
                            html += '<input type="radio" name="question_' + question.questionId + '" value="' + j + '" data-question-id="' + question.questionId + '" data-value="' + j + '">';
                            html += '<span class="option-number">' + j + '</span>';
                            html += '<span class="option-text">' + label + '</span>';
                            html += '</label>';
                        }
                        
                        html += '</div>';
                        html += '</div>';
                    }
                    
                    html += '</div>'; // axis-section 닫기
                }
                
                questionContainer.innerHTML = html;
                
                // 이벤트 리스너 바인딩
                scwin.bindAnswerEvents();
                
                // 스크롤 이벤트 추가
                scwin.addScrollEvent();
            };
            
            // 답변 이벤트 바인딩
            scwin.bindAnswerEvents = function() {
                var radioButtons = document.querySelectorAll('input[type="radio"][data-question-id]');
                
                for (var i = 0; i < radioButtons.length; i++) {
                    radioButtons[i].addEventListener('change', function(event) {
                        var questionId = parseInt(event.target.getAttribute('data-question-id'));
                        var value = parseInt(event.target.getAttribute('data-value'));
                        scwin.handleAnswerChange(questionId, value);
                    });
                }
            };
            
            // 답변 변경 핸들러
            scwin.handleAnswerChange = function(questionId, value) {
                // 사용자 답변 저장
                scwin.userAnswers[questionId] = value;
                
                // 진행률 업데이트
                scwin.updateProgress();
                
            };
            
            // 진행률 업데이트
            scwin.updateProgress = function() {
                var totalQuestions = scwin.getTotalQuestionCount();
                var answeredQuestions = Object.keys(scwin.userAnswers).length;
                
                var progress = totalQuestions > 0 ? Math.round((answeredQuestions / totalQuestions) * 100) : 0;
                
                // 진행률 바 업데이트
                var progressBar = document.querySelector('.progress-fill');
                var progressText = document.querySelector('.progress-text');
                
                if (progressBar) {
                    progressBar.style.width = progress + '%';
                }
                if (progressText) {
                    progressText.textContent = answeredQuestions + ' / ' + totalQuestions + ' 완료 (' + progress + '%)';
                }
                
                // 완료 버튼 활성화/비활성화
                var submitBtn = document.querySelector('.btn-submit');
                if (submitBtn) {
                    if (progress === 100) {
                        submitBtn.disabled = false;
                        submitBtn.classList.remove('disabled');
                    } else {
                        submitBtn.disabled = true;
                        submitBtn.classList.add('disabled');
                    }
                }
            };
            
            // 전체 질문 수 계산
            scwin.getTotalQuestionCount = function() {
                var total = 0;
                for (var axis in scwin.surveyQuestions) {
                    total += scwin.surveyQuestions[axis].length;
                }
                return total;
            };
            
            // 스크롤 이벤트 추가 (현재 보고있는 섹션 하이라이트)
            scwin.addScrollEvent = function() {
                var sections = document.querySelectorAll('.axis-section');
                var navItems = document.querySelectorAll('.progress-axis');
                
                window.addEventListener('scroll', function() {
                    var current = '';
                    sections.forEach(function(section) {
                        var sectionTop = section.offsetTop;
                        if (window.pageYOffset >= (sectionTop - 200)) {
                            var axisHeader = section.querySelector('.axis-title');
                            if (axisHeader) {
                                current = axisHeader.textContent;
                            }
                        }
                    });
                    
                    navItems.forEach(function(item) {
                        item.classList.remove('active');
                        if (item.textContent.includes(current.split(' ')[0])) {
                            item.classList.add('active');
                        }
                    });
                });
            };
            
            // 설문 제출
            scwin.btn_submit_onclick = function() {
                // 모든 문항에 답변했는지 확인
                var totalQuestions = scwin.getTotalQuestionCount();
                var answeredQuestions = Object.keys(scwin.userAnswers).length;
                
                if (answeredQuestions < totalQuestions) {
                    $c.win.alert("아직 답변하지 않은 문항이 있습니다.");
                    return;
                }
                
                // 응답 데이터 준비
                var answers = [];
                for (var questionId in scwin.userAnswers) {
                    answers.push({
                        questionId: parseInt(questionId),
                        answerValue: scwin.userAnswers[questionId]
                    });
                }
                
                // DataMap에 설정
                dma_surveySubmit.set("answers", JSON.stringify(answers));
                
                // Submission 실행
                $c.sbm.execute(sbm_submitSurvey);
            };
            
            // 개선된 탭 전환 함수
            scwin.switchTab = function(event) {
                var targetTab = null;
                var clickedElement = event.target;
                
                console.log('탭 전환 시도:', clickedElement);
                
                // 1. WebSquare xf:trigger의 value 속성을 통한 탭 매핑 (우선순위)
                if (clickedElement && clickedElement.value) {
                    var buttonValue = clickedElement.value;
                    console.log('버튼 값:', buttonValue);
                    
                    if (buttonValue === '코드 분석 결과') {
                        targetTab = 'code';
                    } else if (buttonValue === '설문 답변 분석') {
                        targetTab = 'survey';
                    }
                }
                
                // 2. 직접 data-tab 속성 확인
                if (!targetTab && clickedElement && clickedElement.getAttribute) {
                    targetTab = clickedElement.getAttribute('data-tab');
                }
                
                // 3. 부모 요소에서 찾기 (더 강화된 버전)
                if (!targetTab && clickedElement) {
                    var parent = clickedElement.parentElement;
                    var depth = 0;
                    while (parent && !targetTab && depth < 10) {
                        if (parent.getAttribute && parent.getAttribute('data-tab')) {
                            targetTab = parent.getAttribute('data-tab');
                            break;
                        }
                        // WebSquare 특수 구조에서 클래스로도 찾기
                        if (parent.classList && parent.classList.contains('tab-button')) {
                            targetTab = parent.getAttribute('data-tab');
                            break;
                        }
                        parent = parent.parentElement;
                        depth++;
                    }
                }
                
                // 4. 클릭된 요소가 속한 탭 버튼 찾기
                if (!targetTab) {
                    var allTabButtons = document.querySelectorAll('.tab-button');
                    for (var i = 0; i < allTabButtons.length; i++) {
                        var tabButton = allTabButtons[i];
                        if (tabButton.contains(clickedElement) || tabButton === clickedElement) {
                            targetTab = tabButton.getAttribute('data-tab');
                            console.log('탭 버튼에서 찾은 targetTab:', targetTab);
                            break;
                        }
                    }
                }
                
                // targetTab이 여전히 null이면 기본값 설정
                if (!targetTab) {
                    console.warn('targetTab을 찾을 수 없어 기본값 설정');
                    targetTab = 'code'; // 기본값으로 코드 분석 탭 설정
                }
                
                console.log('최종 targetTab:', targetTab);
                
                // 모든 탭 버튼 비활성화
                var tabButtons = document.querySelectorAll('.tab-button');
                tabButtons.forEach(function(button) {
                    button.classList.remove('active');
                    button.setAttribute('aria-selected', 'false');
                });
                
                // 모든 탭 패널 숨기기
                var tabPanels = document.querySelectorAll('.tab-panel');
                tabPanels.forEach(function(panel) {
                    panel.classList.remove('active');
                    panel.setAttribute('aria-hidden', 'true');
                    panel.style.display = 'none';
                });
                
                // 선택된 탭 버튼 활성화
                var targetButton = document.querySelector('.tab-button[data-tab="' + targetTab + '"]');
                if (targetButton) {
                    targetButton.classList.add('active');
                    targetButton.setAttribute('aria-selected', 'true');
                    console.log('탭 버튼 활성화됨:', targetButton);
                }
                
                // 선택된 탭 패널 활성화 (인덱스 기반으로 더 안전하게)
                var targetPanel = null;
                if (targetTab === 'code' && tabPanels.length > 0) {
                    targetPanel = tabPanels[0];
                } else if (targetTab === 'survey' && tabPanels.length > 1) {
                    targetPanel = tabPanels[1];
                }
                
                if (targetPanel) {
                    targetPanel.classList.add('active');
                    targetPanel.setAttribute('aria-hidden', 'false');
                    targetPanel.style.display = 'block';
                    console.log('탭 패널 활성화됨:', targetPanel);
                    
                    // 탭 전환 후 부드러운 스크롤
                    setTimeout(function() {
                        var tabsContainer = targetPanel.closest('.analysis-tabs');
                        if (tabsContainer) {
                            tabsContainer.scrollIntoView({
                                behavior: 'smooth',
                                block: 'start'
                            });
                        }
                    }, 150);
                } else {
                    console.error('targetPanel을 찾을 수 없습니다:', targetTab);
                }
            };
            
            // 키보드 접근성 지원
            scwin.handleTabKeydown = function(event) {
                var tabButtons = document.querySelectorAll('.tab-button');
                var currentIndex = -1;
                
                // 현재 포커스된 탭 버튼 찾기 (WebSquare 렌더링 방식 고려)
                for (var i = 0; i < tabButtons.length; i++) {
                    var tabButton = tabButtons[i];
                    // WebSquare의 input button 요소와 매칭
                    if (tabButton.contains(event.target) || tabButton === event.target || 
                        (event.target.tagName === 'INPUT' && event.target.classList.contains('tab-button'))) {
                        currentIndex = i;
                        break;
                    }
                }
                
                if (currentIndex === -1) {
                    console.warn('현재 포커스된 탭을 찾을 수 없습니다.');
                    return;
                }
                
                switch(event.key) {
                    case 'ArrowLeft':
                        event.preventDefault();
                        var prevIndex = (currentIndex - 1 + tabButtons.length) % tabButtons.length;
                        tabButtons[prevIndex].focus();
                        break;
                    case 'ArrowRight':
                        event.preventDefault();
                        var nextIndex = (currentIndex + 1) % tabButtons.length;
                        tabButtons[nextIndex].focus();
                        break;
                    case 'Home':
                        event.preventDefault();
                        tabButtons[0].focus();
                        break;
                    case 'End':
                        event.preventDefault();
                        tabButtons[tabButtons.length - 1].focus();
                        break;
                }
            };
            
            // 답변 분석 결과 표시 함수
            scwin.displayAnswerAnalysis = function(result) {
                
                // 설문 답변 분석 탭 패널 찾기 (인덱스 기반)
                var tabPanels = document.querySelectorAll('.tab-panel');
                var surveyTabPanel = tabPanels.length > 1 ? tabPanels[1] : null;
                
                if (!surveyTabPanel) {
                    console.error('설문 답변 분석 탭 패널을 찾을 수 없습니다.');
                    return;
                }
                
                // 기존 내용 제거
                surveyTabPanel.innerHTML = '';
                
                // 답변 분석 섹션 생성
                var section = document.createElement('div');
                section.className = 'answer-analysis-section';
                section.innerHTML = `
                    <div class="answer-analysis-title">설문 답변 분석</div>
                    <div class="answer-analysis-content"></div>
                `;
                
                surveyTabPanel.appendChild(section);
                
                var contentEl = surveyTabPanel.querySelector('.answer-analysis-content');
                if (!contentEl) return;
                
                var html = '';
                
                // 답변별 상세 분석
                if (result.answerAnalyses && result.answerAnalyses.length > 0) {
                    html += '<div class="answer-item">';
                    html += '<div class="answer-header">';
                    html += '<h4 class="answer-title">선택한 답변 분석</h4>';
                    html += '</div>';
                    
                    result.answerAnalyses.forEach(function(analysis) {
                        var impactClass = analysis.impact === '높음' ? 'high' : analysis.impact === '보통' ? 'medium' : 'low';
                        
                        html += '<div class="answer-card ' + impactClass + '">';
                        html += '<div class="answer-question">';
                        html += '<span class="question-number">Q' + analysis.questionId + '</span>';
                        html += '<span class="question-text">' + analysis.questionText + '</span>';
                        html += '</div>';
                        html += '<div class="answer-details">';
                        html += '<div class="answer-value">답변: ' + analysis.answerValue + '점</div>';
                        html += '<div class="answer-axis">' + analysis.axisDescription + '</div>';
                        html += '<div class="answer-contribution">기여도: ' + analysis.contribution.toFixed(1) + '점</div>';
                        html += '<div class="answer-impact">영향도: ' + analysis.impact + '</div>';
                        html += '</div>';
                        html += '<div class="answer-reasoning">' + analysis.reasoning + '</div>';
                        html += '</div>';
                    });
                    html += '</div>';
                }
                
                // 축별 기여도
                if (result.axisContributions) {
                    try {
                        var axisContributions = JSON.parse(result.axisContributions);
                        html += '<div class="answer-item">';
                        html += '<div class="answer-header">';
                        html += '<h4 class="answer-title">축별 기여도</h4>';
                        html += '</div>';
                        
                        for (var axis in axisContributions) {
                            var info = axisContributions[axis];
                            var axisName = scwin.getAxisDisplayName(axis);
                            
                            html += '<div class="axis-contribution-card">';
                            html += '<div class="axis-name">' + axisName + '</div>';
                            html += '<div class="axis-stats">';
                            html += '<div class="stat-item">';
                            html += '<span class="stat-label">총점:</span>';
                            html += '<span class="stat-value">' + info.total.toFixed(1) + '점</span>';
                            html += '</div>';
                            html += '<div class="stat-item">';
                            html += '<span class="stat-label">평균:</span>';
                            html += '<span class="stat-value">' + info.average.toFixed(1) + '점</span>';
                            html += '</div>';
                            html += '<div class="stat-item">';
                            html += '<span class="stat-label">답변 수:</span>';
                            html += '<span class="stat-value">' + info.count + '개</span>';
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                        }
                        html += '</div>';
                    } catch(e) {
                        console.error('축별 기여도 파싱 오류:', e);
                    }
                }
                
                // 답변 패턴 분석
                if (result.answerPattern) {
                    html += '<div class="answer-item">';
                    html += '<div class="answer-header">';
                    html += '<h4 class="answer-title">답변 패턴 분석</h4>';
                    html += '</div>';
                    html += '<div class="pattern-analysis">' + result.answerPattern.replace(/\n/g, '<br>') + '</div>';
                    html += '</div>';
                }
                
                // 주요 인사이트
                if (result.keyInsights) {
                    try {
                        var keyInsights = JSON.parse(result.keyInsights);
                        if (keyInsights.length > 0) {
                            html += '<div class="answer-item">';
                            html += '<div class="answer-header">';
                            html += '<h4 class="answer-title">주요 인사이트</h4>';
                            html += '</div>';
                            html += '<ul class="insights-list">';
                            keyInsights.forEach(function(insight) {
                                html += '<li class="insight-item">' + insight + '</li>';
                            });
                            html += '</ul>';
                            html += '</div>';
                        }
                    } catch(e) {
                        console.error('주요 인사이트 파싱 오류:', e);
                    }
                }
                
                contentEl.innerHTML = html;
                
                // 애니메이션 적용
                setTimeout(function() {
                    contentEl.querySelectorAll('.answer-item').forEach(function(element, index) {
                        setTimeout(function() {
                            element.style.opacity = '0';
                            element.style.transform = 'translateY(30px)';
                            element.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
                            
                            setTimeout(function() {
                                element.style.opacity = '1';
                                element.style.transform = 'translateY(0)';
                            }, 50);
                        }, index * 200);
                    });
                }, 500);
                
                // 설문 답변 분석 탭으로 자동 전환 (개선된 방식)
                setTimeout(function() {
                    console.log('자동 탭 전환 시도');
                    
                    // 직접 탭 전환 실행 (클릭 이벤트 대신)
                    var tabButtons = document.querySelectorAll('.tab-button');
                    var tabPanels = document.querySelectorAll('.tab-panel');
                    
                    // 모든 탭 버튼 비활성화
                    tabButtons.forEach(function(button) {
                        button.classList.remove('active');
                        button.setAttribute('aria-selected', 'false');
                    });
                    
                    // 모든 탭 패널 숨기기
                    tabPanels.forEach(function(panel) {
                        panel.classList.remove('active');
                        panel.setAttribute('aria-hidden', 'true');
                        panel.style.display = 'none';
                    });
                    
                    // 설문 분석 탭 활성화
                    var surveyTabButton = document.querySelector('.tab-button[data-tab="survey"]');
                    var surveyTabPanel = tabPanels.length > 1 ? tabPanels[1] : null;
                    
                    if (surveyTabButton) {
                        surveyTabButton.classList.add('active');
                        surveyTabButton.setAttribute('aria-selected', 'true');
                        console.log('설문 탭 버튼 활성화됨');
                    }
                    
                    if (surveyTabPanel) {
                        surveyTabPanel.classList.add('active');
                        surveyTabPanel.setAttribute('aria-hidden', 'false');
                        surveyTabPanel.style.display = 'block';
                        console.log('설문 탭 패널 활성화됨');
                        
                        // 부드러운 스크롤
                        setTimeout(function() {
                            var tabsContainer = surveyTabPanel.closest('.analysis-tabs');
                            if (tabsContainer) {
                                tabsContainer.scrollIntoView({
                                    behavior: 'smooth',
                                    block: 'start'
                                });
                            }
                        }, 100);
                    }
                }, 1000);
            };
            
            // 축 표시 이름 가져오기
            scwin.getAxisDisplayName = function(axis) {
                var names = {
                    'B_A': 'Builder vs Architect',
                    'R_I': 'Innovate vs Refactor',
                    'S_T': 'Solo vs Team',
                    'D_F': 'Debug vs Feature'
                };
                return names[axis] || axis;
            };
            
            // 설문 제출 성공 콜백
            scwin.sbm_submitSurvey_submitdone = function(e) {
                
                var response = e.responseJSON;
                if (response && response.typeCode) {
                    // 결과 표시
                    scwin.displaySurveyResult(response);

					var userInfoCookieStr = WebSquare.cookie.getCookie("userInfo");
					var userInfo = JSON.parse(userInfoCookieStr);

					// MBTI 정보 추가/업데이트
					userInfo.mbti = response.typeCode;

					// 쿠키에 다시 저장
					var updatedUserInfoStr = JSON.stringify(userInfo);
					WebSquare.cookie.setCookie("userInfo", updatedUserInfoStr);
				} else {
					console.error("분석 결과 데이터가 없습니다:", response);
					$c.win.alert("설문 분석에 실패했습니다.");
				}
			};

            // 설문 제출 실패 콜백
            scwin.sbm_submitSurvey_submiterror = function(e) {
                console.error("설문 제출 실패:", e);
                $c.win.alert("설문 분석 중 오류가 발생했습니다.");
            };

            // 설문 결과 표시
            scwin.displaySurveyResult = function(result) {

                // 유형 정의
                var typeDefinitions = {
                    'AITF': { name: '혁신적 팀 아키텍트', desc: '새로운 기술로 팀과 함께 혁신적인 기능을 설계하는 개발자' },
                    'AITD': { name: '미래지향 팀 디버거', desc: '새로운 기술로 팀과 함께 안정적인 시스템을 구축하는 개발자' },
                    'AISF': { name: '창의적 솔로 아키텍트', desc: '혁신적 설계를 통해 독창적인 기능을 개발하는 개발자' },
                    'AISD': { name: '혁신적 설계 전문가', desc: '새로운 기술로 안정적이고 혁신적인 설계를 하는 개발자' },
                    'ARTF': { name: '구조적 팀 빌더', desc: '검증된 기술로 팀과 함께 견고한 기능을 구축하는 개발자' },
                    'ARTD': { name: '완벽주의 팀 디버거', desc: '체계적 접근으로 팀과 함께 완벽한 시스템을 만드는 개발자' },
                    'ARSF': { name: '균형잡힌 솔로 아키텍트', desc: '체계적 설계로 개인의 강점을 발휘하는 개발자' },
                    'ARSD': { name: '체계적 리팩터 마스터', desc: '기존 시스템을 체계적으로 개선하는 개발자' },
                    'BITF': { name: '혁신적 팀 크리에이터', desc: '새로운 기술로 팀과 함께 빠르게 기능을 구현하는 개발자' },
                    'BITD': { name: '실험적 팀 문제 해결사', desc: '새로운 방법으로 팀과 함께 문제를 해결하는 개발자' },
                    'BISF': { name: '창의적 스피드 러너', desc: '혁신적 방법으로 빠르게 기능을 구현하는 개발자' },
                    'BISD': { name: '혁신적 솔로 디버거', desc: '새로운 접근법으로 독립적으로 문제를 해결하는 개발자' },
                    'BRTF': { name: '빠른 팀 기능 개발자', desc: '검증된 방법으로 팀과 함께 실용적인 기능을 개발하는 개발자' },
                    'BRTD': { name: '신뢰성 있는 팀 디버거', desc: '안정적 방법으로 팀과 함께 문제를 해결하는 개발자' },
                    'BRSF': { name: '민첩한 기능 빌더', desc: '실용적 접근으로 빠르게 기능을 구현하는 개발자' },
                    'BRSD': { name: '실용적 안정성 추구자', desc: '검증된 방법으로 안정적인 솔루션을 만드는 개발자' }
                };

                var typeCode = result.typeCode || 'ARTF';
                var typeInfo = typeDefinitions[typeCode] || typeDefinitions['ARTF'];

                // 이미지 경로 설정
                var imagePath = '/InsWebApp/images/ws5/mbti/png/' + typeCode + '.png';
                var mbtiImageEl = document.querySelector('#mbtiResultImage');
                if (mbtiImageEl) {
                    mbtiImageEl.src = imagePath;
                }

                // 설문 섹션 숨기기
                var surveySection = document.querySelector('.survey-section');
                if (surveySection) surveySection.style.display = 'none';

                // 결과 섹션 보이기
                var resultSection = document.querySelector('.result-section');
                if (resultSection) {
                    resultSection.style.display = 'block';

                    // 결과 섹션으로 부드럽게 스크롤 (약간의 딜레이 후)
                    setTimeout(function() {
                        resultSection.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });

                        // 추가 여백을 위해 약간 더 위로 스크롤
                        setTimeout(function() {
                            window.scrollBy({
                                top: -50, // 50px 위로 추가 스크롤
                                behavior: 'smooth'
                            });
                        }, 800); // 첫 번째 스크롤 완료 후
                    }, 300); // 결과 표시 후 300ms 딜레이
                }

                // 결과 데이터 설정
                var typeCodeEl = document.querySelector('.result-type-code');
                if (typeCodeEl) typeCodeEl.textContent = typeCode;

                var typeNameEl = document.querySelector('.result-type-name');
                if (typeNameEl) typeNameEl.textContent = typeInfo.name;

                var typeDescEl = document.querySelector('.result-type-desc');
                if (typeDescEl) typeDescEl.textContent = typeInfo.desc;

                // 점수를 시각적 바 차트로 표시
                if (result.scores) {
                    var scores = result.scores;

                    // 점수를 퍼센트로 변환하는 함수 (-50~+50을 0~100%로)
                    function scoreToPercentage(score) {
                        return Math.max(0, Math.min(100, (score + 50)));
                    }

                    // 순차적 애니메이션을 위한 함수
                    function animateBar(fillEl, indicatorEl, resultEl, percentage, score, leftLabel, rightLabel, leftColor, rightColor, delay) {
                        setTimeout(function() {
                            if (fillEl) {
                                fillEl.style.width = percentage + '%';
                            }
                            if (indicatorEl) {
                                indicatorEl.style.left = percentage + '%';
                            }

                            // 결과 텍스트 업데이트
                            setTimeout(function() {
                                if (resultEl) {
                                    var intensity = Math.abs(score);
                                    var intensityText = '';
                                    if (intensity < 10) intensityText = '약간';
                                    else if (intensity < 25) intensityText = '보통';
                                    else if (intensity < 40) intensityText = '강한';
                                    else intensityText = '매우 강한';

                                    if (score >= 0) {
                                        resultEl.textContent = intensityText + ' ' + rightLabel + ' 성향';
                                        resultEl.style.color = rightColor;
                                    } else {
                                        resultEl.textContent = intensityText + ' ' + leftLabel + ' 성향';
                                        resultEl.style.color = leftColor;
                                    }

                                    // 결과 카드 애니메이션
                                    resultEl.style.animation = 'resultFadeIn 0.6s ease-out forwards';
                                }
                            }, 800); // 바 애니메이션 후 결과 표시
                        }, delay);
                    }

                    // 각 축별 애니메이션 실행 (순차적)

                    // B/A 축 (+: Architect, -: Builder)
                    var abScore = scores['A_B'] || 0;
                    var abPercentage = scoreToPercentage(abScore);
                    animateBar(
                        document.querySelector('.score-bar-ab'),
                        document.querySelector('.score-indicator-ab'),
                        document.querySelector('.ab-result'),
                        abPercentage, abScore, 'Builder', 'Architect', '#6366f1', '#a855f7', 200
                    );

                    // R/I 축 (+: Refactor, -: Innovate)
                    var riScore = scores['R_I'] || 0;
                    var riPercentage = scoreToPercentage(riScore);
                    animateBar(
                        document.querySelector('.score-bar-ri'),
                        document.querySelector('.score-indicator-ri'),
                        document.querySelector('.ri-result'),
                        riPercentage, riScore, 'Innovate', 'Refactor', '#4f46e5', '#9333ea', 500
                    );

                    // S/T 축 (+: Team, -: Solo)
                    var stScore = scores['S_T'] || 0;
                    var stPercentage = scoreToPercentage(stScore);
                    animateBar(
                        document.querySelector('.score-bar-st'),
                        document.querySelector('.score-indicator-st'),
                        document.querySelector('.st-result'),
                        stPercentage, stScore, 'Solo', 'Team', '#3730a3', '#7c2d92', 800
                    );

                    // D/F 축 (+: Feature, -: Debug)
                    var dfScore = scores['D_F'] || 0;
                    var dfPercentage = scoreToPercentage(dfScore);
                    animateBar(
                        document.querySelector('.score-bar-df'),
                        document.querySelector('.score-indicator-df'),
                        document.querySelector('.df-result'),
                        dfPercentage, dfScore, 'Debug', 'Feature', '#1e40af', '#581c87', 1100
                    );
                }

                // 코드 분석 결과 표시 (완전한 CodeAnalysisMain.xml 방식)
                if (result.codeAnalysisComment || result.codeAnalysisDetail) {
                    console.log('코드 분석 결과 데이터:', {
                        comment: result.codeAnalysisComment,
                        detail: result.codeAnalysisDetail
                    });
                    
                    // 상세 분석 결과 표시
                    scwin.displayDetailedAnalysis(result);
                } else {
                    console.warn('코드 분석 결과가 없습니다.');
                    // 기본 메시지 표시
                    var tabPanels = document.querySelectorAll('.tab-panel');
                    var codeTabPanel = tabPanels.length > 0 ? tabPanels[0] : null;
                    if (codeTabPanel) {
                        codeTabPanel.innerHTML = 
                            '<div class="code-analysis-section">' +
                                '<div class="code-analysis-title">코드 분석 AI 코멘트</div>' +
                                '<div class="code-analysis-comment">코드 분석을 먼저 수행해주세요. 프로필 페이지에서 코드 분석을 진행할 수 있습니다.</div>' +
                            '</div>';
                    }
                }
                
                // 답변 분석 결과 표시
                scwin.displayAnswerAnalysis(result);
            };
            
            // 다시하기
            scwin.btn_restart_onclick = function() {
                // 모든 응답 초기화
                scwin.userAnswers = {};
                
                // 라디오 버튼 초기화
                var radioButtons = document.querySelectorAll('input[type="radio"]');
                radioButtons.forEach(function(radio) {
                    radio.checked = false;
                });
                
                // 결과 섹션 숨기기
                var resultSection = document.querySelector('.result-section');
                if (resultSection) resultSection.style.display = 'none';
                
                // 설문 섹션 보이기
                var surveySection = document.querySelector('.survey-section');
                if (surveySection) surveySection.style.display = 'block';
                
                // 진행률 초기화
                scwin.updateProgress();
                
                // 맨 위로 스크롤
                window.scrollTo(0, 0);
            };
            
            // 개인정보 수정으로 이동
            scwin.goToUserDetail = function() {
                $p.url("../user/UserDetail.xml");
            };
            
            // CodeAnalysisMain.xml에서 완벽하게 이식된 상세 분석 렌더링 함수
            scwin.displayDetailedAnalysis = function(data) {
                try {
                    // 코드 분석 탭 패널 찾기 (첫 번째 탭)
                    var tabPanels = document.querySelectorAll('.tab-panel');
                    var codeTabPanel = tabPanels.length > 0 ? tabPanels[0] : null;
                    
                    if (!codeTabPanel) {
                        console.error('코드 분석 탭 패널을 찾을 수 없습니다.');
                        return;
                    }

                    // fullAnalysis JSON 파싱 (CodeAnalysisMain.xml과 동일한 방식)
                    var fullAnalysis = {};
                    var detailedAnalysis = {};
                    
                    if (data && data.codeAnalysisDetail && typeof data.codeAnalysisDetail === 'string') {
                        try {
                            fullAnalysis = JSON.parse(data.codeAnalysisDetail);
                            detailedAnalysis = fullAnalysis.detailed_analysis || {};
                        } catch (e) {
                            console.warn('codeAnalysisDetail JSON 파싱 실패:', e);
                        }
                    } else if (data && data.analysisResult && typeof data.analysisResult === 'string') {
                        try {
                            fullAnalysis = JSON.parse(data.analysisResult);
                            detailedAnalysis = fullAnalysis.detailed_analysis || {};
                        } catch (e) {
                            console.warn('analysisResult JSON 파싱 실패:', e);
                        }
                    }

                    // 코드 분석 섹션 생성 (CodeAnalysisMain.xml 구조와 완전히 동일)
                    var codeAnalysisHtml = 
                        '<div class="code-analysis-section">' +
                            '<div class="code-analysis-title">코드 분석 AI 코멘트</div>' +
                            '<div class="code-analysis-comment">' + (data.codeAnalysisComment || '코드 구조와 패턴을 분석하여 개발 스타일을 도출했습니다.') + '</div>' +
                            '<div class="detailed-section">' +
                                '<div class="detailed-title">상세 분석 결과</div>';

                    // 분석 근거 섹션
                    var reasoning = detailedAnalysis.reasoning || '코드 구조와 패턴을 분석하여 개발 스타일을 도출했습니다.';
                    codeAnalysisHtml += 
                        '<div class="section-item reasoning-section">' +
                            '<div class="section-header">분석 근거</div>' +
                            '<div class="reasoning-content">' +
                                '<div class="detailed-reasoning">' + reasoning + '</div>' +
                            '</div>' +
                        '</div>';

                    // 코드 패턴 섹션
                    var codePatterns = detailedAnalysis.code_patterns || [];
                    codeAnalysisHtml += '<div class="section-item patterns-section">' +
                        '<div class="section-header">발견된 코드 패턴</div>' +
                        '<div class="code-patterns-list">';
                    
                    if (codePatterns.length > 0) {
                        for (var i = 0; i < codePatterns.length; i++) {
                            var pattern = codePatterns[i];
                            var evidenceHtml = '';
                            
                            if (pattern.evidence && pattern.evidence.length > 0) {
                                evidenceHtml = '<ul>';
                                for (var j = 0; j < pattern.evidence.length; j++) {
                                    evidenceHtml += '<li>' + pattern.evidence[j] + '</li>';
                                }
                                evidenceHtml += '</ul>';
                            }
                            
                            var impactScore = pattern.impact_score || 0;
                            var impactBars = '';
                            for (var k = 0; k < 10; k++) {
                                impactBars += '<span class="impact-bar ' + (k < impactScore ? 'filled' : '') + '"></span>';
                            }
                            
                            codeAnalysisHtml += 
                                '<div class="pattern-item">' +
                                    '<div class="pattern-header">' +
                                        '<h4 class="pattern-title">' + (pattern.pattern || 'Code Pattern') + '</h4>' +
                                        '<div class="pattern-impact">' +
                                            '<span class="impact-label">영향도</span>' +
                                            '<div class="impact-score">' + impactBars + '</div>' +
                                            '<span class="impact-number">' + impactScore + '/10</span>' +
                                        '</div>' +
                                    '</div>' +
                                    '<p class="pattern-description">' + (pattern.description || '') + '</p>' +
                                    '<div class="pattern-evidence">' + evidenceHtml + '</div>' +
                                '</div>';
                        }
                    } else {
                        codeAnalysisHtml += '<div class="no-patterns">발견된 코드 패턴이 없습니다.</div>';
                    }
                    codeAnalysisHtml += '</div></div>';

                    // 강점 섹션
                    var strengths = detailedAnalysis.strengths || [];
                    codeAnalysisHtml += '<div class="section-item strengths-section">' +
                        '<div class="section-header">개발 강점</div>' +
                        '<div class="strengths-content">';
                    
                    if (strengths.length > 0) {
                        codeAnalysisHtml += '<ul class="strengths-list">';
                        for (var i = 0; i < strengths.length; i++) {
                            codeAnalysisHtml += '<li class="strength-item"><span class="strength-icon"><i class="fas fa-check"></i></span>' + strengths[i] + '</li>';
                        }
                        codeAnalysisHtml += '</ul>';
                    } else {
                        codeAnalysisHtml += '<div class="no-strengths">분석된 강점이 없습니다.</div>';
                    }
                    codeAnalysisHtml += '</div></div>';

                    // 개선 제안 섹션
                    var suggestions = detailedAnalysis.suggestions || [];
                    codeAnalysisHtml += '<div class="section-item suggestions-section">' +
                        '<div class="section-header">개선 제안</div>' +
                        '<div class="suggestions-content">';
                    
                    if (suggestions.length > 0) {
                        codeAnalysisHtml += '<ul class="suggestions-list">';
                        for (var i = 0; i < suggestions.length; i++) {
                            codeAnalysisHtml += '<li class="suggestion-item"><span class="suggestion-icon"><i class="fas fa-lightbulb"></i></span>' + suggestions[i] + '</li>';
                        }
                        codeAnalysisHtml += '</ul>';
                    } else {
                        codeAnalysisHtml += '<div class="no-suggestions">개선 제안사항이 없습니다.</div>';
                    }
                    codeAnalysisHtml += '</div></div>';

                    // 닫는 태그
                    codeAnalysisHtml += '</div></div>';

                    // 탭 패널에 내용 설정
                    codeTabPanel.innerHTML = codeAnalysisHtml;

                    // 순차 애니메이션 적용 (CodeAnalysisMain.xml과 동일)
                    setTimeout(function() {
                        var items = codeTabPanel.querySelectorAll('.section-item');
                        items.forEach(function(element, index) {
                            setTimeout(function() {
                                element.classList.add('animated');
                            }, index * 200);
                        });
                    }, 500);

                    console.log('상세 분석 표시 완료 - 패턴:', codePatterns.length, '강점:', strengths.length, '제안:', suggestions.length);
                    
                } catch (error) {
                    console.error('상세 분석 표시 중 오류:', error);
                    var tabPanels = document.querySelectorAll('.tab-panel');
                    var codeTabPanel = tabPanels.length > 0 ? tabPanels[0] : null;
                    if (codeTabPanel) {
                        codeTabPanel.innerHTML = '<div class="error-message">상세 분석 정보를 불러오는 중 오류가 발생했습니다.</div>';
                    }
                }
            };

        ]]></script>

		<style type="text/css"><![CDATA[
            .main-container {
                background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
                min-height: 100vh;
                font-family: "Malgun Gothic", "맑은 고딕", sans-serif;
            }
            
            .content-area {
                max-width: 800px;
                margin: 0 auto;
                padding: 40px 20px;
            }
            
            /* ===== 설문 섹션 ===== */
            .survey-section {
                animation: fadeInUp 0.8s ease-out;
            }
            
            .page-header {
                text-align: center;
                margin-bottom: 50px;
            }
            
            .main-title {
                font-size: 36px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
            }
            
            .sub-title {
                font-size: 20px;
                color: #666;
                line-height: 1.5;
            }
            
            .progress-section {
                background: white;
                border-radius: 15px;
                padding: 25px;
                margin-bottom: 40px;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
                position: sticky;
                top: 20px;
                z-index: 100;
            }
            
            .progress-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 15px;
            }
            
            .progress-title {
                font-size: 18px;
                font-weight: bold;
                color: #333;
            }
            
            .progress-text {
                font-size: 14px;
                color: #666;
            }
            
            .progress-bar {
                width: 100%;
                height: 8px;
                background: #f0f0f0;
                border-radius: 4px;
                overflow: hidden;
                margin-bottom: 15px;
            }
            
            .progress-fill {
                height: 100%;
                background: linear-gradient(45deg, #007bff, #00c9ff);
                width: 0%;
                transition: width 0.3s ease;
            }
            
            .progress-nav {
                display: grid;
                grid-template-columns: repeat(4, 1fr);
                gap: 10px;
            }
            
            .progress-axis {
                text-align: center;
                padding: 8px;
                background: #f8f9fa;
                border-radius: 8px;
                font-size: 12px;
                color: #666;
                transition: all 0.3s ease;
            }
            
            .progress-axis.active {
                background: #007bff;
                color: white;
            }
            
            .axis-section {
                margin-bottom: 50px;
            }
            
            .axis-header {
                text-align: center;
                margin-bottom: 30px;
                padding: 30px 20px;
                background: white;
                border-radius: 15px;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
            }
            
            .axis-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
                margin-bottom: 8px;
            }
            
            .axis-desc {
                font-size: 16px;
                color: #666;
            }
            
            .question-card {
                background: white;
                border-radius: 15px;
                padding: 30px;
                margin-bottom: 25px;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
                transition: all 0.3s ease;
            }
            
            .question-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
            }
            
            .question-number {
                display: inline-block;
                background: #007bff;
                color: white;
                padding: 6px 12px;
                border-radius: 20px;
                font-size: 14px;
                font-weight: bold;
                margin-bottom: 16px;
            }
            
            .question-text {
                font-size: 18px;
                color: #333;
                line-height: 1.6;
                margin-bottom: 25px;
                font-weight: 500;
            }
            
            .answer-options {
                display: grid;
                grid-template-columns: repeat(7, 1fr);
                gap: 10px;
            }
            
            .option-label {
                display: flex;
                flex-direction: column;
                align-items: center;
                padding: 15px 8px;
                border: 2px solid #e9ecef;
                border-radius: 12px;
                cursor: pointer;
                transition: all 0.3s ease;
                text-align: center;
            }
            
            .option-label:hover {
                border-color: #007bff;
                background: #f8f9ff;
            }
            
            .option-label input[type="radio"] {
                display: none;
            }
            
            .option-label input[type="radio"]:checked + .option-number {
                background: #007bff;
                color: white;
            }
            
            .option-label input[type="radio"]:checked ~ .option-text {
                color: #007bff;
                font-weight: bold;
            }
            
            .option-number {
                width: 32px;
                height: 32px;
                border-radius: 50%;
                background: #f8f9fa;
                color: #666;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                margin-bottom: 8px;
                transition: all 0.3s ease;
            }
            
            .option-text {
                font-size: 11px;
                color: #666;
                line-height: 1.2;
                transition: all 0.3s ease;
            }
            
            .submit-section {
                text-align: center;
                margin-top: 50px;
            }
            
            .btn-submit {
                background: linear-gradient(45deg, #007bff, #0056b3);
                color: white;
                border: none;
                padding: 18px 60px;
                border-radius: 50px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 16px rgba(0, 123, 255, 0.3);
            }
            
            .btn-submit:hover:not(.disabled) {
                background: linear-gradient(45deg, #0056b3, #004494);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(0, 123, 255, 0.4);
            }
            
            .btn-submit.disabled {
                background: #ccc;
                cursor: not-allowed;
                box-shadow: none;
            }
            
            /* ===== 결과 섹션 ===== */
            .result-section {
                text-align: center;
                animation: fadeInUp 0.8s ease-out;
                display: none;
            }
            
            .result-header {
                margin-bottom: 40px;
            }
            
            .result-title {
                font-size: 36px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
            }
            
            .result-subtitle {
                font-size: 18px;
                color: #666;
            }
            
            .result-card {
                background: linear-gradient(145deg, #ffffff, #f8fafc);
                border-radius: 28px;
                padding: 50px 40px;
                margin: 0 auto 40px auto;
                max-width: 500px;
                box-shadow: 
                    0 20px 40px -12px rgba(0, 0, 0, 0.15),
                    0 8px 24px -8px rgba(0, 0, 0, 0.08),
                    inset 0 1px 0 rgba(255, 255, 255, 0.8);
                display: flex;
                flex-direction: column;
                align-items: center;
                text-align: center;
                border: 1px solid rgba(255, 255, 255, 0.8);
                position: relative;
                overflow: hidden;
            }
            
            .result-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, 
                    transparent, 
                    rgba(255, 255, 255, 0.4),
                    transparent);
                animation: cardShine 3s ease-in-out 1s;
            }
            
            @keyframes cardShine {
                0% { left: -100%; }
                100% { left: 100%; }
            }
            
            .mbti-result-image {
                display: block;
                margin: 0 auto 30px auto;
                max-width: 280px;
                width: 100%;
                height: auto;
                border-radius: 20px;
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: scale(0.3) rotate(-10deg);
                animation: imageReveal 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.5s forwards;
            }
            
            @keyframes imageReveal {
                0% {
                    opacity: 0;
                    transform: scale(0.3) rotate(-10deg);
                }
                50% {
                    opacity: 0.8;
                    transform: scale(1.05) rotate(2deg);
                }
                100% {
                    opacity: 1;
                    transform: scale(1) rotate(0deg);
                }
            }
            
            .result-type-code {
                font-size: 72px;
                font-weight: 900;
                background: linear-gradient(135deg, #2196f3 0%, #007bff 50%, #60a5fa 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 24px;
                font-family: 'Courier New', monospace;
                letter-spacing: 4px;
                text-shadow: 0 4px 12px rgba(33, 150, 243, 0.3);
                opacity: 0;
                transform: translateY(-30px) scale(0.8);
                animation: typeCodeReveal 0.8s cubic-bezier(0.34, 1.56, 0.64, 1) 1.2s forwards;
            }
            
            @keyframes typeCodeReveal {
                0% {
                    opacity: 0;
                    transform: translateY(-30px) scale(0.8);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }
            
            .result-type-name {
                font-size: 32px;
                font-weight: 800;
                color: #2d3436;
                margin-bottom: 20px;
                line-height: 1.2;
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: translateY(20px);
                animation: textSlideUp 0.6s ease-out 1.8s forwards;
            }
            
            .result-type-desc {
                font-size: 18px;
                color: #636e72;
                line-height: 1.7;
                max-width: 400px;
                font-weight: 500;
                
                /* 초기 상태: 숨김 */
                opacity: 0;
                transform: translateY(20px);
                animation: textSlideUp 0.6s ease-out 2.2s forwards;
            }
            
            @keyframes textSlideUp {
                0% {
                    opacity: 0;
                    transform: translateY(20px);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            .score-section {
                background: white;
                border-radius: 15px;
                padding: 30px;
                margin: 0 auto 40px auto;
                max-width: 600px;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
            }
            
            .score-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
                margin-bottom: 30px;
            }
            
            /* 코드 분석 결과 스타일 (CodeAnalysisMain.xml에서 완전히 이식) */
            .code-analysis-section {
                max-width: 800px;
                margin: 30px auto 40px auto;
                text-align: left;
            }

            .code-analysis-title {
                font-size: 28px;
                font-weight: bold;
                color: #333;
                text-align: center;
                margin-bottom: 40px;
                background: linear-gradient(135deg, #2196f3 0%, #007bff 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }

            .code-analysis-comment {
                background: #f8f9ff;
                border-radius: 12px;
                padding: 20px;
                border-left: 4px solid #2196f3;
                margin-bottom: 25px;
                font-size: 16px;
                line-height: 1.7;
                color: #495057;
                font-style: normal;
            }

            .code-analysis-detail {
                display: flex;
                flex-direction: column;
                gap: 16px;
            }

            /* 패턴 분석 스타일 */
            .pattern-item {
                background: linear-gradient(135deg, #fff5f5, #fff8f8);
                border-radius: 12px;
                padding: 20px;
                border: 1px solid #ffe6e6;
                transition: all 0.3s ease;
            }

            .pattern-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            }

            .pattern-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 12px;
            }

            .pattern-title {
                font-size: 16px;
                font-weight: bold;
                color: #2d3436;
                margin: 0;
            }

            .pattern-impact {
                display: flex;
                align-items: center;
                gap: 8px;
            }

            .impact-label {
                font-size: 12px;
                color: #666;
                font-weight: 500;
            }

            .impact-score {
                display: flex;
                gap: 2px;
            }

            .impact-bar {
                width: 12px;
                height: 4px;
                background: #e9ecef;
                border-radius: 2px;
            }

            .impact-bar.filled {
                background: linear-gradient(135deg, #667eea, #764ba2);
            }

            .impact-number {
                font-size: 12px;
                font-weight: bold;
                color: #667eea;
            }

            .pattern-description {
                font-size: 14px;
                color: #636e72;
                line-height: 1.6;
                margin: 0 0 12px 0;
            }

            .pattern-evidence ul {
                margin: 0;
                padding-left: 20px;
            }

            .pattern-evidence li {
                font-size: 13px;
                color: #6c757d;
                margin-bottom: 4px;
                line-height: 1.5;
            }

            /* 강점 분석 스타일 */
            .strengths-list {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }

            .strength-item {
                background: linear-gradient(135deg, #f0fff4, #f8fff8);
                border-radius: 8px;
                padding: 16px;
                border-left: 4px solid #28a745;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #2d5016;
                transition: all 0.3s ease;
            }

            .strength-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
            }

            .strength-icon {
                font-size: 18px;
                color: #28a745;
                font-weight: bold;
            }

            /* 개선 제안 스타일 */
            .suggestions-list {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }

            .suggestion-item {
                background: linear-gradient(135deg, #fff8e1, #fffbf0);
                border-radius: 8px;
                padding: 16px;
                border-left: 4px solid #ffc107;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #8b6e00;
                transition: all 0.3s ease;
            }

            .suggestion-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 12px rgba(255, 193, 7, 0.15);
            }

            .suggestion-icon {
                font-size: 18px;
                color: #ffc107;
            }

            .no-patterns, .no-strengths, .no-suggestions, .error-message {
                text-align: center;
                color: #999;
                font-style: italic;
                padding: 30px;
                background: #f8f9fa;
                border-radius: 8px;
            }

            /* 탭 스타일 */
            .analysis-tabs {
                max-width: 800px;
                margin: 30px auto 40px auto;
            }

            .tab-buttons {
                display: flex;
                gap: 8px;
                margin-bottom: 30px;
                background: #f8f9fa;
                border-radius: 16px;
                padding: 8px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
            }

            .tab-button {
                flex: 1;
                background: transparent;
                border: none;
                padding: 16px 24px;
                border-radius: 12px;
                font-size: 16px;
                font-weight: 600;
                color: #6c757d;
                cursor: pointer;
                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                position: relative;
                overflow: hidden;
            }

            .tab-button::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, 
                    transparent, 
                    rgba(255, 255, 255, 0.4),
                    transparent);
                transition: left 0.5s ease;
            }

            .tab-button:hover::before {
                left: 100%;
            }

            .tab-button:hover {
                color: #495057;
                background: rgba(255, 255, 255, 0.8);
                transform: translateY(-1px);
            }

            .tab-button.active {
                background: linear-gradient(135deg, #2196f3 0%, #007bff 100%);
                color: white;
                box-shadow: 0 4px 16px rgba(33, 150, 243, 0.3);
                transform: translateY(-2px);
            }

            .tab-button.active:hover {
                background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(33, 150, 243, 0.4);
            }

            .tab-content {
                position: relative;
                min-height: 400px;
            }

            .tab-panel {
                display: none !important;
                opacity: 0;
                transform: translateY(20px);
                transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            }

            .tab-panel.active {
                display: block !important;
                opacity: 1;
                transform: translateY(0);
            }

            /* 답변 분석 섹션 스타일 */
            .answer-analysis-section {
                max-width: 800px;
                margin: 0 auto;
                text-align: left;
            }

            .answer-analysis-title {
                font-size: 28px;
                font-weight: bold;
                color: #333;
                text-align: center;
                margin-bottom: 40px;
                background: linear-gradient(135deg, #2196f3 0%, #007bff 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }

            .answer-analysis-content {
                display: flex;
                flex-direction: column;
                gap: 25px;
            }

            .answer-item {
                background: white;
                border-radius: 16px;
                padding: 30px;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
                border: 1px solid rgba(0, 0, 0, 0.05);
                opacity: 0;
                transform: translateY(30px);
                transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
            }

            .answer-item.animated {
                opacity: 1;
                transform: translateY(0);
            }

            .answer-header {
                font-size: 20px;
                font-weight: bold;
                color: #2d3436;
                margin-bottom: 20px;
                display: flex;
                align-items: center;
                gap: 8px;
                border-bottom: 2px solid #e9ecef;
                padding-bottom: 12px;
            }

            .answer-title {
                margin: 0;
            }

            /* 답변 카드 스타일 */
            .answer-card {
                background: linear-gradient(135deg, #fff5f5, #fff8f8);
                border-radius: 12px;
                padding: 20px;
                border: 1px solid #ffe6e6;
                margin-bottom: 16px;
                transition: all 0.3s ease;
            }

            .answer-card.high {
                background: linear-gradient(135deg, #fff0f0, #fff5f5);
                border-color: #ffcccc;
            }

            .answer-card.medium {
                background: linear-gradient(135deg, #fff8f0, #fffaf5);
                border-color: #ffe6cc;
            }

            .answer-card.low {
                background: linear-gradient(135deg, #f0fff0, #f5fff5);
                border-color: #ccffcc;
            }

            .answer-card:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            }

            .answer-question {
                display: flex;
                align-items: center;
                gap: 12px;
                margin-bottom: 12px;
            }

            .question-number {
                background: #667eea;
                color: white;
                padding: 4px 8px;
                border-radius: 6px;
                font-size: 12px;
                font-weight: bold;
            }

            .question-text {
                font-weight: bold;
                color: #2d3436;
                flex: 1;
            }

            .answer-details {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 8px;
                margin-bottom: 12px;
            }

            .answer-value, .answer-axis, .answer-contribution, .answer-impact {
                font-size: 14px;
                color: #636e72;
            }

            .answer-reasoning {
                background: #f8f9ff;
                border-radius: 8px;
                padding: 12px;
                border-left: 4px solid #2196f3;
                font-size: 14px;
                color: #495057;
                line-height: 1.6;
            }

            /* 축별 기여도 카드 */
            .axis-contribution-card {
                background: linear-gradient(135deg, #e3f2fd, #f5faff);
                border-radius: 12px;
                padding: 20px;
                border: 1px solid #2196f3;
                margin-bottom: 12px;
                transition: all 0.3s ease;
            }

            .axis-contribution-card:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            }

            .axis-name {
                font-size: 16px;
                font-weight: bold;
                color: #2d3436;
                margin-bottom: 12px;
            }

            .axis-stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
                gap: 8px;
            }

            .stat-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 8px 12px;
                background: rgba(255, 255, 255, 0.8);
                border-radius: 6px;
            }

            .stat-label {
                font-size: 12px;
                color: #666;
            }

            .stat-value {
                font-weight: bold;
                color: #2196f3;
            }

            /* 패턴 분석 */
            .pattern-analysis {
                background: #f8f9ff;
                border-radius: 12px;
                padding: 20px;
                border-left: 4px solid #667eea;
                font-size: 14px;
                line-height: 1.7;
                color: #495057;
            }

            /* 인사이트 리스트 */
            .insights-list {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }

            .insight-item {
                background: linear-gradient(135deg, #e3f2fd, #f5faff);
                border-radius: 8px;
                padding: 16px;
                border-left: 4px solid #2196f3;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #2563eb;
                transition: all 0.3s ease;
            }

            .insight-item:hover {
                transform: translateX(8px);
                box-shadow: 0 4px 12px rgba(33, 150, 243, 0.15);
            }

            .insight-item::before {
                content: '•';
                font-size: 18px;
                color: #2196f3;
            }

            /* 새로운 카드 스타일 */
            .score-bars {
                display: flex;
                flex-direction: column;
                gap: 35px;
                margin-bottom: 40px;
            }
            
            .score-bar-item {
                background: linear-gradient(145deg, #ffffff, #f8fafc);
                border-radius: 24px;
                padding: 32px;
                box-shadow: 
                    0 20px 40px -12px rgba(0, 0, 0, 0.15),
                    0 8px 24px -8px rgba(0, 0, 0, 0.08),
                    inset 0 1px 0 rgba(255, 255, 255, 0.8);
                border: 1px solid rgba(255, 255, 255, 0.8);
                position: relative;
                overflow: hidden;
                transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            }
            .score-bar-item::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, 
                    rgba(33, 150, 243, 0.8) 0%,
                    rgba(0, 123, 255, 0.8) 25%,
                    rgba(96, 165, 250, 0.8) 50%,
                    rgba(37, 99, 235, 0.8) 75%,
                    rgba(30, 64, 175, 0.8) 100%);
                border-radius: 24px 24px 0 0;
            }
            
            .score-bar-item:hover {
                transform: translateY(-4px);
                box-shadow: 
                    0 32px 64px -16px rgba(0, 0, 0, 0.12),
                    0 16px 32px -8px rgba(0, 0, 0, 0.08),
                    inset 0 1px 0 rgba(255, 255, 255, 0.9);
            }
            
            .score-bar-title {
                font-size: 18px;
                font-weight: 700;
                background: linear-gradient(135deg, #2196f3 0%, #007bff 100%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                text-align: center;
                margin-bottom: 24px;
                letter-spacing: -0.025em;
            }
            
            .score-bar-container {
                display: flex;
                align-items: center;
                gap: 20px;
                margin-bottom: 16px;
            }
            
            .left-label, .right-label {
                font-size: 13px;
                font-weight: 600;
                min-width: 80px;
                text-align: center;
                padding: 8px 12px;
                border-radius: 16px;
                transition: all 0.3s ease;
                position: relative;
            }
            
            .left-label {
                background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
                color: #2563eb;
                border: 1px solid rgba(37, 99, 235, 0.2);
            }
            
            .right-label {
                background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
                color: #007bff;
                border: 1px solid rgba(0, 123, 255, 0.2);
            }
            
            .score-bar-track {
                flex: 1;
                height: 18px;
                background: linear-gradient(145deg, #f1f3f6, #e2e6ea);
                border-radius: 9px;
                position: relative;
                overflow: hidden;
                box-shadow: 
                    inset 0 1px 4px rgba(0, 0, 0, 0.06),
                    inset 0 1px 2px rgba(0, 0, 0, 0.03);
                border: 1px solid rgba(0, 0, 0, 0.04);
            }
            
            .score-bar-center {
                position: absolute;
                left: 50%;
                top: 0;
                width: 2px;
                height: 100%;
                background: linear-gradient(180deg, #8e9aaf 0%, #6c757d 100%);
                transform: translateX(-50%);
                z-index: 2;
                border-radius: 1px;
                box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.3);
            }
            
            .score-bar-fill {
                height: 100%;
                border-radius: 9px;
                position: relative;
                z-index: 1;
                transition: width 1.5s cubic-bezier(0.4, 0, 0.2, 1);
                animation: fillAnimation 2s ease-in-out;
                overflow: hidden;
            }
            
            @keyframes fillAnimation {
                0% { width: 50% !important; opacity: 0.5; }
                50% { opacity: 0.8; }
                100% { opacity: 1; }
            }
            
            .score-bar-fill::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(90deg, 
                    rgba(255, 255, 255, 0.3) 0%, 
                    rgba(255, 255, 255, 0.1) 50%, 
                    rgba(255, 255, 255, 0.3) 100%);
                animation: shimmer 3s infinite;
            }
            
            @keyframes shimmer {
                0% { transform: translateX(-100%); }
                100% { transform: translateX(100%); }
            }
            
            .score-bar-ab {
                background: linear-gradient(135deg, #2196f3 0%, #60a5fa 50%, #007bff 100%);
                box-shadow: 0 4px 16px rgba(33, 150, 243, 0.25);
            }
            
            .score-bar-ri {
                background: linear-gradient(135deg, #2563eb 0%, #60a5fa 50%, #007bff 100%);
                box-shadow: 0 4px 16px rgba(37, 99, 235, 0.25);
            }
            
            .score-bar-st {
                background: linear-gradient(135deg, #1e40af 0%, #2563eb 50%, #60a5fa 100%);
                box-shadow: 0 4px 16px rgba(30, 64, 175, 0.25);
            }
            
            .score-bar-df {
                background: linear-gradient(135deg, #007bff 0%, #2563eb 50%, #1e40af 100%);
                box-shadow: 0 4px 16px rgba(0, 123, 255, 0.25);
            }
            
            .score-bar-indicator {
                position: absolute;
                top: -6px;
                width: 16px;
                height: 30px;
                background: linear-gradient(145deg, #2d3436, #636e72);
                border-radius: 10px;
                transform: translateX(-50%);
                transition: left 1.5s cubic-bezier(0.4, 0, 0.2, 1);
                z-index: 4;
                box-shadow: 
                    0 6px 20px rgba(0, 0, 0, 0.2),
                    0 3px 8px rgba(0, 0, 0, 0.15),
                    inset 0 1px 0 rgba(255, 255, 255, 0.2);
                border: 1px solid rgba(255, 255, 255, 0.3);
                animation: indicatorPulse 2s ease-in-out infinite;
            }
            
            @keyframes indicatorPulse {
                0%, 100% { 
                    box-shadow: 
                        0 8px 24px rgba(0, 0, 0, 0.2),
                        0 4px 12px rgba(0, 0, 0, 0.15),
                        0 0 0 0 rgba(255, 255, 255, 0.4);
                }
                50% { 
                    box-shadow: 
                        0 12px 32px rgba(0, 0, 0, 0.25),
                        0 6px 16px rgba(0, 0, 0, 0.2),
                        0 0 0 8px rgba(255, 255, 255, 0.1);
                }
            }
            
            .score-bar-indicator::before {
                content: '';
                position: absolute;
                top: -9px;
                left: 50%;
                width: 0;
                height: 0;
                border-left: 8px solid transparent;
                border-right: 8px solid transparent;
                border-bottom: 9px solid #2d3436;
                transform: translateX(-50%);
                filter: drop-shadow(0 -2px 4px rgba(0, 0, 0, 0.2));
            }
            
            .score-bar-indicator::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 6px;
                height: 6px;
                background: radial-gradient(circle, #74b9ff 0%, #0984e3 100%);
                border-radius: 50%;
                transform: translate(-50%, -50%);
                box-shadow: 0 0 8px rgba(116, 185, 255, 0.8);
                animation: dotPulse 2s ease-in-out infinite;
            }
            
            @keyframes dotPulse {
                0%, 100% { transform: translate(-50%, -50%) scale(1); }
                50% { transform: translate(-50%, -50%) scale(1.2); }
            }
            
            .score-bar-result {
                font-size: 15px;
                text-align: center;
                font-weight: 600;
                padding: 12px 20px;
                border-radius: 20px;
                background: linear-gradient(145deg, #f8fafc, #e2e8f0);
                border: 1px solid rgba(226, 232, 240, 0.8);
                transition: all 0.3s ease;
                animation: resultFadeIn 0.5s ease-out 1.5s both;
            }
            
            @keyframes resultFadeIn {
                from { 
                    opacity: 0; 
                    transform: translateY(10px); 
                }
                to { 
                    opacity: 1; 
                    transform: translateY(0); 
                }
            }
            

            
            .result-buttons {
                margin-top: 40px;
                display: flex;
                gap: 20px;
                justify-content: center;
            }
            
            .btn-restart, .btn-profile {
                padding: 16px 32px;
                border-radius: 50px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                border: none;
            }
            
            .btn-restart {
                background: linear-gradient(45deg, #6c757d, #5a6268);
                color: white;
                box-shadow: 0 4px 16px rgba(108, 117, 125, 0.3);
            }
            
            .btn-restart:hover {
                background: linear-gradient(45deg, #5a6268, #495057);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(108, 117, 125, 0.4);
            }
            
            .btn-profile {
                background: linear-gradient(45deg, #28a745, #20c997);
                color: white;
                box-shadow: 0 4px 16px rgba(40, 167, 69, 0.3);
            }
            
            .btn-profile:hover {
                background: linear-gradient(45deg, #20c997, #17a2b8);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            }
            
            @keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(30px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            /* 반응형 디자인 */
            @media (max-width: 768px) {
                .content-area {
                    padding: 20px 10px;
                }
                
                .main-title {
                    font-size: 28px;
                }
                
                .sub-title {
                    font-size: 16px;
                }
                
                .answer-options {
                    grid-template-columns: repeat(7, 1fr);
                    gap: 5px;
                }
                
                .option-label {
                    padding: 10px 4px;
                }
                
                .option-text {
                    font-size: 10px;
                }
                
                .progress-nav {
                    grid-template-columns: repeat(2, 1fr);
                }
                
                .score-bars {
                    gap: 24px;
                }
                
                .score-bar-item {
                    padding: 24px 20px;
                    border-radius: 20px;
                }
                
                .score-bar-title {
                    font-size: 16px;
                    margin-bottom: 20px;
                }
                
                .score-bar-container {
                    gap: 12px;
                    margin-bottom: 14px;
                }
                
                .left-label, .right-label {
                    font-size: 11px;
                    min-width: 60px;
                    padding: 6px 10px;
                    border-radius: 12px;
                }
                
                .score-bar-track {
                    height: 16px;
                    border-radius: 8px;
                }
                
                .score-bar-center {
                    width: 1px;
                }
                
                .score-bar-fill {
                    border-radius: 8px;
                }
                
                .score-bar-indicator {
                    width: 14px;
                    height: 26px;
                    top: -5px;
                    border-radius: 8px;
                }
                
                .score-bar-indicator::before {
                    top: -7px;
                    border-left: 6px solid transparent;
                    border-right: 6px solid transparent;
                    border-bottom: 7px solid #2d3436;
                }
                
                .score-bar-indicator::after {
                    width: 4px;
                    height: 4px;
                }
                
                .score-bar-result {
                    font-size: 13px;
                    padding: 10px 16px;
                    border-radius: 16px;
                }
                
                .result-buttons {
                    flex-direction: column;
                }
                
                .result-card {
                    padding: 40px 24px;
                    border-radius: 24px;
                    margin-bottom: 30px;
                }
                
                .mbti-result-image {
                    max-width: 240px;
                    margin-bottom: 24px;
                }
                
                .result-type-code {
                    font-size: 56px;
                    letter-spacing: 2px;
                    margin-bottom: 20px;
                }
                
                .result-type-name {
                    font-size: 26px;
                    margin-bottom: 16px;
                }
                
                .result-type-desc {
                    font-size: 16px;
                }
                
                /* 탭 반응형 디자인 */
                .tab-buttons {
                    flex-direction: column;
                    gap: 4px;
                    padding: 6px;
                }
                
                .tab-button {
                    padding: 14px 20px;
                    font-size: 15px;
                }
                
                .tab-content {
                    min-height: 300px;
                }
                
                .code-analysis-title,
                .answer-analysis-title {
                    font-size: 24px;
                    margin-bottom: 30px;
                }
            }

            /* ===== 상세 분석 결과 스타일 ===== */
            .detailed-section {
                max-width: 800px;
                margin: 0 auto 40px auto;
                text-align: left;
            }
            .detailed-title {
                font-size: 24px;
                font-weight: 600;
                color: #333333;
                text-align: center;
                margin-bottom: 30px;
                letter-spacing: -0.02em;
                position: relative;
                padding-bottom: 16px;
            }
            .detailed-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 60px;
                height: 3px;
                background: #007bff;
                border-radius: 2px;
            }
            .section-item {
                background: white;
                border-radius: 10px;
                padding: 24px 26px;
                margin-bottom: 22px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
                border: 1px solid rgba(0, 0, 0, 0.03);
                opacity: 0;
                transform: translateY(20px);
                transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            }
            .section-item.animated {
                opacity: 1;
                transform: translateY(0);
            }
            .section-item:hover {
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            }
            .section-header {
                font-size: 18px;
                font-weight: 600;
                color: #333333;
                margin-bottom: 20px;
                display: flex;
                align-items: center;
                gap: 8px;
                border-bottom: 1px solid #e9ecef;
                padding-bottom: 14px;
                letter-spacing: -0.01em;
                position: relative;
            }
            .section-header::after {
                content: '';
                position: absolute;
                bottom: -1px;
                left: 0;
                width: 60px;
                height: 3px;
                background: #007bff;
                border-radius: 2px;
            }
            .reasoning-content {
                background: #f8faff;
                border-radius: 8px;
                padding: 24px;
                border-left: 3px solid #007bff;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
                position: relative;
            }
            .reasoning-content::before {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                bottom: 0;
                width: 3px;
                background: #007bff;
                border-radius: 3px 0 0 3px;
            }
            .detailed-reasoning {
                font-size: 15px;
                line-height: 1.6;
                color: #333333;
                margin: 0;
                font-style: normal;
                font-weight: 400;
                letter-spacing: -0.01em;
                padding-left: 8px;
                border-left: 2px solid #e6f2ff;
            }
            .code-patterns-list {
                display: flex;
                flex-direction: column;
                gap: 16px;
            }
            .pattern-item {
                background: #ffffff;
                border-radius: 10px;
                padding: 22px;
                border: 1px solid #e9ecef;
                margin-bottom: 20px;
                box-shadow: 0 3px 8px rgba(0, 0, 0, 0.04);
                transition: all 0.2s ease;
                position: relative;
                overflow: hidden;
            }
            .pattern-item:hover {
                border-color: #007bff;
                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.1);
            }
            .pattern-item::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: #007bff;
                opacity: 0.8;
            }
            .pattern-header {
                display: flex;
                flex-wrap: nowrap;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 16px;
                padding-bottom: 12px;
                border-bottom: 1px solid #edf2f7;
                position: relative;
                gap: 10px;
            }
            .pattern-title {
                font-size: 16px;
                font-weight: 600;
                color: #333333;
                margin: 0;
                letter-spacing: -0.01em;
                padding-left: 12px;
                border-left: 3px solid #007bff;
                flex: 1;
                min-width: 0;
                overflow-wrap: break-word;
                word-wrap: break-word;
            }
            .pattern-impact {
                display: flex;
                align-items: center;
                gap: 10px;
                background: #f0f7ff;
                padding: 8px 14px;
                border-radius: 6px;
                border: 1px solid #e1ebfa;
                flex-shrink: 0;
                white-space: nowrap;
                min-width: 160px;
            }
            .impact-label {
                font-size: 12px;
                color: #2d3748;
                font-weight: 600;
            }
            .impact-score {
                display: flex;
                gap: 4px;
                padding: 4px;
                background: rgba(255, 255, 255, 0.7);
                border-radius: 12px;
            }
            .impact-bar {
                width: 8px;
                height: 8px;
                background: #e9ecef;
                border-radius: 50%;
                border: 1px solid #dde5ef;
            }
            .impact-bar.filled {
                background: #007bff;
                border-color: #0056b3;
                box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);
            }
            .impact-number {
                font-size: 12px;
                font-weight: 700;
                color: #0056b3;
                background: #e6f2ff;
                padding: 2px 8px;
                border-radius: 10px;
                margin-left: 4px;
            }
            .pattern-description {
                font-size: 15px;
                color: #333333;
                line-height: 1.6;
                margin: 18px 0;
                padding: 8px 12px;
                background-color: #f9fbfe;
                border-radius: 6px;
                border-left: 3px solid #e6f0fd;
            }
            .pattern-evidence {
                background: #f8f9fa;
                border-radius: 8px;
                padding: 16px 18px;
                position: relative;
                margin-top: 16px;
                border-top: 1px dashed #e9ecef;
                padding-top: 20px;
            }
            .pattern-evidence::before {
                content: '코드';
                position: absolute;
                top: -9px;
                left: 16px;
                padding: 2px 12px;
                font-size: 12px;
                background: #f0f4f8;
                color: #4a5568;
                border-radius: 12px;
                font-weight: 500;
            }
            .pattern-evidence ul {
                margin: 0;
                padding-left: 16px;
            }
            .pattern-evidence li {
                font-size: 13px;
                color: #495057;
                margin-bottom: 8px;
                line-height: 1.5;
                padding: 6px 8px;
                background: #ffffff;
                border-radius: 4px;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            }
            .strengths-list, .suggestions-list {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }
            .strength-item {
                background: #f9fcff;
                border-radius: 8px;
                padding: 16px 20px;
                border-left: 3px solid #007bff;
                display: flex;
                align-items: center;
                gap: 12px;
                font-size: 15px;
                color: #333333;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
                transition: all 0.2s ease;
                position: relative;
            }
            .strength-item:hover {
                background: #f0f7ff;
                border-color: #0056b3;
                box-shadow: 0 3px 10px rgba(0, 123, 255, 0.12);
            }
            .strength-item:nth-child(odd) {
                background: #f3f9ff;
            }
            .strength-item::after {
                content: '';
                position: absolute;
                right: 16px;
                top: 50%;
                transform: translateY(-50%);
                width: 8px;
                height: 8px;
                background: #007bff;
                opacity: 0.3;
                border-radius: 50%;
            }
            .strength-icon {
                display: flex;
                align-items: center;
                justify-content: center;
                min-width: 28px;
                height: 28px;
                background: #e6f2ff;
                border-radius: 50%;
                color: #007bff;
                font-size: 12px;
                box-shadow: 0 2px 5px rgba(0, 123, 255, 0.15);
                border: 1px solid #cce5ff;
            }
            .strength-icon i {
                color: #007bff;
                font-size: 12px;
            }
            .suggestion-item {
                background: #fafeff;
                border-radius: 8px;
                padding: 16px 20px 16px 16px;
                border-left: 3px solid #0284c7;
                display: flex;
                align-items: center;
                gap: 14px;
                font-size: 15px;
                color: #333333;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
                transition: all 0.2s ease;
                position: relative;
                margin-left: 4px;
            }
            .suggestion-item:hover {
                background: #f0faff;
                border-color: #0369a1;
                box-shadow: 0 3px 10px rgba(2, 132, 199, 0.12);
            }
            .suggestion-item:nth-child(odd) {
                background: #f3fcff;
            }
            .suggestion-item::before {
                content: '';
                position: absolute;
                left: -4px;
                top: 12px;
                height: calc(100% - 24px);
                width: 1px;
                background: #bae6fd;
            }
            .suggestion-icon {
                display: flex;
                align-items: center;
                justify-content: center;
                min-width: 28px;
                height: 28px;
                background: #e0f2fe;
                border-radius: 50%;
                color: #0284c7;
                font-size: 12px;
                box-shadow: 0 2px 5px rgba(2, 132, 199, 0.15);
                border: 1px solid #bae6fd;
            }
            .suggestion-icon i {
                color: #0284c7;
                font-size: 12px;
            }
            .no-patterns, .no-strengths, .no-suggestions, .error-message {
                text-align: center;
                color: #64748b;
                padding: 30px 16px;
                background: #f8fafc;
                border-radius: 8px;
                font-size: 15px;
                border: 1px dashed #e2e8f0;
                position: relative;
            }
            .no-patterns::before, .no-strengths::before, .no-suggestions::before, .error-message::before {
                content: '';
                position: absolute;
                left: 50%;
                top: -12px;
                width: 24px;
                height: 24px;
                background: #f8fafc;
                border: 1px dashed #e2e8f0;
                border-radius: 50%;
                transform: translateX(-50%) rotate(45deg);
            }
        ]]></style>

        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
	</head>

	<body ev:onpageload="scwin.onpageload">
		<w2:wframe src="../common/Header.xml" id="headerFrame" />

		<xf:group class="main-container">
			<xf:group class="content-area">

				<!-- 설문 섹션 -->
				<xf:group class="survey-section">
					<xf:group class="page-header">
						<w2:textbox class="main-title" label="개발자 성향 설문조사" tagname="h1"></w2:textbox>
						<w2:textbox class="sub-title" label="당신의 개발 스타일과 선호도를 알아보세요" tagname="p"></w2:textbox>
					</xf:group>

					<!-- 진행률 섹션 -->
					<xf:group class="progress-section">
						<xf:group class="progress-header">
							<w2:textbox class="progress-title" label="진행률" tagname="div"></w2:textbox>
							<w2:textbox class="progress-text" label="0 / 20 완료 (0%)" tagname="div"></w2:textbox>
						</xf:group>

						<xf:group class="progress-bar">
							<w2:textbox class="progress-fill" label="" tagname="div" style="width: 0%;"></w2:textbox>
						</xf:group>

						<xf:group class="progress-nav">
							<w2:textbox class="progress-axis" label="Builder vs Architect" tagname="div"></w2:textbox>
							<w2:textbox class="progress-axis" label="Innovate vs Refactor" tagname="div"></w2:textbox>
							<w2:textbox class="progress-axis" label="Solo vs Team" tagname="div"></w2:textbox>
							<w2:textbox class="progress-axis" label="Debug vs Feature" tagname="div"></w2:textbox>
						</xf:group>
					</xf:group>

					<!-- 설문 문항 컨테이너 -->
					<xf:group class="question-container"></xf:group>

					<!-- 제출 버튼 -->
					<xf:group class="submit-section">
						<xf:trigger class="btn-submit  disabled" ev:onclick="scwin.btn_submit_onclick" style="disabled: true;">
							<xf:label>분석 시작</xf:label>
						</xf:trigger>
					</xf:group>
				</xf:group>

				<!-- 결과 섹션 -->
				<xf:group class="result-section">
					<xf:group class="result-header">
						<w2:textbox class="result-title" label="설문 분석 결과" tagname="h1"></w2:textbox>
						<w2:textbox class="result-subtitle" label="당신의 codeFIT은..." tagname="p"></w2:textbox>
					</xf:group>
					<xf:group class="result-card">
						<img id="mbtiResultImage" src="" alt="MBTI Result Image" class="mbti-result-image" />
						<w2:textbox class="result-type-code" label="ARTF" tagname="div"></w2:textbox>
						<w2:textbox class="result-type-name" label="구조적 팀 빌더" tagname="div"></w2:textbox>
						<w2:textbox class="result-type-desc" label="검증된 기술로 팀과 함께 견고한 기능을 구축하는 개발자" tagname="div"></w2:textbox>
					</xf:group>

					                    <xf:group class="score-section">
                        <w2:textbox class="score-title" label="성향 분석 결과" tagname="div"></w2:textbox>

                        <xf:group class="score-bars">
                            <!-- Builder vs Architect -->
                            <xf:group class="score-bar-item">
                                <w2:textbox class="score-bar-title" label="개발 스타일" tagname="div"></w2:textbox>
                                <xf:group class="score-bar-container">
                                    <w2:textbox class="left-label" label="Builder" tagname="div"></w2:textbox>
                                    <xf:group class="score-bar-track">
                                        <w2:textbox class="score-bar-center" label="" tagname="div"></w2:textbox>
                                        <w2:textbox class="score-bar-fill score-bar-ab" label="" tagname="div" style="width: 50%;"></w2:textbox>
                                        <w2:textbox class="score-bar-indicator score-indicator-ab" label="" tagname="div" style="left: 50%;"></w2:textbox>
                                    </xf:group>
                                    <w2:textbox class="right-label" label="Architect" tagname="div"></w2:textbox>
                                </xf:group>
                                <w2:textbox class="score-bar-result ab-result" label="분석 중..." tagname="div"></w2:textbox>
                            </xf:group>

                            <!-- Innovate vs Refactor -->
                            <xf:group class="score-bar-item">
                                <w2:textbox class="score-bar-title" label="기술 성향" tagname="div"></w2:textbox>
                                <xf:group class="score-bar-container">
                                    <w2:textbox class="left-label" label="Innovate" tagname="div"></w2:textbox>
                                    <xf:group class="score-bar-track">
                                        <w2:textbox class="score-bar-center" label="" tagname="div"></w2:textbox>
                                        <w2:textbox class="score-bar-fill score-bar-ri" label="" tagname="div" style="width: 50%;"></w2:textbox>
                                        <w2:textbox class="score-bar-indicator score-indicator-ri" label="" tagname="div" style="left: 50%;"></w2:textbox>
                                    </xf:group>
                                    <w2:textbox class="right-label" label="Refactor" tagname="div"></w2:textbox>
                                </xf:group>
                                <w2:textbox class="score-bar-result ri-result" label="분석 중..." tagname="div"></w2:textbox>
                            </xf:group>

                            <!-- Solo vs Team -->
                            <xf:group class="score-bar-item">
                                <w2:textbox class="score-bar-title" label="협업 방식" tagname="div"></w2:textbox>
                                <xf:group class="score-bar-container">
                                    <w2:textbox class="left-label" label="Solo" tagname="div"></w2:textbox>
                                    <xf:group class="score-bar-track">
                                        <w2:textbox class="score-bar-center" label="" tagname="div"></w2:textbox>
                                        <w2:textbox class="score-bar-fill score-bar-st" label="" tagname="div" style="width: 50%;"></w2:textbox>
                                        <w2:textbox class="score-bar-indicator score-indicator-st" label="" tagname="div" style="left: 50%;"></w2:textbox>
                                    </xf:group>
                                    <w2:textbox class="right-label" label="Team" tagname="div"></w2:textbox>
                                </xf:group>
                                <w2:textbox class="score-bar-result st-result" label="분석 중..." tagname="div"></w2:textbox>
                            </xf:group>

                            <!-- Debug vs Feature -->
                            <xf:group class="score-bar-item">
                                <w2:textbox class="score-bar-title" label="작업 선호" tagname="div"></w2:textbox>
                                <xf:group class="score-bar-container">
                                    <w2:textbox class="left-label" label="Debug" tagname="div"></w2:textbox>
                                    <xf:group class="score-bar-track">
                                        <w2:textbox class="score-bar-center" label="" tagname="div"></w2:textbox>
                                        <w2:textbox class="score-bar-fill score-bar-df" label="" tagname="div" style="width: 50%;"></w2:textbox>
                                        <w2:textbox class="score-bar-indicator score-indicator-df" label="" tagname="div" style="left: 50%;"></w2:textbox>
                                    </xf:group>
                                    <w2:textbox class="right-label" label="Feature" tagname="div"></w2:textbox>
                                </xf:group>
                                <w2:textbox class="score-bar-result df-result" label="분석 중..." tagname="div"></w2:textbox>
                            </xf:group>
                        </xf:group>

                        <!-- 분석 결과 탭 섹션 -->
                        <xf:group class="analysis-tabs" role="tablist">
                          <xf:group class="tab-buttons">
                            <xf:trigger class="tab-button active" data-tab="code" ev:onclick="scwin.switchTab" ev:onkeydown="scwin.handleTabKeydown" role="tab" aria-selected="true" aria-controls="code-tab">
                              <xf:label>코드 분석 결과</xf:label>
                            </xf:trigger>
                            <xf:trigger class="tab-button" data-tab="survey" ev:onclick="scwin.switchTab" ev:onkeydown="scwin.handleTabKeydown" role="tab" aria-selected="false" aria-controls="survey-tab">
                              <xf:label>설문 답변 분석</xf:label>
                            </xf:trigger>
                          </xf:group>
                          
                          <xf:group class="tab-content">
                            <!-- 코드 분석 탭 -->
                            <xf:group class="tab-panel active" id="code-tab" data-tab="code" role="tabpanel" aria-hidden="false" style="display: block;">
                              <!-- 코드 분석 내용은 JavaScript에서 동적으로 생성됨 -->
                            </xf:group>
                            
                            <!-- 설문 답변 분석 탭 -->
                            <xf:group class="tab-panel" id="survey-tab" data-tab="survey" role="tabpanel" aria-hidden="true" style="display: none;">
                              <!-- 답변 분석 내용은 JavaScript에서 동적으로 생성됨 -->
                            </xf:group>
                          </xf:group>
                        </xf:group>


                    </xf:group>

					<xf:group class="result-buttons">
						<xf:trigger class="btn-restart" ev:onclick="scwin.btn_restart_onclick">
							<xf:label>다시하기</xf:label>
						</xf:trigger>
						<xf:trigger class="btn-profile" ev:onclick="scwin.goToUserDetail">
							<xf:label>프로필로 이동</xf:label>
						</xf:trigger>
					</xf:group>
				</xf:group>

			</xf:group>
		</xf:group>
	</body>
</html>
