<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
				           http://www.springframework.org/schema/context 
				           http://www.springframework.org/schema/context/spring-context-4.0.xsd 
				           http://www.springframework.org/schema/aop
				           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <context:component-scan base-package="com.demo" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!-- context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/ -->
    </context:component-scan>
   
    <!-- EL Controller Interceptor -->
    <bean id="controllerInterceptorAdvice" class="com.inswave.elfw.intercept.ElControllerInterceptor" />          
    <aop:config>        
 		<aop:pointcut id="controllerInterceptorPointcut" expression="execution(* com.demo..*Controller.*(..))" /> 		
        <aop:advisor advice-ref="controllerInterceptorAdvice"
            pointcut-ref="controllerInterceptorPointcut" id="controllerInterceptorAdvisor" order="0"/>
    </aop:config>        

	<!-- EL Common Controller -->
	<bean id="elCommController" class="com.inswave.elfw.web.ElCommController"/>
 
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">   
    	<property name="useRegisteredSuffixPatternMatch" value="true"/>
    </bean>
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >           
		<property name="customArgumentResolvers">
			<list>
				<bean class="com.inswave.elfw.resolver.ElModelAttributeMethodProcessor">		
				</bean>	
			</list>
		</property>        
    </bean>
    
    
    <bean id="exceptionResolver" class="com.inswave.elfw.exception.ElExceptionResolver">
        <property name="view" value="sampleError"/>
    </bean>

    <bean class="com.inswave.elfw.view.ElInternalResourceDefaultViewResolver"> 
    	<property name="order"  value="3"/>    	
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>        
	<property name="defaultViewName"  value="sampleDefault"/>   
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        
        <property name="contentNegotiationManager">
        	<bean class="org.springframework.web.accept.ContentNegotiationManager">
        		<constructor-arg>
        			<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
        				<constructor-arg>
        					<map>
				            	<entry key="pwkjson"   value="application/json"/>
				            	<entry key="fld"   value="application/fld"/>
				            	<entry key="pwkxml"    value="application/xml"/>
				            	<entry key="test"   value="application/test"/>
        					</map>
        				</constructor-arg>
        			</bean>
        		</constructor-arg>
        	</bean>
        </property>
        
        
	    <property name="defaultViews">
	      <list>	        
	        <bean class="com.inswave.elfw.view.ElMappingJacksonJsonView">	
	           <property name="contentType" value="application/json"/>        	
	           <property name="objectMapper" ref="jsonMapper"/>	        	
	        </bean>
	        	        		        	
			<bean class="com.inswave.elfw.view.ElMarshallingView">
		        <property name="contentType" value="application/test"/>
				<constructor-arg ref="xmlMarshaller">
	            </constructor-arg>		           	            	            	       
		    </bean>

			<bean class="com.inswave.elfw.view.ElMarshalling2View">
	           <property name="contentType" value="application/xml"/>        	     		                    	            	       
		    </bean>
		    		    
	        <bean class="com.inswave.elfw.view.ElFldMarshallingView">	     
	              <property name="contentType" value="application/fld"/>           		        	
	        </bean>		   		    
		    
	      </list>
	    </property>

    </bean>
    
    
</beans>
