<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demo.proworks.domain.codeanalysis.dao.CodeAnalysisDAO">

    <!-- 코드 분석 결과 등록 -->
    <insert id="insertCodeAnalysisResult" parameterType="com.demo.proworks.domain.codeanalysis.vo.CodeAnalysisResultVo" useGeneratedKeys="true" keyProperty="analysisId">
        <![CDATA[
        INSERT INTO code_analyses (
            user_id,
            analysis_result,
            TYPE_CODE,
            development_style_score,
            developer_preference_score,
            confidence_score,
            language,
            comment
        ) VALUES (
            #{userId},
            #{analysisResult},
            #{typeCode},
            #{developmentStyleScore},
            #{developerPreferenceScore},
            #{confidenceScore},
            #{language},
            #{comment}
        )
        ]]>
    </insert>

    <!-- 타입별 최신 코드 분석 결과 조회 -->
    <select id="selectLatestCodeAnalysisResult" parameterType="long" resultType="com.demo.proworks.domain.codeanalysis.vo.CodeAnalysisResultVo">
        <![CDATA[
        SELECT
            analysis_id AS analysisId,
            user_id AS userId,
            analysis_result AS analysisResult,
            TYPE_CODE AS typeCode,
            development_style_score AS developmentStyleScore,
            developer_preference_score AS developerPreferenceScore,
            confidence_score AS confidenceScore,
            language,
            comment,
            created_at AS createdAt
        FROM code_analyses
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
        LIMIT 1
        ]]>
    </select>

    <!-- 코드 분석 결과 수정 -->
    <update id="updateCodeAnalysisResult" parameterType="com.demo.proworks.domain.codeanalysis.vo.CodeAnalysisResultVo">
        <![CDATA[
        UPDATE code_analyses SET
            analysis_result = #{analysisResult},
            TYPE_CODE = #{typeCode},
            development_style_score = #{developmentStyleScore},
            developer_preference_score = #{developerPreferenceScore},
            confidence_score = #{confidenceScore}
        WHERE analysis_id = #{analysisId}
        ]]>
    </update>

    <!-- 코드 분석 결과 삭제 -->
    <delete id="deleteCodeAnalysisResult" parameterType="long">
        <![CDATA[
        DELETE FROM code_analyses
        WHERE analysis_id = #{analysisId}
        ]]>
    </delete>

    <!-- 타입별 코드 분석 결과 목록 조회 -->
    <select id="selectCodeAnalysisResultList" parameterType="long" resultType="com.demo.proworks.domain.codeanalysis.vo.CodeAnalysisResultVo">
        <![CDATA[
        SELECT
            analysis_id AS analysisId,
            user_id AS userId,
            analysis_result AS analysisResult,
            TYPE_CODE AS typeCode,
            development_style_score AS developmentStyleScore,
            developer_preference_score AS developerPreferenceScore,
            confidence_score AS confidenceScore,
            language,
            comment,
            created_at AS createdAt
        FROM code_analyses
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
        ]]>
    </select>

    <!-- 타입 코드별 분석 결과 통계 조회 -->
    <select id="selectTypeCodeStatistics" resultType="java.util.HashMap">
        <![CDATA[
        SELECT
            TYPE_CODE,
            COUNT(*) as count,
            AVG(development_style_score) as avg_development_style_score,
            AVG(collaboration_score) as avg_collaboration_score,
            AVG(confidence_score) as avg_confidence_score
        FROM code_analyses
        WHERE TYPE_CODE IS NOT NULL
        GROUP BY TYPE_CODE
        ORDER BY count DESC
        ]]>
    </select>

    <!-- 개발자 유형 정보와 조인하여 조회 -->
    <select id="selectCodeAnalysisWithType" parameterType="long" resultType="java.util.HashMap">
        <![CDATA[
        SELECT
            ca.analysis_id,
            ca.user_id,
            ca.analysis_result,
            ca.TYPE_CODE,
            ca.development_style_score,
            ca.developer_preference_score,
            ca.confidence_score,
            ca.language,
            ca.comment,
            ca.created_at,
            dt.type_code as developer_type_code,
            dt.A_Bscore,
            dt.R_Iscore,
            dt.S_Tscore,
            dt.D_Fscore,
            dt.analyed_at,
            dt.user_id as mbti_user_id
        FROM code_analyses ca
        LEFT JOIN users_mbti_types dt ON ca.user_id = dt.user_id
        WHERE ca.user_id = #{userId}
        ORDER BY ca.created_at DESC
        ]]>
    </select>

    <!-- 모든 개발자 타입 정보 조회 -->
    <select id="selectAllDeveloperTypeInfo" resultType="java.util.HashMap">
        <![CDATA[
        SELECT
            TYPE_CODE,
            TYPE_NAME,
            TYPE_DESCRIPTION,
            TYPE_CHARACTERISTICS
        FROM developer_type_info
        ORDER BY TYPE_CODE
        ]]>
    </select>

    <!-- 타입 호환성 조회 -->
    <select id="selectTypeCompatibility" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
        SELECT
            TYPE_CODE_1,
            TYPE_CODE_2,
            COMPATIBILITY_SCORE,
            COMPATIBILITY_DESCRIPTION
        FROM type_compatibility
        WHERE TYPE_CODE_1 = #{typeCode1}
        AND TYPE_CODE_2 = #{typeCode2}
        ]]>
    </select>

    <!-- 코드 분석 완료 시 users_mbti_types 로우 생성/업데이트 -->
    <insert id="upsertMbtiTypeForCode" parameterType="Long">
        <![CDATA[
        INSERT INTO users_mbti_types (
            user_id,
            is_code_checked,
            analyed_at
        ) VALUES (
            #{userId},
            1,
            NOW()
        )
        ON DUPLICATE KEY UPDATE
            is_code_checked = 1,
            analyed_at = NOW()
        ]]>
    </insert>

</mapper> 