<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	@subject     : 회사정보 관련 처리를 담당하는 Sql Mapper
	@description : 회사정보 관련 처리를 담당하는 Sql Mapper
	@author      : Inswave
	@since       : 2025/07/03
	@modification
	===========================================================
	DATE              AUTHOR             DESC
	===========================================================
	2025/07/03              Inswave             최초 생성
 -->
<mapper namespace="com.demo.proworks.domain.corporate">
    <insert id="insertCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo">
<!-- 회사정보를 등록한다. -->	
    		
INSERT INTO COMPANYS   /* QueryID : com.demo.proworks.domain.corporate.insertCorporate */
( 
    COMPANY_ID
    <if test="businessNumber     != null"> , BUSINESS_NUMBER      </if>
    <if test="businessCertificate!= null"> , BUSINESS_CERTIFICATE </if>
    <if test="industry            != null"> , INDUSTRY             </if>
    <if test="empCount           != null"> , EMP_COUNT            </if>
    <if test="description         != null"> , DESCRIPTION          </if>
    <if test="logoFileName      != null"> , LOGO_FILE_NAME       </if>
    <if test="userId             != null"> , USER_ID              </if>
)
VALUES  
( 
    #{companyId}
    <if test="businessNumber     != null"> , #{businessNumber}      </if>
    <if test="businessCertificate!= null"> , #{businessCertificate} </if>
    <if test="industry            != null"> , #{industry}             </if>
    <if test="empCount           != null"> , #{empCount}            </if>
    <if test="description         != null"> , #{description}          </if>
    <if test="logoFileName      != null"> , #{logoFileName}       </if>
    <if test="userId             != null"> , #{userId}              </if>
)
</insert>	
	
    <update id="updateCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo">
    	<!-- 회사정보를 갱신한다. -->
    	
        UPDATE COMPANYS    /* QueryID : com.demo.proworks.domain.corporate.updateCorporate */      
      	  SET  
                COMPANY_ID           = #{companyId}                  	                       
            <if test="businessNumber     != null"> , BUSINESS_NUMBER      = #{businessNumber}      </if>
            <if test="businessCertificate!= null"> , BUSINESS_CERTIFICATE = #{businessCertificate} </if>
            <if test="industry            != null"> , INDUSTRY             = #{industry}             </if>
            <if test="empCount           != null"> , EMP_COUNT            = #{empCount}            </if>
            <if test="description         != null"> , DESCRIPTION          = #{description}          </if>
            <if test="logoFileName      != null"> , LOGO_FILE_NAME       = #{logoFileName}       </if>                 
        WHERE   
                COMPANY_ID           = #{companyId}          
    </update>
	
    <delete id="deleteCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo">
    	<!-- 회사정보를 삭제한다. -->
    	
        DELETE FROM COMPANYS   /* QueryID : com.demo.proworks.domain.corporate.deleteCorporate */ 
        WHERE   
                COMPANY_ID           = #{companyId}                  
    </delete>
	
    <select id="selectCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo" resultType="com.demo.proworks.domain.corporate.vo.CorporateVo">
    	<!-- 회사정보를 상세 조회한다. -->	
        SELECT     /* QueryID : com.demo.proworks.domain.corporate.selectCorporate */
            COMPANY_ID as companyId, BUSINESS_NUMBER as businessNumber, BUSINESS_CERTIFICATE as businessCertificate, INDUSTRY as industry, EMP_COUNT as empCount, DESCRIPTION as description, LOGO_FILE_NAME as logoFileName
        FROM COMPANYS 
        WHERE 
                COMPANY_ID           = #{companyId}          			
    </select>
	
    <select id="selectListCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo" resultType="com.demo.proworks.domain.corporate.vo.CorporateVo">
    	<!-- 회사정보 목록을 조회한다. -->
           SELECT    /* QueryID : com.demo.proworks.domain.corporate.selectListCorporate */
               COMPANY_ID as companyId, BUSINESS_NUMBER as businessNumber, BUSINESS_CERTIFICATE as businessCertificate, INDUSTRY as industry, EMP_COUNT as empCount, DESCRIPTION as description, LOGO_FILE_NAME as logoFileName		       
           FROM (
               SELECT  S.*, CEIL( (@ROWNUM:=@ROWNUM+1) / #{pageSize} ) AS PAGE
               FROM (				
                   SELECT 
                       *  		                  
                   FROM COMPANYS
                   WHERE  1=1    		
	     																														
               ) S, (SELECT @ROWNUM := 0) TMP
           ) A
            WHERE PAGE = #{pageIndex}
    </select>
	
    <select id="selectListCountCorporate" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo" resultType="long">
    <!-- 회사정보 목록의 카운트를 조회한다. -->
    
         SELECT    /* QueryID : com.demo.proworks.domain.corporate.selectListCountCorporate */
             COUNT(*) totcnt  		                  
         FROM COMPANYS
         WHERE  1=1    		

    </select>


<select id="selectCorporateByEmail" parameterType="com.demo.proworks.domain.corporate.vo.CorporateVo" resultType="com.demo.proworks.domain.corporate.vo.CorporateVo">
<!-- 회사정보를 상세 조회한다. -->	
SELECT /* QueryID : com.demo.proworks.domain.corporate.selectCorporate */
    c.COMPANY_ID as companyId, 
    c.BUSINESS_NUMBER as businessNumber, 
    c.BUSINESS_CERTIFICATE as businessCertificate, 
    c.INDUSTRY as industry, 
    c.EMP_COUNT as empCount, 
    c.DESCRIPTION as description, 
    c.LOGO_FILE_NAME as logoFileName,
    u.email as email,
    u.password as password
FROM COMPANYS c
INNER JOIN USERS u ON c.USER_ID = u.USER_ID
WHERE u.email = #{email}
</select>
</mapper>
